

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Feb 14 16:32:31 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     6                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,space=0,delta=2
    12                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=1
    26                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=1
    27                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2,group=1
    55                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2,group=1
    56                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2,group=1
    57                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2,group=1
    58                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2,group=1
    59                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2,group=1
    60                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    63                           	psect	text47,local,class=CODE,space=0,merge=1,delta=2
    64                           	psect	intentry,global,class=CODE,space=0,delta=2
    65                           	psect	text49,local,class=CODE,space=0,merge=1,delta=2
    66                           	psect	text50,local,class=CODE,space=0,merge=1,delta=2
    67                           	psect	text51,local,class=CODE,space=0,merge=1,delta=2
    68                           	psect	text52,local,class=CODE,space=0,merge=1,delta=2
    69                           	psect	text53,local,class=CODE,space=0,merge=1,delta=2
    70                           	psect	text54,local,class=CODE,space=0,merge=1,delta=2
    71                           	psect	text55,local,class=CODE,space=0,merge=1,delta=2
    72                           	psect	text56,local,class=CODE,space=0,merge=1,delta=2
    73                           	psect	text57,local,class=CODE,space=0,merge=1,delta=2
    74                           	psect	text58,local,class=CODE,space=0,merge=1,delta=2
    75                           	psect	text59,local,class=CODE,space=0,merge=1,delta=2
    76                           	psect	text60,local,class=CODE,space=0,merge=1,delta=2
    77                           	psect	text61,local,class=CODE,space=0,merge=1,delta=2
    78                           	psect	text62,local,class=CODE,space=0,merge=1,delta=2
    79                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    80                           	dabs	1,0x7E,2
    81     0000                     
    82                           ; Generated 07/09/2023 GMT
    83                           ; 
    84                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution. Publication is not required when
    98                           ;        this file is used in an embedded application.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC16F1827 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116     0008                     bsr             equ	8
   117     0005                     fsr0h           equ	5
   118     0004                     fsr0l           equ	4
   119     0007                     fsr1h           equ	7
   120     0006                     fsr1l           equ	6
   121     0000                     indf            equ	0
   122     0000                     indf0           equ	0
   123     0001                     indf1           equ	1
   124     000B                     intcon          equ	11
   125     0002                     pc              equ	2
   126     0002                     pcl             equ	2
   127     000A                     pclath          equ	10
   128     0003                     status          equ	3
   129     0009                     wreg            equ	9
   130     0000                     INDF0           equ	0	;# 
   131     0001                     INDF1           equ	1	;# 
   132     0002                     PCL             equ	2	;# 
   133     0003                     STATUS          equ	3	;# 
   134     0004                     FSR0L           equ	4	;# 
   135     0005                     FSR0H           equ	5	;# 
   136     0006                     FSR1L           equ	6	;# 
   137     0007                     FSR1H           equ	7	;# 
   138     0008                     BSR             equ	8	;# 
   139     0009                     WREG            equ	9	;# 
   140     000A                     PCLATH          equ	10	;# 
   141     000B                     INTCON          equ	11	;# 
   142     000C                     PORTA           equ	12	;# 
   143     000D                     PORTB           equ	13	;# 
   144     0011                     PIR1            equ	17	;# 
   145     0012                     PIR2            equ	18	;# 
   146     0013                     PIR3            equ	19	;# 
   147     0014                     PIR4            equ	20	;# 
   148     0015                     TMR0            equ	21	;# 
   149     0016                     TMR1            equ	22	;# 
   150     0016                     TMR1L           equ	22	;# 
   151     0017                     TMR1H           equ	23	;# 
   152     0018                     T1CON           equ	24	;# 
   153     0019                     T1GCON          equ	25	;# 
   154     001A                     TMR2            equ	26	;# 
   155     001B                     PR2             equ	27	;# 
   156     001C                     T2CON           equ	28	;# 
   157     001E                     CPSCON0         equ	30	;# 
   158     001F                     CPSCON1         equ	31	;# 
   159     008C                     TRISA           equ	140	;# 
   160     008D                     TRISB           equ	141	;# 
   161     0091                     PIE1            equ	145	;# 
   162     0092                     PIE2            equ	146	;# 
   163     0093                     PIE3            equ	147	;# 
   164     0094                     PIE4            equ	148	;# 
   165     0095                     OPTION_REG      equ	149	;# 
   166     0096                     PCON            equ	150	;# 
   167     0097                     WDTCON          equ	151	;# 
   168     0098                     OSCTUNE         equ	152	;# 
   169     0099                     OSCCON          equ	153	;# 
   170     009A                     OSCSTAT         equ	154	;# 
   171     009B                     ADRES           equ	155	;# 
   172     009B                     ADRESL          equ	155	;# 
   173     009C                     ADRESH          equ	156	;# 
   174     009D                     ADCON0          equ	157	;# 
   175     009E                     ADCON1          equ	158	;# 
   176     010C                     LATA            equ	268	;# 
   177     010D                     LATB            equ	269	;# 
   178     0111                     CM1CON0         equ	273	;# 
   179     0112                     CM1CON1         equ	274	;# 
   180     0113                     CM2CON0         equ	275	;# 
   181     0114                     CM2CON1         equ	276	;# 
   182     0115                     CMOUT           equ	277	;# 
   183     0116                     BORCON          equ	278	;# 
   184     0117                     FVRCON          equ	279	;# 
   185     0118                     DACCON0         equ	280	;# 
   186     0119                     DACCON1         equ	281	;# 
   187     011A                     SRCON0          equ	282	;# 
   188     011B                     SRCON1          equ	283	;# 
   189     011D                     APFCON0         equ	285	;# 
   190     011E                     APFCON1         equ	286	;# 
   191     018C                     ANSELA          equ	396	;# 
   192     018D                     ANSELB          equ	397	;# 
   193     0191                     EEADR           equ	401	;# 
   194     0191                     EEADRL          equ	401	;# 
   195     0192                     EEADRH          equ	402	;# 
   196     0193                     EEDAT           equ	403	;# 
   197     0193                     EEDATL          equ	403	;# 
   198     0193                     EEDATA          equ	403	;# 
   199     0194                     EEDATH          equ	404	;# 
   200     0195                     EECON1          equ	405	;# 
   201     0196                     EECON2          equ	406	;# 
   202     0199                     RCREG           equ	409	;# 
   203     019A                     TXREG           equ	410	;# 
   204     019B                     SP1BRG          equ	411	;# 
   205     019B                     SP1BRGL         equ	411	;# 
   206     019B                     SPBRG           equ	411	;# 
   207     019B                     SPBRGL          equ	411	;# 
   208     019C                     SP1BRGH         equ	412	;# 
   209     019C                     SPBRGH          equ	412	;# 
   210     019D                     RCSTA           equ	413	;# 
   211     019E                     TXSTA           equ	414	;# 
   212     019F                     BAUDCON         equ	415	;# 
   213     020C                     WPUA            equ	524	;# 
   214     020D                     WPUB            equ	525	;# 
   215     0211                     SSP1BUF         equ	529	;# 
   216     0211                     SSPBUF          equ	529	;# 
   217     0212                     SSP1ADD         equ	530	;# 
   218     0212                     SSPADD          equ	530	;# 
   219     0213                     SSP1MSK         equ	531	;# 
   220     0213                     SSPMSK          equ	531	;# 
   221     0214                     SSP1STAT        equ	532	;# 
   222     0214                     SSPSTAT         equ	532	;# 
   223     0215                     SSP1CON1        equ	533	;# 
   224     0215                     SSPCON1         equ	533	;# 
   225     0215                     SSPCON          equ	533	;# 
   226     0216                     SSP1CON2        equ	534	;# 
   227     0216                     SSPCON2         equ	534	;# 
   228     0217                     SSP1CON3        equ	535	;# 
   229     0217                     SSPCON3         equ	535	;# 
   230     0219                     SSP2BUF         equ	537	;# 
   231     021A                     SSP2ADD         equ	538	;# 
   232     021B                     SSP2MSK         equ	539	;# 
   233     021C                     SSP2STAT        equ	540	;# 
   234     021D                     SSP2CON1        equ	541	;# 
   235     021E                     SSP2CON2        equ	542	;# 
   236     021F                     SSP2CON3        equ	543	;# 
   237     0291                     CCPR1           equ	657	;# 
   238     0291                     CCPR1L          equ	657	;# 
   239     0292                     CCPR1H          equ	658	;# 
   240     0293                     CCP1CON         equ	659	;# 
   241     0294                     PWM1CON         equ	660	;# 
   242     0295                     CCP1AS          equ	661	;# 
   243     0295                     ECCP1AS         equ	661	;# 
   244     0296                     PSTR1CON        equ	662	;# 
   245     0298                     CCPR2           equ	664	;# 
   246     0298                     CCPR2L          equ	664	;# 
   247     0299                     CCPR2H          equ	665	;# 
   248     029A                     CCP2CON         equ	666	;# 
   249     029B                     PWM2CON         equ	667	;# 
   250     029C                     CCP2AS          equ	668	;# 
   251     029C                     ECCP2AS         equ	668	;# 
   252     029D                     PSTR2CON        equ	669	;# 
   253     029E                     CCPTMRS         equ	670	;# 
   254     029E                     CCPTMRS0        equ	670	;# 
   255     0311                     CCPR3           equ	785	;# 
   256     0311                     CCPR3L          equ	785	;# 
   257     0312                     CCPR3H          equ	786	;# 
   258     0313                     CCP3CON         equ	787	;# 
   259     0318                     CCPR4           equ	792	;# 
   260     0318                     CCPR4L          equ	792	;# 
   261     0319                     CCPR4H          equ	793	;# 
   262     031A                     CCP4CON         equ	794	;# 
   263     0394                     IOCBP           equ	916	;# 
   264     0395                     IOCBN           equ	917	;# 
   265     0396                     IOCBF           equ	918	;# 
   266     039A                     CLKRCON         equ	922	;# 
   267     039C                     MDCON           equ	924	;# 
   268     039D                     MDSRC           equ	925	;# 
   269     039E                     MDCARL          equ	926	;# 
   270     039F                     MDCARH          equ	927	;# 
   271     0415                     TMR4            equ	1045	;# 
   272     0416                     PR4             equ	1046	;# 
   273     0417                     T4CON           equ	1047	;# 
   274     041C                     TMR6            equ	1052	;# 
   275     041D                     PR6             equ	1053	;# 
   276     041E                     T6CON           equ	1054	;# 
   277     0FE4                     STATUS_SHAD     equ	4068	;# 
   278     0FE5                     WREG_SHAD       equ	4069	;# 
   279     0FE6                     BSR_SHAD        equ	4070	;# 
   280     0FE7                     PCLATH_SHAD     equ	4071	;# 
   281     0FE8                     FSR0L_SHAD      equ	4072	;# 
   282     0FE9                     FSR0H_SHAD      equ	4073	;# 
   283     0FEA                     FSR1L_SHAD      equ	4074	;# 
   284     0FEB                     FSR1H_SHAD      equ	4075	;# 
   285     0FED                     STKPTR          equ	4077	;# 
   286     0FEE                     TOSL            equ	4078	;# 
   287     0FEF                     TOSH            equ	4079	;# 
   288     0000                     INDF0           equ	0	;# 
   289     0001                     INDF1           equ	1	;# 
   290     0002                     PCL             equ	2	;# 
   291     0003                     STATUS          equ	3	;# 
   292     0004                     FSR0L           equ	4	;# 
   293     0005                     FSR0H           equ	5	;# 
   294     0006                     FSR1L           equ	6	;# 
   295     0007                     FSR1H           equ	7	;# 
   296     0008                     BSR             equ	8	;# 
   297     0009                     WREG            equ	9	;# 
   298     000A                     PCLATH          equ	10	;# 
   299     000B                     INTCON          equ	11	;# 
   300     000C                     PORTA           equ	12	;# 
   301     000D                     PORTB           equ	13	;# 
   302     0011                     PIR1            equ	17	;# 
   303     0012                     PIR2            equ	18	;# 
   304     0013                     PIR3            equ	19	;# 
   305     0014                     PIR4            equ	20	;# 
   306     0015                     TMR0            equ	21	;# 
   307     0016                     TMR1            equ	22	;# 
   308     0016                     TMR1L           equ	22	;# 
   309     0017                     TMR1H           equ	23	;# 
   310     0018                     T1CON           equ	24	;# 
   311     0019                     T1GCON          equ	25	;# 
   312     001A                     TMR2            equ	26	;# 
   313     001B                     PR2             equ	27	;# 
   314     001C                     T2CON           equ	28	;# 
   315     001E                     CPSCON0         equ	30	;# 
   316     001F                     CPSCON1         equ	31	;# 
   317     008C                     TRISA           equ	140	;# 
   318     008D                     TRISB           equ	141	;# 
   319     0091                     PIE1            equ	145	;# 
   320     0092                     PIE2            equ	146	;# 
   321     0093                     PIE3            equ	147	;# 
   322     0094                     PIE4            equ	148	;# 
   323     0095                     OPTION_REG      equ	149	;# 
   324     0096                     PCON            equ	150	;# 
   325     0097                     WDTCON          equ	151	;# 
   326     0098                     OSCTUNE         equ	152	;# 
   327     0099                     OSCCON          equ	153	;# 
   328     009A                     OSCSTAT         equ	154	;# 
   329     009B                     ADRES           equ	155	;# 
   330     009B                     ADRESL          equ	155	;# 
   331     009C                     ADRESH          equ	156	;# 
   332     009D                     ADCON0          equ	157	;# 
   333     009E                     ADCON1          equ	158	;# 
   334     010C                     LATA            equ	268	;# 
   335     010D                     LATB            equ	269	;# 
   336     0111                     CM1CON0         equ	273	;# 
   337     0112                     CM1CON1         equ	274	;# 
   338     0113                     CM2CON0         equ	275	;# 
   339     0114                     CM2CON1         equ	276	;# 
   340     0115                     CMOUT           equ	277	;# 
   341     0116                     BORCON          equ	278	;# 
   342     0117                     FVRCON          equ	279	;# 
   343     0118                     DACCON0         equ	280	;# 
   344     0119                     DACCON1         equ	281	;# 
   345     011A                     SRCON0          equ	282	;# 
   346     011B                     SRCON1          equ	283	;# 
   347     011D                     APFCON0         equ	285	;# 
   348     011E                     APFCON1         equ	286	;# 
   349     018C                     ANSELA          equ	396	;# 
   350     018D                     ANSELB          equ	397	;# 
   351     0191                     EEADR           equ	401	;# 
   352     0191                     EEADRL          equ	401	;# 
   353     0192                     EEADRH          equ	402	;# 
   354     0193                     EEDAT           equ	403	;# 
   355     0193                     EEDATL          equ	403	;# 
   356     0193                     EEDATA          equ	403	;# 
   357     0194                     EEDATH          equ	404	;# 
   358     0195                     EECON1          equ	405	;# 
   359     0196                     EECON2          equ	406	;# 
   360     0199                     RCREG           equ	409	;# 
   361     019A                     TXREG           equ	410	;# 
   362     019B                     SP1BRG          equ	411	;# 
   363     019B                     SP1BRGL         equ	411	;# 
   364     019B                     SPBRG           equ	411	;# 
   365     019B                     SPBRGL          equ	411	;# 
   366     019C                     SP1BRGH         equ	412	;# 
   367     019C                     SPBRGH          equ	412	;# 
   368     019D                     RCSTA           equ	413	;# 
   369     019E                     TXSTA           equ	414	;# 
   370     019F                     BAUDCON         equ	415	;# 
   371     020C                     WPUA            equ	524	;# 
   372     020D                     WPUB            equ	525	;# 
   373     0211                     SSP1BUF         equ	529	;# 
   374     0211                     SSPBUF          equ	529	;# 
   375     0212                     SSP1ADD         equ	530	;# 
   376     0212                     SSPADD          equ	530	;# 
   377     0213                     SSP1MSK         equ	531	;# 
   378     0213                     SSPMSK          equ	531	;# 
   379     0214                     SSP1STAT        equ	532	;# 
   380     0214                     SSPSTAT         equ	532	;# 
   381     0215                     SSP1CON1        equ	533	;# 
   382     0215                     SSPCON1         equ	533	;# 
   383     0215                     SSPCON          equ	533	;# 
   384     0216                     SSP1CON2        equ	534	;# 
   385     0216                     SSPCON2         equ	534	;# 
   386     0217                     SSP1CON3        equ	535	;# 
   387     0217                     SSPCON3         equ	535	;# 
   388     0219                     SSP2BUF         equ	537	;# 
   389     021A                     SSP2ADD         equ	538	;# 
   390     021B                     SSP2MSK         equ	539	;# 
   391     021C                     SSP2STAT        equ	540	;# 
   392     021D                     SSP2CON1        equ	541	;# 
   393     021E                     SSP2CON2        equ	542	;# 
   394     021F                     SSP2CON3        equ	543	;# 
   395     0291                     CCPR1           equ	657	;# 
   396     0291                     CCPR1L          equ	657	;# 
   397     0292                     CCPR1H          equ	658	;# 
   398     0293                     CCP1CON         equ	659	;# 
   399     0294                     PWM1CON         equ	660	;# 
   400     0295                     CCP1AS          equ	661	;# 
   401     0295                     ECCP1AS         equ	661	;# 
   402     0296                     PSTR1CON        equ	662	;# 
   403     0298                     CCPR2           equ	664	;# 
   404     0298                     CCPR2L          equ	664	;# 
   405     0299                     CCPR2H          equ	665	;# 
   406     029A                     CCP2CON         equ	666	;# 
   407     029B                     PWM2CON         equ	667	;# 
   408     029C                     CCP2AS          equ	668	;# 
   409     029C                     ECCP2AS         equ	668	;# 
   410     029D                     PSTR2CON        equ	669	;# 
   411     029E                     CCPTMRS         equ	670	;# 
   412     029E                     CCPTMRS0        equ	670	;# 
   413     0311                     CCPR3           equ	785	;# 
   414     0311                     CCPR3L          equ	785	;# 
   415     0312                     CCPR3H          equ	786	;# 
   416     0313                     CCP3CON         equ	787	;# 
   417     0318                     CCPR4           equ	792	;# 
   418     0318                     CCPR4L          equ	792	;# 
   419     0319                     CCPR4H          equ	793	;# 
   420     031A                     CCP4CON         equ	794	;# 
   421     0394                     IOCBP           equ	916	;# 
   422     0395                     IOCBN           equ	917	;# 
   423     0396                     IOCBF           equ	918	;# 
   424     039A                     CLKRCON         equ	922	;# 
   425     039C                     MDCON           equ	924	;# 
   426     039D                     MDSRC           equ	925	;# 
   427     039E                     MDCARL          equ	926	;# 
   428     039F                     MDCARH          equ	927	;# 
   429     0415                     TMR4            equ	1045	;# 
   430     0416                     PR4             equ	1046	;# 
   431     0417                     T4CON           equ	1047	;# 
   432     041C                     TMR6            equ	1052	;# 
   433     041D                     PR6             equ	1053	;# 
   434     041E                     T6CON           equ	1054	;# 
   435     0FE4                     STATUS_SHAD     equ	4068	;# 
   436     0FE5                     WREG_SHAD       equ	4069	;# 
   437     0FE6                     BSR_SHAD        equ	4070	;# 
   438     0FE7                     PCLATH_SHAD     equ	4071	;# 
   439     0FE8                     FSR0L_SHAD      equ	4072	;# 
   440     0FE9                     FSR0H_SHAD      equ	4073	;# 
   441     0FEA                     FSR1L_SHAD      equ	4074	;# 
   442     0FEB                     FSR1H_SHAD      equ	4075	;# 
   443     0FED                     STKPTR          equ	4077	;# 
   444     0FEE                     TOSL            equ	4078	;# 
   445     0FEF                     TOSH            equ	4079	;# 
   446     0000                     INDF0           equ	0	;# 
   447     0001                     INDF1           equ	1	;# 
   448     0002                     PCL             equ	2	;# 
   449     0003                     STATUS          equ	3	;# 
   450     0004                     FSR0L           equ	4	;# 
   451     0005                     FSR0H           equ	5	;# 
   452     0006                     FSR1L           equ	6	;# 
   453     0007                     FSR1H           equ	7	;# 
   454     0008                     BSR             equ	8	;# 
   455     0009                     WREG            equ	9	;# 
   456     000A                     PCLATH          equ	10	;# 
   457     000B                     INTCON          equ	11	;# 
   458     000C                     PORTA           equ	12	;# 
   459     000D                     PORTB           equ	13	;# 
   460     0011                     PIR1            equ	17	;# 
   461     0012                     PIR2            equ	18	;# 
   462     0013                     PIR3            equ	19	;# 
   463     0014                     PIR4            equ	20	;# 
   464     0015                     TMR0            equ	21	;# 
   465     0016                     TMR1            equ	22	;# 
   466     0016                     TMR1L           equ	22	;# 
   467     0017                     TMR1H           equ	23	;# 
   468     0018                     T1CON           equ	24	;# 
   469     0019                     T1GCON          equ	25	;# 
   470     001A                     TMR2            equ	26	;# 
   471     001B                     PR2             equ	27	;# 
   472     001C                     T2CON           equ	28	;# 
   473     001E                     CPSCON0         equ	30	;# 
   474     001F                     CPSCON1         equ	31	;# 
   475     008C                     TRISA           equ	140	;# 
   476     008D                     TRISB           equ	141	;# 
   477     0091                     PIE1            equ	145	;# 
   478     0092                     PIE2            equ	146	;# 
   479     0093                     PIE3            equ	147	;# 
   480     0094                     PIE4            equ	148	;# 
   481     0095                     OPTION_REG      equ	149	;# 
   482     0096                     PCON            equ	150	;# 
   483     0097                     WDTCON          equ	151	;# 
   484     0098                     OSCTUNE         equ	152	;# 
   485     0099                     OSCCON          equ	153	;# 
   486     009A                     OSCSTAT         equ	154	;# 
   487     009B                     ADRES           equ	155	;# 
   488     009B                     ADRESL          equ	155	;# 
   489     009C                     ADRESH          equ	156	;# 
   490     009D                     ADCON0          equ	157	;# 
   491     009E                     ADCON1          equ	158	;# 
   492     010C                     LATA            equ	268	;# 
   493     010D                     LATB            equ	269	;# 
   494     0111                     CM1CON0         equ	273	;# 
   495     0112                     CM1CON1         equ	274	;# 
   496     0113                     CM2CON0         equ	275	;# 
   497     0114                     CM2CON1         equ	276	;# 
   498     0115                     CMOUT           equ	277	;# 
   499     0116                     BORCON          equ	278	;# 
   500     0117                     FVRCON          equ	279	;# 
   501     0118                     DACCON0         equ	280	;# 
   502     0119                     DACCON1         equ	281	;# 
   503     011A                     SRCON0          equ	282	;# 
   504     011B                     SRCON1          equ	283	;# 
   505     011D                     APFCON0         equ	285	;# 
   506     011E                     APFCON1         equ	286	;# 
   507     018C                     ANSELA          equ	396	;# 
   508     018D                     ANSELB          equ	397	;# 
   509     0191                     EEADR           equ	401	;# 
   510     0191                     EEADRL          equ	401	;# 
   511     0192                     EEADRH          equ	402	;# 
   512     0193                     EEDAT           equ	403	;# 
   513     0193                     EEDATL          equ	403	;# 
   514     0193                     EEDATA          equ	403	;# 
   515     0194                     EEDATH          equ	404	;# 
   516     0195                     EECON1          equ	405	;# 
   517     0196                     EECON2          equ	406	;# 
   518     0199                     RCREG           equ	409	;# 
   519     019A                     TXREG           equ	410	;# 
   520     019B                     SP1BRG          equ	411	;# 
   521     019B                     SP1BRGL         equ	411	;# 
   522     019B                     SPBRG           equ	411	;# 
   523     019B                     SPBRGL          equ	411	;# 
   524     019C                     SP1BRGH         equ	412	;# 
   525     019C                     SPBRGH          equ	412	;# 
   526     019D                     RCSTA           equ	413	;# 
   527     019E                     TXSTA           equ	414	;# 
   528     019F                     BAUDCON         equ	415	;# 
   529     020C                     WPUA            equ	524	;# 
   530     020D                     WPUB            equ	525	;# 
   531     0211                     SSP1BUF         equ	529	;# 
   532     0211                     SSPBUF          equ	529	;# 
   533     0212                     SSP1ADD         equ	530	;# 
   534     0212                     SSPADD          equ	530	;# 
   535     0213                     SSP1MSK         equ	531	;# 
   536     0213                     SSPMSK          equ	531	;# 
   537     0214                     SSP1STAT        equ	532	;# 
   538     0214                     SSPSTAT         equ	532	;# 
   539     0215                     SSP1CON1        equ	533	;# 
   540     0215                     SSPCON1         equ	533	;# 
   541     0215                     SSPCON          equ	533	;# 
   542     0216                     SSP1CON2        equ	534	;# 
   543     0216                     SSPCON2         equ	534	;# 
   544     0217                     SSP1CON3        equ	535	;# 
   545     0217                     SSPCON3         equ	535	;# 
   546     0219                     SSP2BUF         equ	537	;# 
   547     021A                     SSP2ADD         equ	538	;# 
   548     021B                     SSP2MSK         equ	539	;# 
   549     021C                     SSP2STAT        equ	540	;# 
   550     021D                     SSP2CON1        equ	541	;# 
   551     021E                     SSP2CON2        equ	542	;# 
   552     021F                     SSP2CON3        equ	543	;# 
   553     0291                     CCPR1           equ	657	;# 
   554     0291                     CCPR1L          equ	657	;# 
   555     0292                     CCPR1H          equ	658	;# 
   556     0293                     CCP1CON         equ	659	;# 
   557     0294                     PWM1CON         equ	660	;# 
   558     0295                     CCP1AS          equ	661	;# 
   559     0295                     ECCP1AS         equ	661	;# 
   560     0296                     PSTR1CON        equ	662	;# 
   561     0298                     CCPR2           equ	664	;# 
   562     0298                     CCPR2L          equ	664	;# 
   563     0299                     CCPR2H          equ	665	;# 
   564     029A                     CCP2CON         equ	666	;# 
   565     029B                     PWM2CON         equ	667	;# 
   566     029C                     CCP2AS          equ	668	;# 
   567     029C                     ECCP2AS         equ	668	;# 
   568     029D                     PSTR2CON        equ	669	;# 
   569     029E                     CCPTMRS         equ	670	;# 
   570     029E                     CCPTMRS0        equ	670	;# 
   571     0311                     CCPR3           equ	785	;# 
   572     0311                     CCPR3L          equ	785	;# 
   573     0312                     CCPR3H          equ	786	;# 
   574     0313                     CCP3CON         equ	787	;# 
   575     0318                     CCPR4           equ	792	;# 
   576     0318                     CCPR4L          equ	792	;# 
   577     0319                     CCPR4H          equ	793	;# 
   578     031A                     CCP4CON         equ	794	;# 
   579     0394                     IOCBP           equ	916	;# 
   580     0395                     IOCBN           equ	917	;# 
   581     0396                     IOCBF           equ	918	;# 
   582     039A                     CLKRCON         equ	922	;# 
   583     039C                     MDCON           equ	924	;# 
   584     039D                     MDSRC           equ	925	;# 
   585     039E                     MDCARL          equ	926	;# 
   586     039F                     MDCARH          equ	927	;# 
   587     0415                     TMR4            equ	1045	;# 
   588     0416                     PR4             equ	1046	;# 
   589     0417                     T4CON           equ	1047	;# 
   590     041C                     TMR6            equ	1052	;# 
   591     041D                     PR6             equ	1053	;# 
   592     041E                     T6CON           equ	1054	;# 
   593     0FE4                     STATUS_SHAD     equ	4068	;# 
   594     0FE5                     WREG_SHAD       equ	4069	;# 
   595     0FE6                     BSR_SHAD        equ	4070	;# 
   596     0FE7                     PCLATH_SHAD     equ	4071	;# 
   597     0FE8                     FSR0L_SHAD      equ	4072	;# 
   598     0FE9                     FSR0H_SHAD      equ	4073	;# 
   599     0FEA                     FSR1L_SHAD      equ	4074	;# 
   600     0FEB                     FSR1H_SHAD      equ	4075	;# 
   601     0FED                     STKPTR          equ	4077	;# 
   602     0FEE                     TOSL            equ	4078	;# 
   603     0FEF                     TOSH            equ	4079	;# 
   604     0000                     INDF0           equ	0	;# 
   605     0001                     INDF1           equ	1	;# 
   606     0002                     PCL             equ	2	;# 
   607     0003                     STATUS          equ	3	;# 
   608     0004                     FSR0L           equ	4	;# 
   609     0005                     FSR0H           equ	5	;# 
   610     0006                     FSR1L           equ	6	;# 
   611     0007                     FSR1H           equ	7	;# 
   612     0008                     BSR             equ	8	;# 
   613     0009                     WREG            equ	9	;# 
   614     000A                     PCLATH          equ	10	;# 
   615     000B                     INTCON          equ	11	;# 
   616     000C                     PORTA           equ	12	;# 
   617     000D                     PORTB           equ	13	;# 
   618     0011                     PIR1            equ	17	;# 
   619     0012                     PIR2            equ	18	;# 
   620     0013                     PIR3            equ	19	;# 
   621     0014                     PIR4            equ	20	;# 
   622     0015                     TMR0            equ	21	;# 
   623     0016                     TMR1            equ	22	;# 
   624     0016                     TMR1L           equ	22	;# 
   625     0017                     TMR1H           equ	23	;# 
   626     0018                     T1CON           equ	24	;# 
   627     0019                     T1GCON          equ	25	;# 
   628     001A                     TMR2            equ	26	;# 
   629     001B                     PR2             equ	27	;# 
   630     001C                     T2CON           equ	28	;# 
   631     001E                     CPSCON0         equ	30	;# 
   632     001F                     CPSCON1         equ	31	;# 
   633     008C                     TRISA           equ	140	;# 
   634     008D                     TRISB           equ	141	;# 
   635     0091                     PIE1            equ	145	;# 
   636     0092                     PIE2            equ	146	;# 
   637     0093                     PIE3            equ	147	;# 
   638     0094                     PIE4            equ	148	;# 
   639     0095                     OPTION_REG      equ	149	;# 
   640     0096                     PCON            equ	150	;# 
   641     0097                     WDTCON          equ	151	;# 
   642     0098                     OSCTUNE         equ	152	;# 
   643     0099                     OSCCON          equ	153	;# 
   644     009A                     OSCSTAT         equ	154	;# 
   645     009B                     ADRES           equ	155	;# 
   646     009B                     ADRESL          equ	155	;# 
   647     009C                     ADRESH          equ	156	;# 
   648     009D                     ADCON0          equ	157	;# 
   649     009E                     ADCON1          equ	158	;# 
   650     010C                     LATA            equ	268	;# 
   651     010D                     LATB            equ	269	;# 
   652     0111                     CM1CON0         equ	273	;# 
   653     0112                     CM1CON1         equ	274	;# 
   654     0113                     CM2CON0         equ	275	;# 
   655     0114                     CM2CON1         equ	276	;# 
   656     0115                     CMOUT           equ	277	;# 
   657     0116                     BORCON          equ	278	;# 
   658     0117                     FVRCON          equ	279	;# 
   659     0118                     DACCON0         equ	280	;# 
   660     0119                     DACCON1         equ	281	;# 
   661     011A                     SRCON0          equ	282	;# 
   662     011B                     SRCON1          equ	283	;# 
   663     011D                     APFCON0         equ	285	;# 
   664     011E                     APFCON1         equ	286	;# 
   665     018C                     ANSELA          equ	396	;# 
   666     018D                     ANSELB          equ	397	;# 
   667     0191                     EEADR           equ	401	;# 
   668     0191                     EEADRL          equ	401	;# 
   669     0192                     EEADRH          equ	402	;# 
   670     0193                     EEDAT           equ	403	;# 
   671     0193                     EEDATL          equ	403	;# 
   672     0193                     EEDATA          equ	403	;# 
   673     0194                     EEDATH          equ	404	;# 
   674     0195                     EECON1          equ	405	;# 
   675     0196                     EECON2          equ	406	;# 
   676     0199                     RCREG           equ	409	;# 
   677     019A                     TXREG           equ	410	;# 
   678     019B                     SP1BRG          equ	411	;# 
   679     019B                     SP1BRGL         equ	411	;# 
   680     019B                     SPBRG           equ	411	;# 
   681     019B                     SPBRGL          equ	411	;# 
   682     019C                     SP1BRGH         equ	412	;# 
   683     019C                     SPBRGH          equ	412	;# 
   684     019D                     RCSTA           equ	413	;# 
   685     019E                     TXSTA           equ	414	;# 
   686     019F                     BAUDCON         equ	415	;# 
   687     020C                     WPUA            equ	524	;# 
   688     020D                     WPUB            equ	525	;# 
   689     0211                     SSP1BUF         equ	529	;# 
   690     0211                     SSPBUF          equ	529	;# 
   691     0212                     SSP1ADD         equ	530	;# 
   692     0212                     SSPADD          equ	530	;# 
   693     0213                     SSP1MSK         equ	531	;# 
   694     0213                     SSPMSK          equ	531	;# 
   695     0214                     SSP1STAT        equ	532	;# 
   696     0214                     SSPSTAT         equ	532	;# 
   697     0215                     SSP1CON1        equ	533	;# 
   698     0215                     SSPCON1         equ	533	;# 
   699     0215                     SSPCON          equ	533	;# 
   700     0216                     SSP1CON2        equ	534	;# 
   701     0216                     SSPCON2         equ	534	;# 
   702     0217                     SSP1CON3        equ	535	;# 
   703     0217                     SSPCON3         equ	535	;# 
   704     0219                     SSP2BUF         equ	537	;# 
   705     021A                     SSP2ADD         equ	538	;# 
   706     021B                     SSP2MSK         equ	539	;# 
   707     021C                     SSP2STAT        equ	540	;# 
   708     021D                     SSP2CON1        equ	541	;# 
   709     021E                     SSP2CON2        equ	542	;# 
   710     021F                     SSP2CON3        equ	543	;# 
   711     0291                     CCPR1           equ	657	;# 
   712     0291                     CCPR1L          equ	657	;# 
   713     0292                     CCPR1H          equ	658	;# 
   714     0293                     CCP1CON         equ	659	;# 
   715     0294                     PWM1CON         equ	660	;# 
   716     0295                     CCP1AS          equ	661	;# 
   717     0295                     ECCP1AS         equ	661	;# 
   718     0296                     PSTR1CON        equ	662	;# 
   719     0298                     CCPR2           equ	664	;# 
   720     0298                     CCPR2L          equ	664	;# 
   721     0299                     CCPR2H          equ	665	;# 
   722     029A                     CCP2CON         equ	666	;# 
   723     029B                     PWM2CON         equ	667	;# 
   724     029C                     CCP2AS          equ	668	;# 
   725     029C                     ECCP2AS         equ	668	;# 
   726     029D                     PSTR2CON        equ	669	;# 
   727     029E                     CCPTMRS         equ	670	;# 
   728     029E                     CCPTMRS0        equ	670	;# 
   729     0311                     CCPR3           equ	785	;# 
   730     0311                     CCPR3L          equ	785	;# 
   731     0312                     CCPR3H          equ	786	;# 
   732     0313                     CCP3CON         equ	787	;# 
   733     0318                     CCPR4           equ	792	;# 
   734     0318                     CCPR4L          equ	792	;# 
   735     0319                     CCPR4H          equ	793	;# 
   736     031A                     CCP4CON         equ	794	;# 
   737     0394                     IOCBP           equ	916	;# 
   738     0395                     IOCBN           equ	917	;# 
   739     0396                     IOCBF           equ	918	;# 
   740     039A                     CLKRCON         equ	922	;# 
   741     039C                     MDCON           equ	924	;# 
   742     039D                     MDSRC           equ	925	;# 
   743     039E                     MDCARL          equ	926	;# 
   744     039F                     MDCARH          equ	927	;# 
   745     0415                     TMR4            equ	1045	;# 
   746     0416                     PR4             equ	1046	;# 
   747     0417                     T4CON           equ	1047	;# 
   748     041C                     TMR6            equ	1052	;# 
   749     041D                     PR6             equ	1053	;# 
   750     041E                     T6CON           equ	1054	;# 
   751     0FE4                     STATUS_SHAD     equ	4068	;# 
   752     0FE5                     WREG_SHAD       equ	4069	;# 
   753     0FE6                     BSR_SHAD        equ	4070	;# 
   754     0FE7                     PCLATH_SHAD     equ	4071	;# 
   755     0FE8                     FSR0L_SHAD      equ	4072	;# 
   756     0FE9                     FSR0H_SHAD      equ	4073	;# 
   757     0FEA                     FSR1L_SHAD      equ	4074	;# 
   758     0FEB                     FSR1H_SHAD      equ	4075	;# 
   759     0FED                     STKPTR          equ	4077	;# 
   760     0FEE                     TOSL            equ	4078	;# 
   761     0FEF                     TOSH            equ	4079	;# 
   762     0000                     INDF0           equ	0	;# 
   763     0001                     INDF1           equ	1	;# 
   764     0002                     PCL             equ	2	;# 
   765     0003                     STATUS          equ	3	;# 
   766     0004                     FSR0L           equ	4	;# 
   767     0005                     FSR0H           equ	5	;# 
   768     0006                     FSR1L           equ	6	;# 
   769     0007                     FSR1H           equ	7	;# 
   770     0008                     BSR             equ	8	;# 
   771     0009                     WREG            equ	9	;# 
   772     000A                     PCLATH          equ	10	;# 
   773     000B                     INTCON          equ	11	;# 
   774     000C                     PORTA           equ	12	;# 
   775     000D                     PORTB           equ	13	;# 
   776     0011                     PIR1            equ	17	;# 
   777     0012                     PIR2            equ	18	;# 
   778     0013                     PIR3            equ	19	;# 
   779     0014                     PIR4            equ	20	;# 
   780     0015                     TMR0            equ	21	;# 
   781     0016                     TMR1            equ	22	;# 
   782     0016                     TMR1L           equ	22	;# 
   783     0017                     TMR1H           equ	23	;# 
   784     0018                     T1CON           equ	24	;# 
   785     0019                     T1GCON          equ	25	;# 
   786     001A                     TMR2            equ	26	;# 
   787     001B                     PR2             equ	27	;# 
   788     001C                     T2CON           equ	28	;# 
   789     001E                     CPSCON0         equ	30	;# 
   790     001F                     CPSCON1         equ	31	;# 
   791     008C                     TRISA           equ	140	;# 
   792     008D                     TRISB           equ	141	;# 
   793     0091                     PIE1            equ	145	;# 
   794     0092                     PIE2            equ	146	;# 
   795     0093                     PIE3            equ	147	;# 
   796     0094                     PIE4            equ	148	;# 
   797     0095                     OPTION_REG      equ	149	;# 
   798     0096                     PCON            equ	150	;# 
   799     0097                     WDTCON          equ	151	;# 
   800     0098                     OSCTUNE         equ	152	;# 
   801     0099                     OSCCON          equ	153	;# 
   802     009A                     OSCSTAT         equ	154	;# 
   803     009B                     ADRES           equ	155	;# 
   804     009B                     ADRESL          equ	155	;# 
   805     009C                     ADRESH          equ	156	;# 
   806     009D                     ADCON0          equ	157	;# 
   807     009E                     ADCON1          equ	158	;# 
   808     010C                     LATA            equ	268	;# 
   809     010D                     LATB            equ	269	;# 
   810     0111                     CM1CON0         equ	273	;# 
   811     0112                     CM1CON1         equ	274	;# 
   812     0113                     CM2CON0         equ	275	;# 
   813     0114                     CM2CON1         equ	276	;# 
   814     0115                     CMOUT           equ	277	;# 
   815     0116                     BORCON          equ	278	;# 
   816     0117                     FVRCON          equ	279	;# 
   817     0118                     DACCON0         equ	280	;# 
   818     0119                     DACCON1         equ	281	;# 
   819     011A                     SRCON0          equ	282	;# 
   820     011B                     SRCON1          equ	283	;# 
   821     011D                     APFCON0         equ	285	;# 
   822     011E                     APFCON1         equ	286	;# 
   823     018C                     ANSELA          equ	396	;# 
   824     018D                     ANSELB          equ	397	;# 
   825     0191                     EEADR           equ	401	;# 
   826     0191                     EEADRL          equ	401	;# 
   827     0192                     EEADRH          equ	402	;# 
   828     0193                     EEDAT           equ	403	;# 
   829     0193                     EEDATL          equ	403	;# 
   830     0193                     EEDATA          equ	403	;# 
   831     0194                     EEDATH          equ	404	;# 
   832     0195                     EECON1          equ	405	;# 
   833     0196                     EECON2          equ	406	;# 
   834     0199                     RCREG           equ	409	;# 
   835     019A                     TXREG           equ	410	;# 
   836     019B                     SP1BRG          equ	411	;# 
   837     019B                     SP1BRGL         equ	411	;# 
   838     019B                     SPBRG           equ	411	;# 
   839     019B                     SPBRGL          equ	411	;# 
   840     019C                     SP1BRGH         equ	412	;# 
   841     019C                     SPBRGH          equ	412	;# 
   842     019D                     RCSTA           equ	413	;# 
   843     019E                     TXSTA           equ	414	;# 
   844     019F                     BAUDCON         equ	415	;# 
   845     020C                     WPUA            equ	524	;# 
   846     020D                     WPUB            equ	525	;# 
   847     0211                     SSP1BUF         equ	529	;# 
   848     0211                     SSPBUF          equ	529	;# 
   849     0212                     SSP1ADD         equ	530	;# 
   850     0212                     SSPADD          equ	530	;# 
   851     0213                     SSP1MSK         equ	531	;# 
   852     0213                     SSPMSK          equ	531	;# 
   853     0214                     SSP1STAT        equ	532	;# 
   854     0214                     SSPSTAT         equ	532	;# 
   855     0215                     SSP1CON1        equ	533	;# 
   856     0215                     SSPCON1         equ	533	;# 
   857     0215                     SSPCON          equ	533	;# 
   858     0216                     SSP1CON2        equ	534	;# 
   859     0216                     SSPCON2         equ	534	;# 
   860     0217                     SSP1CON3        equ	535	;# 
   861     0217                     SSPCON3         equ	535	;# 
   862     0219                     SSP2BUF         equ	537	;# 
   863     021A                     SSP2ADD         equ	538	;# 
   864     021B                     SSP2MSK         equ	539	;# 
   865     021C                     SSP2STAT        equ	540	;# 
   866     021D                     SSP2CON1        equ	541	;# 
   867     021E                     SSP2CON2        equ	542	;# 
   868     021F                     SSP2CON3        equ	543	;# 
   869     0291                     CCPR1           equ	657	;# 
   870     0291                     CCPR1L          equ	657	;# 
   871     0292                     CCPR1H          equ	658	;# 
   872     0293                     CCP1CON         equ	659	;# 
   873     0294                     PWM1CON         equ	660	;# 
   874     0295                     CCP1AS          equ	661	;# 
   875     0295                     ECCP1AS         equ	661	;# 
   876     0296                     PSTR1CON        equ	662	;# 
   877     0298                     CCPR2           equ	664	;# 
   878     0298                     CCPR2L          equ	664	;# 
   879     0299                     CCPR2H          equ	665	;# 
   880     029A                     CCP2CON         equ	666	;# 
   881     029B                     PWM2CON         equ	667	;# 
   882     029C                     CCP2AS          equ	668	;# 
   883     029C                     ECCP2AS         equ	668	;# 
   884     029D                     PSTR2CON        equ	669	;# 
   885     029E                     CCPTMRS         equ	670	;# 
   886     029E                     CCPTMRS0        equ	670	;# 
   887     0311                     CCPR3           equ	785	;# 
   888     0311                     CCPR3L          equ	785	;# 
   889     0312                     CCPR3H          equ	786	;# 
   890     0313                     CCP3CON         equ	787	;# 
   891     0318                     CCPR4           equ	792	;# 
   892     0318                     CCPR4L          equ	792	;# 
   893     0319                     CCPR4H          equ	793	;# 
   894     031A                     CCP4CON         equ	794	;# 
   895     0394                     IOCBP           equ	916	;# 
   896     0395                     IOCBN           equ	917	;# 
   897     0396                     IOCBF           equ	918	;# 
   898     039A                     CLKRCON         equ	922	;# 
   899     039C                     MDCON           equ	924	;# 
   900     039D                     MDSRC           equ	925	;# 
   901     039E                     MDCARL          equ	926	;# 
   902     039F                     MDCARH          equ	927	;# 
   903     0415                     TMR4            equ	1045	;# 
   904     0416                     PR4             equ	1046	;# 
   905     0417                     T4CON           equ	1047	;# 
   906     041C                     TMR6            equ	1052	;# 
   907     041D                     PR6             equ	1053	;# 
   908     041E                     T6CON           equ	1054	;# 
   909     0FE4                     STATUS_SHAD     equ	4068	;# 
   910     0FE5                     WREG_SHAD       equ	4069	;# 
   911     0FE6                     BSR_SHAD        equ	4070	;# 
   912     0FE7                     PCLATH_SHAD     equ	4071	;# 
   913     0FE8                     FSR0L_SHAD      equ	4072	;# 
   914     0FE9                     FSR0H_SHAD      equ	4073	;# 
   915     0FEA                     FSR1L_SHAD      equ	4074	;# 
   916     0FEB                     FSR1H_SHAD      equ	4075	;# 
   917     0FED                     STKPTR          equ	4077	;# 
   918     0FEE                     TOSL            equ	4078	;# 
   919     0FEF                     TOSH            equ	4079	;# 
   920     0000                     INDF0           equ	0	;# 
   921     0001                     INDF1           equ	1	;# 
   922     0002                     PCL             equ	2	;# 
   923     0003                     STATUS          equ	3	;# 
   924     0004                     FSR0L           equ	4	;# 
   925     0005                     FSR0H           equ	5	;# 
   926     0006                     FSR1L           equ	6	;# 
   927     0007                     FSR1H           equ	7	;# 
   928     0008                     BSR             equ	8	;# 
   929     0009                     WREG            equ	9	;# 
   930     000A                     PCLATH          equ	10	;# 
   931     000B                     INTCON          equ	11	;# 
   932     000C                     PORTA           equ	12	;# 
   933     000D                     PORTB           equ	13	;# 
   934     0011                     PIR1            equ	17	;# 
   935     0012                     PIR2            equ	18	;# 
   936     0013                     PIR3            equ	19	;# 
   937     0014                     PIR4            equ	20	;# 
   938     0015                     TMR0            equ	21	;# 
   939     0016                     TMR1            equ	22	;# 
   940     0016                     TMR1L           equ	22	;# 
   941     0017                     TMR1H           equ	23	;# 
   942     0018                     T1CON           equ	24	;# 
   943     0019                     T1GCON          equ	25	;# 
   944     001A                     TMR2            equ	26	;# 
   945     001B                     PR2             equ	27	;# 
   946     001C                     T2CON           equ	28	;# 
   947     001E                     CPSCON0         equ	30	;# 
   948     001F                     CPSCON1         equ	31	;# 
   949     008C                     TRISA           equ	140	;# 
   950     008D                     TRISB           equ	141	;# 
   951     0091                     PIE1            equ	145	;# 
   952     0092                     PIE2            equ	146	;# 
   953     0093                     PIE3            equ	147	;# 
   954     0094                     PIE4            equ	148	;# 
   955     0095                     OPTION_REG      equ	149	;# 
   956     0096                     PCON            equ	150	;# 
   957     0097                     WDTCON          equ	151	;# 
   958     0098                     OSCTUNE         equ	152	;# 
   959     0099                     OSCCON          equ	153	;# 
   960     009A                     OSCSTAT         equ	154	;# 
   961     009B                     ADRES           equ	155	;# 
   962     009B                     ADRESL          equ	155	;# 
   963     009C                     ADRESH          equ	156	;# 
   964     009D                     ADCON0          equ	157	;# 
   965     009E                     ADCON1          equ	158	;# 
   966     010C                     LATA            equ	268	;# 
   967     010D                     LATB            equ	269	;# 
   968     0111                     CM1CON0         equ	273	;# 
   969     0112                     CM1CON1         equ	274	;# 
   970     0113                     CM2CON0         equ	275	;# 
   971     0114                     CM2CON1         equ	276	;# 
   972     0115                     CMOUT           equ	277	;# 
   973     0116                     BORCON          equ	278	;# 
   974     0117                     FVRCON          equ	279	;# 
   975     0118                     DACCON0         equ	280	;# 
   976     0119                     DACCON1         equ	281	;# 
   977     011A                     SRCON0          equ	282	;# 
   978     011B                     SRCON1          equ	283	;# 
   979     011D                     APFCON0         equ	285	;# 
   980     011E                     APFCON1         equ	286	;# 
   981     018C                     ANSELA          equ	396	;# 
   982     018D                     ANSELB          equ	397	;# 
   983     0191                     EEADR           equ	401	;# 
   984     0191                     EEADRL          equ	401	;# 
   985     0192                     EEADRH          equ	402	;# 
   986     0193                     EEDAT           equ	403	;# 
   987     0193                     EEDATL          equ	403	;# 
   988     0193                     EEDATA          equ	403	;# 
   989     0194                     EEDATH          equ	404	;# 
   990     0195                     EECON1          equ	405	;# 
   991     0196                     EECON2          equ	406	;# 
   992     0199                     RCREG           equ	409	;# 
   993     019A                     TXREG           equ	410	;# 
   994     019B                     SP1BRG          equ	411	;# 
   995     019B                     SP1BRGL         equ	411	;# 
   996     019B                     SPBRG           equ	411	;# 
   997     019B                     SPBRGL          equ	411	;# 
   998     019C                     SP1BRGH         equ	412	;# 
   999     019C                     SPBRGH          equ	412	;# 
  1000     019D                     RCSTA           equ	413	;# 
  1001     019E                     TXSTA           equ	414	;# 
  1002     019F                     BAUDCON         equ	415	;# 
  1003     020C                     WPUA            equ	524	;# 
  1004     020D                     WPUB            equ	525	;# 
  1005     0211                     SSP1BUF         equ	529	;# 
  1006     0211                     SSPBUF          equ	529	;# 
  1007     0212                     SSP1ADD         equ	530	;# 
  1008     0212                     SSPADD          equ	530	;# 
  1009     0213                     SSP1MSK         equ	531	;# 
  1010     0213                     SSPMSK          equ	531	;# 
  1011     0214                     SSP1STAT        equ	532	;# 
  1012     0214                     SSPSTAT         equ	532	;# 
  1013     0215                     SSP1CON1        equ	533	;# 
  1014     0215                     SSPCON1         equ	533	;# 
  1015     0215                     SSPCON          equ	533	;# 
  1016     0216                     SSP1CON2        equ	534	;# 
  1017     0216                     SSPCON2         equ	534	;# 
  1018     0217                     SSP1CON3        equ	535	;# 
  1019     0217                     SSPCON3         equ	535	;# 
  1020     0219                     SSP2BUF         equ	537	;# 
  1021     021A                     SSP2ADD         equ	538	;# 
  1022     021B                     SSP2MSK         equ	539	;# 
  1023     021C                     SSP2STAT        equ	540	;# 
  1024     021D                     SSP2CON1        equ	541	;# 
  1025     021E                     SSP2CON2        equ	542	;# 
  1026     021F                     SSP2CON3        equ	543	;# 
  1027     0291                     CCPR1           equ	657	;# 
  1028     0291                     CCPR1L          equ	657	;# 
  1029     0292                     CCPR1H          equ	658	;# 
  1030     0293                     CCP1CON         equ	659	;# 
  1031     0294                     PWM1CON         equ	660	;# 
  1032     0295                     CCP1AS          equ	661	;# 
  1033     0295                     ECCP1AS         equ	661	;# 
  1034     0296                     PSTR1CON        equ	662	;# 
  1035     0298                     CCPR2           equ	664	;# 
  1036     0298                     CCPR2L          equ	664	;# 
  1037     0299                     CCPR2H          equ	665	;# 
  1038     029A                     CCP2CON         equ	666	;# 
  1039     029B                     PWM2CON         equ	667	;# 
  1040     029C                     CCP2AS          equ	668	;# 
  1041     029C                     ECCP2AS         equ	668	;# 
  1042     029D                     PSTR2CON        equ	669	;# 
  1043     029E                     CCPTMRS         equ	670	;# 
  1044     029E                     CCPTMRS0        equ	670	;# 
  1045     0311                     CCPR3           equ	785	;# 
  1046     0311                     CCPR3L          equ	785	;# 
  1047     0312                     CCPR3H          equ	786	;# 
  1048     0313                     CCP3CON         equ	787	;# 
  1049     0318                     CCPR4           equ	792	;# 
  1050     0318                     CCPR4L          equ	792	;# 
  1051     0319                     CCPR4H          equ	793	;# 
  1052     031A                     CCP4CON         equ	794	;# 
  1053     0394                     IOCBP           equ	916	;# 
  1054     0395                     IOCBN           equ	917	;# 
  1055     0396                     IOCBF           equ	918	;# 
  1056     039A                     CLKRCON         equ	922	;# 
  1057     039C                     MDCON           equ	924	;# 
  1058     039D                     MDSRC           equ	925	;# 
  1059     039E                     MDCARL          equ	926	;# 
  1060     039F                     MDCARH          equ	927	;# 
  1061     0415                     TMR4            equ	1045	;# 
  1062     0416                     PR4             equ	1046	;# 
  1063     0417                     T4CON           equ	1047	;# 
  1064     041C                     TMR6            equ	1052	;# 
  1065     041D                     PR6             equ	1053	;# 
  1066     041E                     T6CON           equ	1054	;# 
  1067     0FE4                     STATUS_SHAD     equ	4068	;# 
  1068     0FE5                     WREG_SHAD       equ	4069	;# 
  1069     0FE6                     BSR_SHAD        equ	4070	;# 
  1070     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1071     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1072     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1073     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1074     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1075     0FED                     STKPTR          equ	4077	;# 
  1076     0FEE                     TOSL            equ	4078	;# 
  1077     0FEF                     TOSH            equ	4079	;# 
  1078     0000                     INDF0           equ	0	;# 
  1079     0001                     INDF1           equ	1	;# 
  1080     0002                     PCL             equ	2	;# 
  1081     0003                     STATUS          equ	3	;# 
  1082     0004                     FSR0L           equ	4	;# 
  1083     0005                     FSR0H           equ	5	;# 
  1084     0006                     FSR1L           equ	6	;# 
  1085     0007                     FSR1H           equ	7	;# 
  1086     0008                     BSR             equ	8	;# 
  1087     0009                     WREG            equ	9	;# 
  1088     000A                     PCLATH          equ	10	;# 
  1089     000B                     INTCON          equ	11	;# 
  1090     000C                     PORTA           equ	12	;# 
  1091     000D                     PORTB           equ	13	;# 
  1092     0011                     PIR1            equ	17	;# 
  1093     0012                     PIR2            equ	18	;# 
  1094     0013                     PIR3            equ	19	;# 
  1095     0014                     PIR4            equ	20	;# 
  1096     0015                     TMR0            equ	21	;# 
  1097     0016                     TMR1            equ	22	;# 
  1098     0016                     TMR1L           equ	22	;# 
  1099     0017                     TMR1H           equ	23	;# 
  1100     0018                     T1CON           equ	24	;# 
  1101     0019                     T1GCON          equ	25	;# 
  1102     001A                     TMR2            equ	26	;# 
  1103     001B                     PR2             equ	27	;# 
  1104     001C                     T2CON           equ	28	;# 
  1105     001E                     CPSCON0         equ	30	;# 
  1106     001F                     CPSCON1         equ	31	;# 
  1107     008C                     TRISA           equ	140	;# 
  1108     008D                     TRISB           equ	141	;# 
  1109     0091                     PIE1            equ	145	;# 
  1110     0092                     PIE2            equ	146	;# 
  1111     0093                     PIE3            equ	147	;# 
  1112     0094                     PIE4            equ	148	;# 
  1113     0095                     OPTION_REG      equ	149	;# 
  1114     0096                     PCON            equ	150	;# 
  1115     0097                     WDTCON          equ	151	;# 
  1116     0098                     OSCTUNE         equ	152	;# 
  1117     0099                     OSCCON          equ	153	;# 
  1118     009A                     OSCSTAT         equ	154	;# 
  1119     009B                     ADRES           equ	155	;# 
  1120     009B                     ADRESL          equ	155	;# 
  1121     009C                     ADRESH          equ	156	;# 
  1122     009D                     ADCON0          equ	157	;# 
  1123     009E                     ADCON1          equ	158	;# 
  1124     010C                     LATA            equ	268	;# 
  1125     010D                     LATB            equ	269	;# 
  1126     0111                     CM1CON0         equ	273	;# 
  1127     0112                     CM1CON1         equ	274	;# 
  1128     0113                     CM2CON0         equ	275	;# 
  1129     0114                     CM2CON1         equ	276	;# 
  1130     0115                     CMOUT           equ	277	;# 
  1131     0116                     BORCON          equ	278	;# 
  1132     0117                     FVRCON          equ	279	;# 
  1133     0118                     DACCON0         equ	280	;# 
  1134     0119                     DACCON1         equ	281	;# 
  1135     011A                     SRCON0          equ	282	;# 
  1136     011B                     SRCON1          equ	283	;# 
  1137     011D                     APFCON0         equ	285	;# 
  1138     011E                     APFCON1         equ	286	;# 
  1139     018C                     ANSELA          equ	396	;# 
  1140     018D                     ANSELB          equ	397	;# 
  1141     0191                     EEADR           equ	401	;# 
  1142     0191                     EEADRL          equ	401	;# 
  1143     0192                     EEADRH          equ	402	;# 
  1144     0193                     EEDAT           equ	403	;# 
  1145     0193                     EEDATL          equ	403	;# 
  1146     0193                     EEDATA          equ	403	;# 
  1147     0194                     EEDATH          equ	404	;# 
  1148     0195                     EECON1          equ	405	;# 
  1149     0196                     EECON2          equ	406	;# 
  1150     0199                     RCREG           equ	409	;# 
  1151     019A                     TXREG           equ	410	;# 
  1152     019B                     SP1BRG          equ	411	;# 
  1153     019B                     SP1BRGL         equ	411	;# 
  1154     019B                     SPBRG           equ	411	;# 
  1155     019B                     SPBRGL          equ	411	;# 
  1156     019C                     SP1BRGH         equ	412	;# 
  1157     019C                     SPBRGH          equ	412	;# 
  1158     019D                     RCSTA           equ	413	;# 
  1159     019E                     TXSTA           equ	414	;# 
  1160     019F                     BAUDCON         equ	415	;# 
  1161     020C                     WPUA            equ	524	;# 
  1162     020D                     WPUB            equ	525	;# 
  1163     0211                     SSP1BUF         equ	529	;# 
  1164     0211                     SSPBUF          equ	529	;# 
  1165     0212                     SSP1ADD         equ	530	;# 
  1166     0212                     SSPADD          equ	530	;# 
  1167     0213                     SSP1MSK         equ	531	;# 
  1168     0213                     SSPMSK          equ	531	;# 
  1169     0214                     SSP1STAT        equ	532	;# 
  1170     0214                     SSPSTAT         equ	532	;# 
  1171     0215                     SSP1CON1        equ	533	;# 
  1172     0215                     SSPCON1         equ	533	;# 
  1173     0215                     SSPCON          equ	533	;# 
  1174     0216                     SSP1CON2        equ	534	;# 
  1175     0216                     SSPCON2         equ	534	;# 
  1176     0217                     SSP1CON3        equ	535	;# 
  1177     0217                     SSPCON3         equ	535	;# 
  1178     0219                     SSP2BUF         equ	537	;# 
  1179     021A                     SSP2ADD         equ	538	;# 
  1180     021B                     SSP2MSK         equ	539	;# 
  1181     021C                     SSP2STAT        equ	540	;# 
  1182     021D                     SSP2CON1        equ	541	;# 
  1183     021E                     SSP2CON2        equ	542	;# 
  1184     021F                     SSP2CON3        equ	543	;# 
  1185     0291                     CCPR1           equ	657	;# 
  1186     0291                     CCPR1L          equ	657	;# 
  1187     0292                     CCPR1H          equ	658	;# 
  1188     0293                     CCP1CON         equ	659	;# 
  1189     0294                     PWM1CON         equ	660	;# 
  1190     0295                     CCP1AS          equ	661	;# 
  1191     0295                     ECCP1AS         equ	661	;# 
  1192     0296                     PSTR1CON        equ	662	;# 
  1193     0298                     CCPR2           equ	664	;# 
  1194     0298                     CCPR2L          equ	664	;# 
  1195     0299                     CCPR2H          equ	665	;# 
  1196     029A                     CCP2CON         equ	666	;# 
  1197     029B                     PWM2CON         equ	667	;# 
  1198     029C                     CCP2AS          equ	668	;# 
  1199     029C                     ECCP2AS         equ	668	;# 
  1200     029D                     PSTR2CON        equ	669	;# 
  1201     029E                     CCPTMRS         equ	670	;# 
  1202     029E                     CCPTMRS0        equ	670	;# 
  1203     0311                     CCPR3           equ	785	;# 
  1204     0311                     CCPR3L          equ	785	;# 
  1205     0312                     CCPR3H          equ	786	;# 
  1206     0313                     CCP3CON         equ	787	;# 
  1207     0318                     CCPR4           equ	792	;# 
  1208     0318                     CCPR4L          equ	792	;# 
  1209     0319                     CCPR4H          equ	793	;# 
  1210     031A                     CCP4CON         equ	794	;# 
  1211     0394                     IOCBP           equ	916	;# 
  1212     0395                     IOCBN           equ	917	;# 
  1213     0396                     IOCBF           equ	918	;# 
  1214     039A                     CLKRCON         equ	922	;# 
  1215     039C                     MDCON           equ	924	;# 
  1216     039D                     MDSRC           equ	925	;# 
  1217     039E                     MDCARL          equ	926	;# 
  1218     039F                     MDCARH          equ	927	;# 
  1219     0415                     TMR4            equ	1045	;# 
  1220     0416                     PR4             equ	1046	;# 
  1221     0417                     T4CON           equ	1047	;# 
  1222     041C                     TMR6            equ	1052	;# 
  1223     041D                     PR6             equ	1053	;# 
  1224     041E                     T6CON           equ	1054	;# 
  1225     0FE4                     STATUS_SHAD     equ	4068	;# 
  1226     0FE5                     WREG_SHAD       equ	4069	;# 
  1227     0FE6                     BSR_SHAD        equ	4070	;# 
  1228     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1229     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1230     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1231     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1232     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1233     0FED                     STKPTR          equ	4077	;# 
  1234     0FEE                     TOSL            equ	4078	;# 
  1235     0FEF                     TOSH            equ	4079	;# 
  1236     0000                     INDF0           equ	0	;# 
  1237     0001                     INDF1           equ	1	;# 
  1238     0002                     PCL             equ	2	;# 
  1239     0003                     STATUS          equ	3	;# 
  1240     0004                     FSR0L           equ	4	;# 
  1241     0005                     FSR0H           equ	5	;# 
  1242     0006                     FSR1L           equ	6	;# 
  1243     0007                     FSR1H           equ	7	;# 
  1244     0008                     BSR             equ	8	;# 
  1245     0009                     WREG            equ	9	;# 
  1246     000A                     PCLATH          equ	10	;# 
  1247     000B                     INTCON          equ	11	;# 
  1248     000C                     PORTA           equ	12	;# 
  1249     000D                     PORTB           equ	13	;# 
  1250     0011                     PIR1            equ	17	;# 
  1251     0012                     PIR2            equ	18	;# 
  1252     0013                     PIR3            equ	19	;# 
  1253     0014                     PIR4            equ	20	;# 
  1254     0015                     TMR0            equ	21	;# 
  1255     0016                     TMR1            equ	22	;# 
  1256     0016                     TMR1L           equ	22	;# 
  1257     0017                     TMR1H           equ	23	;# 
  1258     0018                     T1CON           equ	24	;# 
  1259     0019                     T1GCON          equ	25	;# 
  1260     001A                     TMR2            equ	26	;# 
  1261     001B                     PR2             equ	27	;# 
  1262     001C                     T2CON           equ	28	;# 
  1263     001E                     CPSCON0         equ	30	;# 
  1264     001F                     CPSCON1         equ	31	;# 
  1265     008C                     TRISA           equ	140	;# 
  1266     008D                     TRISB           equ	141	;# 
  1267     0091                     PIE1            equ	145	;# 
  1268     0092                     PIE2            equ	146	;# 
  1269     0093                     PIE3            equ	147	;# 
  1270     0094                     PIE4            equ	148	;# 
  1271     0095                     OPTION_REG      equ	149	;# 
  1272     0096                     PCON            equ	150	;# 
  1273     0097                     WDTCON          equ	151	;# 
  1274     0098                     OSCTUNE         equ	152	;# 
  1275     0099                     OSCCON          equ	153	;# 
  1276     009A                     OSCSTAT         equ	154	;# 
  1277     009B                     ADRES           equ	155	;# 
  1278     009B                     ADRESL          equ	155	;# 
  1279     009C                     ADRESH          equ	156	;# 
  1280     009D                     ADCON0          equ	157	;# 
  1281     009E                     ADCON1          equ	158	;# 
  1282     010C                     LATA            equ	268	;# 
  1283     010D                     LATB            equ	269	;# 
  1284     0111                     CM1CON0         equ	273	;# 
  1285     0112                     CM1CON1         equ	274	;# 
  1286     0113                     CM2CON0         equ	275	;# 
  1287     0114                     CM2CON1         equ	276	;# 
  1288     0115                     CMOUT           equ	277	;# 
  1289     0116                     BORCON          equ	278	;# 
  1290     0117                     FVRCON          equ	279	;# 
  1291     0118                     DACCON0         equ	280	;# 
  1292     0119                     DACCON1         equ	281	;# 
  1293     011A                     SRCON0          equ	282	;# 
  1294     011B                     SRCON1          equ	283	;# 
  1295     011D                     APFCON0         equ	285	;# 
  1296     011E                     APFCON1         equ	286	;# 
  1297     018C                     ANSELA          equ	396	;# 
  1298     018D                     ANSELB          equ	397	;# 
  1299     0191                     EEADR           equ	401	;# 
  1300     0191                     EEADRL          equ	401	;# 
  1301     0192                     EEADRH          equ	402	;# 
  1302     0193                     EEDAT           equ	403	;# 
  1303     0193                     EEDATL          equ	403	;# 
  1304     0193                     EEDATA          equ	403	;# 
  1305     0194                     EEDATH          equ	404	;# 
  1306     0195                     EECON1          equ	405	;# 
  1307     0196                     EECON2          equ	406	;# 
  1308     0199                     RCREG           equ	409	;# 
  1309     019A                     TXREG           equ	410	;# 
  1310     019B                     SP1BRG          equ	411	;# 
  1311     019B                     SP1BRGL         equ	411	;# 
  1312     019B                     SPBRG           equ	411	;# 
  1313     019B                     SPBRGL          equ	411	;# 
  1314     019C                     SP1BRGH         equ	412	;# 
  1315     019C                     SPBRGH          equ	412	;# 
  1316     019D                     RCSTA           equ	413	;# 
  1317     019E                     TXSTA           equ	414	;# 
  1318     019F                     BAUDCON         equ	415	;# 
  1319     020C                     WPUA            equ	524	;# 
  1320     020D                     WPUB            equ	525	;# 
  1321     0211                     SSP1BUF         equ	529	;# 
  1322     0211                     SSPBUF          equ	529	;# 
  1323     0212                     SSP1ADD         equ	530	;# 
  1324     0212                     SSPADD          equ	530	;# 
  1325     0213                     SSP1MSK         equ	531	;# 
  1326     0213                     SSPMSK          equ	531	;# 
  1327     0214                     SSP1STAT        equ	532	;# 
  1328     0214                     SSPSTAT         equ	532	;# 
  1329     0215                     SSP1CON1        equ	533	;# 
  1330     0215                     SSPCON1         equ	533	;# 
  1331     0215                     SSPCON          equ	533	;# 
  1332     0216                     SSP1CON2        equ	534	;# 
  1333     0216                     SSPCON2         equ	534	;# 
  1334     0217                     SSP1CON3        equ	535	;# 
  1335     0217                     SSPCON3         equ	535	;# 
  1336     0219                     SSP2BUF         equ	537	;# 
  1337     021A                     SSP2ADD         equ	538	;# 
  1338     021B                     SSP2MSK         equ	539	;# 
  1339     021C                     SSP2STAT        equ	540	;# 
  1340     021D                     SSP2CON1        equ	541	;# 
  1341     021E                     SSP2CON2        equ	542	;# 
  1342     021F                     SSP2CON3        equ	543	;# 
  1343     0291                     CCPR1           equ	657	;# 
  1344     0291                     CCPR1L          equ	657	;# 
  1345     0292                     CCPR1H          equ	658	;# 
  1346     0293                     CCP1CON         equ	659	;# 
  1347     0294                     PWM1CON         equ	660	;# 
  1348     0295                     CCP1AS          equ	661	;# 
  1349     0295                     ECCP1AS         equ	661	;# 
  1350     0296                     PSTR1CON        equ	662	;# 
  1351     0298                     CCPR2           equ	664	;# 
  1352     0298                     CCPR2L          equ	664	;# 
  1353     0299                     CCPR2H          equ	665	;# 
  1354     029A                     CCP2CON         equ	666	;# 
  1355     029B                     PWM2CON         equ	667	;# 
  1356     029C                     CCP2AS          equ	668	;# 
  1357     029C                     ECCP2AS         equ	668	;# 
  1358     029D                     PSTR2CON        equ	669	;# 
  1359     029E                     CCPTMRS         equ	670	;# 
  1360     029E                     CCPTMRS0        equ	670	;# 
  1361     0311                     CCPR3           equ	785	;# 
  1362     0311                     CCPR3L          equ	785	;# 
  1363     0312                     CCPR3H          equ	786	;# 
  1364     0313                     CCP3CON         equ	787	;# 
  1365     0318                     CCPR4           equ	792	;# 
  1366     0318                     CCPR4L          equ	792	;# 
  1367     0319                     CCPR4H          equ	793	;# 
  1368     031A                     CCP4CON         equ	794	;# 
  1369     0394                     IOCBP           equ	916	;# 
  1370     0395                     IOCBN           equ	917	;# 
  1371     0396                     IOCBF           equ	918	;# 
  1372     039A                     CLKRCON         equ	922	;# 
  1373     039C                     MDCON           equ	924	;# 
  1374     039D                     MDSRC           equ	925	;# 
  1375     039E                     MDCARL          equ	926	;# 
  1376     039F                     MDCARH          equ	927	;# 
  1377     0415                     TMR4            equ	1045	;# 
  1378     0416                     PR4             equ	1046	;# 
  1379     0417                     T4CON           equ	1047	;# 
  1380     041C                     TMR6            equ	1052	;# 
  1381     041D                     PR6             equ	1053	;# 
  1382     041E                     T6CON           equ	1054	;# 
  1383     0FE4                     STATUS_SHAD     equ	4068	;# 
  1384     0FE5                     WREG_SHAD       equ	4069	;# 
  1385     0FE6                     BSR_SHAD        equ	4070	;# 
  1386     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1387     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1388     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1389     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1390     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1391     0FED                     STKPTR          equ	4077	;# 
  1392     0FEE                     TOSL            equ	4078	;# 
  1393     0FEF                     TOSH            equ	4079	;# 
  1394     0000                     INDF0           equ	0	;# 
  1395     0001                     INDF1           equ	1	;# 
  1396     0002                     PCL             equ	2	;# 
  1397     0003                     STATUS          equ	3	;# 
  1398     0004                     FSR0L           equ	4	;# 
  1399     0005                     FSR0H           equ	5	;# 
  1400     0006                     FSR1L           equ	6	;# 
  1401     0007                     FSR1H           equ	7	;# 
  1402     0008                     BSR             equ	8	;# 
  1403     0009                     WREG            equ	9	;# 
  1404     000A                     PCLATH          equ	10	;# 
  1405     000B                     INTCON          equ	11	;# 
  1406     000C                     PORTA           equ	12	;# 
  1407     000D                     PORTB           equ	13	;# 
  1408     0011                     PIR1            equ	17	;# 
  1409     0012                     PIR2            equ	18	;# 
  1410     0013                     PIR3            equ	19	;# 
  1411     0014                     PIR4            equ	20	;# 
  1412     0015                     TMR0            equ	21	;# 
  1413     0016                     TMR1            equ	22	;# 
  1414     0016                     TMR1L           equ	22	;# 
  1415     0017                     TMR1H           equ	23	;# 
  1416     0018                     T1CON           equ	24	;# 
  1417     0019                     T1GCON          equ	25	;# 
  1418     001A                     TMR2            equ	26	;# 
  1419     001B                     PR2             equ	27	;# 
  1420     001C                     T2CON           equ	28	;# 
  1421     001E                     CPSCON0         equ	30	;# 
  1422     001F                     CPSCON1         equ	31	;# 
  1423     008C                     TRISA           equ	140	;# 
  1424     008D                     TRISB           equ	141	;# 
  1425     0091                     PIE1            equ	145	;# 
  1426     0092                     PIE2            equ	146	;# 
  1427     0093                     PIE3            equ	147	;# 
  1428     0094                     PIE4            equ	148	;# 
  1429     0095                     OPTION_REG      equ	149	;# 
  1430     0096                     PCON            equ	150	;# 
  1431     0097                     WDTCON          equ	151	;# 
  1432     0098                     OSCTUNE         equ	152	;# 
  1433     0099                     OSCCON          equ	153	;# 
  1434     009A                     OSCSTAT         equ	154	;# 
  1435     009B                     ADRES           equ	155	;# 
  1436     009B                     ADRESL          equ	155	;# 
  1437     009C                     ADRESH          equ	156	;# 
  1438     009D                     ADCON0          equ	157	;# 
  1439     009E                     ADCON1          equ	158	;# 
  1440     010C                     LATA            equ	268	;# 
  1441     010D                     LATB            equ	269	;# 
  1442     0111                     CM1CON0         equ	273	;# 
  1443     0112                     CM1CON1         equ	274	;# 
  1444     0113                     CM2CON0         equ	275	;# 
  1445     0114                     CM2CON1         equ	276	;# 
  1446     0115                     CMOUT           equ	277	;# 
  1447     0116                     BORCON          equ	278	;# 
  1448     0117                     FVRCON          equ	279	;# 
  1449     0118                     DACCON0         equ	280	;# 
  1450     0119                     DACCON1         equ	281	;# 
  1451     011A                     SRCON0          equ	282	;# 
  1452     011B                     SRCON1          equ	283	;# 
  1453     011D                     APFCON0         equ	285	;# 
  1454     011E                     APFCON1         equ	286	;# 
  1455     018C                     ANSELA          equ	396	;# 
  1456     018D                     ANSELB          equ	397	;# 
  1457     0191                     EEADR           equ	401	;# 
  1458     0191                     EEADRL          equ	401	;# 
  1459     0192                     EEADRH          equ	402	;# 
  1460     0193                     EEDAT           equ	403	;# 
  1461     0193                     EEDATL          equ	403	;# 
  1462     0193                     EEDATA          equ	403	;# 
  1463     0194                     EEDATH          equ	404	;# 
  1464     0195                     EECON1          equ	405	;# 
  1465     0196                     EECON2          equ	406	;# 
  1466     0199                     RCREG           equ	409	;# 
  1467     019A                     TXREG           equ	410	;# 
  1468     019B                     SP1BRG          equ	411	;# 
  1469     019B                     SP1BRGL         equ	411	;# 
  1470     019B                     SPBRG           equ	411	;# 
  1471     019B                     SPBRGL          equ	411	;# 
  1472     019C                     SP1BRGH         equ	412	;# 
  1473     019C                     SPBRGH          equ	412	;# 
  1474     019D                     RCSTA           equ	413	;# 
  1475     019E                     TXSTA           equ	414	;# 
  1476     019F                     BAUDCON         equ	415	;# 
  1477     020C                     WPUA            equ	524	;# 
  1478     020D                     WPUB            equ	525	;# 
  1479     0211                     SSP1BUF         equ	529	;# 
  1480     0211                     SSPBUF          equ	529	;# 
  1481     0212                     SSP1ADD         equ	530	;# 
  1482     0212                     SSPADD          equ	530	;# 
  1483     0213                     SSP1MSK         equ	531	;# 
  1484     0213                     SSPMSK          equ	531	;# 
  1485     0214                     SSP1STAT        equ	532	;# 
  1486     0214                     SSPSTAT         equ	532	;# 
  1487     0215                     SSP1CON1        equ	533	;# 
  1488     0215                     SSPCON1         equ	533	;# 
  1489     0215                     SSPCON          equ	533	;# 
  1490     0216                     SSP1CON2        equ	534	;# 
  1491     0216                     SSPCON2         equ	534	;# 
  1492     0217                     SSP1CON3        equ	535	;# 
  1493     0217                     SSPCON3         equ	535	;# 
  1494     0219                     SSP2BUF         equ	537	;# 
  1495     021A                     SSP2ADD         equ	538	;# 
  1496     021B                     SSP2MSK         equ	539	;# 
  1497     021C                     SSP2STAT        equ	540	;# 
  1498     021D                     SSP2CON1        equ	541	;# 
  1499     021E                     SSP2CON2        equ	542	;# 
  1500     021F                     SSP2CON3        equ	543	;# 
  1501     0291                     CCPR1           equ	657	;# 
  1502     0291                     CCPR1L          equ	657	;# 
  1503     0292                     CCPR1H          equ	658	;# 
  1504     0293                     CCP1CON         equ	659	;# 
  1505     0294                     PWM1CON         equ	660	;# 
  1506     0295                     CCP1AS          equ	661	;# 
  1507     0295                     ECCP1AS         equ	661	;# 
  1508     0296                     PSTR1CON        equ	662	;# 
  1509     0298                     CCPR2           equ	664	;# 
  1510     0298                     CCPR2L          equ	664	;# 
  1511     0299                     CCPR2H          equ	665	;# 
  1512     029A                     CCP2CON         equ	666	;# 
  1513     029B                     PWM2CON         equ	667	;# 
  1514     029C                     CCP2AS          equ	668	;# 
  1515     029C                     ECCP2AS         equ	668	;# 
  1516     029D                     PSTR2CON        equ	669	;# 
  1517     029E                     CCPTMRS         equ	670	;# 
  1518     029E                     CCPTMRS0        equ	670	;# 
  1519     0311                     CCPR3           equ	785	;# 
  1520     0311                     CCPR3L          equ	785	;# 
  1521     0312                     CCPR3H          equ	786	;# 
  1522     0313                     CCP3CON         equ	787	;# 
  1523     0318                     CCPR4           equ	792	;# 
  1524     0318                     CCPR4L          equ	792	;# 
  1525     0319                     CCPR4H          equ	793	;# 
  1526     031A                     CCP4CON         equ	794	;# 
  1527     0394                     IOCBP           equ	916	;# 
  1528     0395                     IOCBN           equ	917	;# 
  1529     0396                     IOCBF           equ	918	;# 
  1530     039A                     CLKRCON         equ	922	;# 
  1531     039C                     MDCON           equ	924	;# 
  1532     039D                     MDSRC           equ	925	;# 
  1533     039E                     MDCARL          equ	926	;# 
  1534     039F                     MDCARH          equ	927	;# 
  1535     0415                     TMR4            equ	1045	;# 
  1536     0416                     PR4             equ	1046	;# 
  1537     0417                     T4CON           equ	1047	;# 
  1538     041C                     TMR6            equ	1052	;# 
  1539     041D                     PR6             equ	1053	;# 
  1540     041E                     T6CON           equ	1054	;# 
  1541     0FE4                     STATUS_SHAD     equ	4068	;# 
  1542     0FE5                     WREG_SHAD       equ	4069	;# 
  1543     0FE6                     BSR_SHAD        equ	4070	;# 
  1544     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1545     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1546     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1547     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1548     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1549     0FED                     STKPTR          equ	4077	;# 
  1550     0FEE                     TOSL            equ	4078	;# 
  1551     0FEF                     TOSH            equ	4079	;# 
  1552     0000                     INDF0           equ	0	;# 
  1553     0001                     INDF1           equ	1	;# 
  1554     0002                     PCL             equ	2	;# 
  1555     0003                     STATUS          equ	3	;# 
  1556     0004                     FSR0L           equ	4	;# 
  1557     0005                     FSR0H           equ	5	;# 
  1558     0006                     FSR1L           equ	6	;# 
  1559     0007                     FSR1H           equ	7	;# 
  1560     0008                     BSR             equ	8	;# 
  1561     0009                     WREG            equ	9	;# 
  1562     000A                     PCLATH          equ	10	;# 
  1563     000B                     INTCON          equ	11	;# 
  1564     000C                     PORTA           equ	12	;# 
  1565     000D                     PORTB           equ	13	;# 
  1566     0011                     PIR1            equ	17	;# 
  1567     0012                     PIR2            equ	18	;# 
  1568     0013                     PIR3            equ	19	;# 
  1569     0014                     PIR4            equ	20	;# 
  1570     0015                     TMR0            equ	21	;# 
  1571     0016                     TMR1            equ	22	;# 
  1572     0016                     TMR1L           equ	22	;# 
  1573     0017                     TMR1H           equ	23	;# 
  1574     0018                     T1CON           equ	24	;# 
  1575     0019                     T1GCON          equ	25	;# 
  1576     001A                     TMR2            equ	26	;# 
  1577     001B                     PR2             equ	27	;# 
  1578     001C                     T2CON           equ	28	;# 
  1579     001E                     CPSCON0         equ	30	;# 
  1580     001F                     CPSCON1         equ	31	;# 
  1581     008C                     TRISA           equ	140	;# 
  1582     008D                     TRISB           equ	141	;# 
  1583     0091                     PIE1            equ	145	;# 
  1584     0092                     PIE2            equ	146	;# 
  1585     0093                     PIE3            equ	147	;# 
  1586     0094                     PIE4            equ	148	;# 
  1587     0095                     OPTION_REG      equ	149	;# 
  1588     0096                     PCON            equ	150	;# 
  1589     0097                     WDTCON          equ	151	;# 
  1590     0098                     OSCTUNE         equ	152	;# 
  1591     0099                     OSCCON          equ	153	;# 
  1592     009A                     OSCSTAT         equ	154	;# 
  1593     009B                     ADRES           equ	155	;# 
  1594     009B                     ADRESL          equ	155	;# 
  1595     009C                     ADRESH          equ	156	;# 
  1596     009D                     ADCON0          equ	157	;# 
  1597     009E                     ADCON1          equ	158	;# 
  1598     010C                     LATA            equ	268	;# 
  1599     010D                     LATB            equ	269	;# 
  1600     0111                     CM1CON0         equ	273	;# 
  1601     0112                     CM1CON1         equ	274	;# 
  1602     0113                     CM2CON0         equ	275	;# 
  1603     0114                     CM2CON1         equ	276	;# 
  1604     0115                     CMOUT           equ	277	;# 
  1605     0116                     BORCON          equ	278	;# 
  1606     0117                     FVRCON          equ	279	;# 
  1607     0118                     DACCON0         equ	280	;# 
  1608     0119                     DACCON1         equ	281	;# 
  1609     011A                     SRCON0          equ	282	;# 
  1610     011B                     SRCON1          equ	283	;# 
  1611     011D                     APFCON0         equ	285	;# 
  1612     011E                     APFCON1         equ	286	;# 
  1613     018C                     ANSELA          equ	396	;# 
  1614     018D                     ANSELB          equ	397	;# 
  1615     0191                     EEADR           equ	401	;# 
  1616     0191                     EEADRL          equ	401	;# 
  1617     0192                     EEADRH          equ	402	;# 
  1618     0193                     EEDAT           equ	403	;# 
  1619     0193                     EEDATL          equ	403	;# 
  1620     0193                     EEDATA          equ	403	;# 
  1621     0194                     EEDATH          equ	404	;# 
  1622     0195                     EECON1          equ	405	;# 
  1623     0196                     EECON2          equ	406	;# 
  1624     0199                     RCREG           equ	409	;# 
  1625     019A                     TXREG           equ	410	;# 
  1626     019B                     SP1BRG          equ	411	;# 
  1627     019B                     SP1BRGL         equ	411	;# 
  1628     019B                     SPBRG           equ	411	;# 
  1629     019B                     SPBRGL          equ	411	;# 
  1630     019C                     SP1BRGH         equ	412	;# 
  1631     019C                     SPBRGH          equ	412	;# 
  1632     019D                     RCSTA           equ	413	;# 
  1633     019E                     TXSTA           equ	414	;# 
  1634     019F                     BAUDCON         equ	415	;# 
  1635     020C                     WPUA            equ	524	;# 
  1636     020D                     WPUB            equ	525	;# 
  1637     0211                     SSP1BUF         equ	529	;# 
  1638     0211                     SSPBUF          equ	529	;# 
  1639     0212                     SSP1ADD         equ	530	;# 
  1640     0212                     SSPADD          equ	530	;# 
  1641     0213                     SSP1MSK         equ	531	;# 
  1642     0213                     SSPMSK          equ	531	;# 
  1643     0214                     SSP1STAT        equ	532	;# 
  1644     0214                     SSPSTAT         equ	532	;# 
  1645     0215                     SSP1CON1        equ	533	;# 
  1646     0215                     SSPCON1         equ	533	;# 
  1647     0215                     SSPCON          equ	533	;# 
  1648     0216                     SSP1CON2        equ	534	;# 
  1649     0216                     SSPCON2         equ	534	;# 
  1650     0217                     SSP1CON3        equ	535	;# 
  1651     0217                     SSPCON3         equ	535	;# 
  1652     0219                     SSP2BUF         equ	537	;# 
  1653     021A                     SSP2ADD         equ	538	;# 
  1654     021B                     SSP2MSK         equ	539	;# 
  1655     021C                     SSP2STAT        equ	540	;# 
  1656     021D                     SSP2CON1        equ	541	;# 
  1657     021E                     SSP2CON2        equ	542	;# 
  1658     021F                     SSP2CON3        equ	543	;# 
  1659     0291                     CCPR1           equ	657	;# 
  1660     0291                     CCPR1L          equ	657	;# 
  1661     0292                     CCPR1H          equ	658	;# 
  1662     0293                     CCP1CON         equ	659	;# 
  1663     0294                     PWM1CON         equ	660	;# 
  1664     0295                     CCP1AS          equ	661	;# 
  1665     0295                     ECCP1AS         equ	661	;# 
  1666     0296                     PSTR1CON        equ	662	;# 
  1667     0298                     CCPR2           equ	664	;# 
  1668     0298                     CCPR2L          equ	664	;# 
  1669     0299                     CCPR2H          equ	665	;# 
  1670     029A                     CCP2CON         equ	666	;# 
  1671     029B                     PWM2CON         equ	667	;# 
  1672     029C                     CCP2AS          equ	668	;# 
  1673     029C                     ECCP2AS         equ	668	;# 
  1674     029D                     PSTR2CON        equ	669	;# 
  1675     029E                     CCPTMRS         equ	670	;# 
  1676     029E                     CCPTMRS0        equ	670	;# 
  1677     0311                     CCPR3           equ	785	;# 
  1678     0311                     CCPR3L          equ	785	;# 
  1679     0312                     CCPR3H          equ	786	;# 
  1680     0313                     CCP3CON         equ	787	;# 
  1681     0318                     CCPR4           equ	792	;# 
  1682     0318                     CCPR4L          equ	792	;# 
  1683     0319                     CCPR4H          equ	793	;# 
  1684     031A                     CCP4CON         equ	794	;# 
  1685     0394                     IOCBP           equ	916	;# 
  1686     0395                     IOCBN           equ	917	;# 
  1687     0396                     IOCBF           equ	918	;# 
  1688     039A                     CLKRCON         equ	922	;# 
  1689     039C                     MDCON           equ	924	;# 
  1690     039D                     MDSRC           equ	925	;# 
  1691     039E                     MDCARL          equ	926	;# 
  1692     039F                     MDCARH          equ	927	;# 
  1693     0415                     TMR4            equ	1045	;# 
  1694     0416                     PR4             equ	1046	;# 
  1695     0417                     T4CON           equ	1047	;# 
  1696     041C                     TMR6            equ	1052	;# 
  1697     041D                     PR6             equ	1053	;# 
  1698     041E                     T6CON           equ	1054	;# 
  1699     0FE4                     STATUS_SHAD     equ	4068	;# 
  1700     0FE5                     WREG_SHAD       equ	4069	;# 
  1701     0FE6                     BSR_SHAD        equ	4070	;# 
  1702     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1703     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1704     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1705     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1706     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1707     0FED                     STKPTR          equ	4077	;# 
  1708     0FEE                     TOSL            equ	4078	;# 
  1709     0FEF                     TOSH            equ	4079	;# 
  1710     0000                     INDF0           equ	0	;# 
  1711     0001                     INDF1           equ	1	;# 
  1712     0002                     PCL             equ	2	;# 
  1713     0003                     STATUS          equ	3	;# 
  1714     0004                     FSR0L           equ	4	;# 
  1715     0005                     FSR0H           equ	5	;# 
  1716     0006                     FSR1L           equ	6	;# 
  1717     0007                     FSR1H           equ	7	;# 
  1718     0008                     BSR             equ	8	;# 
  1719     0009                     WREG            equ	9	;# 
  1720     000A                     PCLATH          equ	10	;# 
  1721     000B                     INTCON          equ	11	;# 
  1722     000C                     PORTA           equ	12	;# 
  1723     000D                     PORTB           equ	13	;# 
  1724     0011                     PIR1            equ	17	;# 
  1725     0012                     PIR2            equ	18	;# 
  1726     0013                     PIR3            equ	19	;# 
  1727     0014                     PIR4            equ	20	;# 
  1728     0015                     TMR0            equ	21	;# 
  1729     0016                     TMR1            equ	22	;# 
  1730     0016                     TMR1L           equ	22	;# 
  1731     0017                     TMR1H           equ	23	;# 
  1732     0018                     T1CON           equ	24	;# 
  1733     0019                     T1GCON          equ	25	;# 
  1734     001A                     TMR2            equ	26	;# 
  1735     001B                     PR2             equ	27	;# 
  1736     001C                     T2CON           equ	28	;# 
  1737     001E                     CPSCON0         equ	30	;# 
  1738     001F                     CPSCON1         equ	31	;# 
  1739     008C                     TRISA           equ	140	;# 
  1740     008D                     TRISB           equ	141	;# 
  1741     0091                     PIE1            equ	145	;# 
  1742     0092                     PIE2            equ	146	;# 
  1743     0093                     PIE3            equ	147	;# 
  1744     0094                     PIE4            equ	148	;# 
  1745     0095                     OPTION_REG      equ	149	;# 
  1746     0096                     PCON            equ	150	;# 
  1747     0097                     WDTCON          equ	151	;# 
  1748     0098                     OSCTUNE         equ	152	;# 
  1749     0099                     OSCCON          equ	153	;# 
  1750     009A                     OSCSTAT         equ	154	;# 
  1751     009B                     ADRES           equ	155	;# 
  1752     009B                     ADRESL          equ	155	;# 
  1753     009C                     ADRESH          equ	156	;# 
  1754     009D                     ADCON0          equ	157	;# 
  1755     009E                     ADCON1          equ	158	;# 
  1756     010C                     LATA            equ	268	;# 
  1757     010D                     LATB            equ	269	;# 
  1758     0111                     CM1CON0         equ	273	;# 
  1759     0112                     CM1CON1         equ	274	;# 
  1760     0113                     CM2CON0         equ	275	;# 
  1761     0114                     CM2CON1         equ	276	;# 
  1762     0115                     CMOUT           equ	277	;# 
  1763     0116                     BORCON          equ	278	;# 
  1764     0117                     FVRCON          equ	279	;# 
  1765     0118                     DACCON0         equ	280	;# 
  1766     0119                     DACCON1         equ	281	;# 
  1767     011A                     SRCON0          equ	282	;# 
  1768     011B                     SRCON1          equ	283	;# 
  1769     011D                     APFCON0         equ	285	;# 
  1770     011E                     APFCON1         equ	286	;# 
  1771     018C                     ANSELA          equ	396	;# 
  1772     018D                     ANSELB          equ	397	;# 
  1773     0191                     EEADR           equ	401	;# 
  1774     0191                     EEADRL          equ	401	;# 
  1775     0192                     EEADRH          equ	402	;# 
  1776     0193                     EEDAT           equ	403	;# 
  1777     0193                     EEDATL          equ	403	;# 
  1778     0193                     EEDATA          equ	403	;# 
  1779     0194                     EEDATH          equ	404	;# 
  1780     0195                     EECON1          equ	405	;# 
  1781     0196                     EECON2          equ	406	;# 
  1782     0199                     RCREG           equ	409	;# 
  1783     019A                     TXREG           equ	410	;# 
  1784     019B                     SP1BRG          equ	411	;# 
  1785     019B                     SP1BRGL         equ	411	;# 
  1786     019B                     SPBRG           equ	411	;# 
  1787     019B                     SPBRGL          equ	411	;# 
  1788     019C                     SP1BRGH         equ	412	;# 
  1789     019C                     SPBRGH          equ	412	;# 
  1790     019D                     RCSTA           equ	413	;# 
  1791     019E                     TXSTA           equ	414	;# 
  1792     019F                     BAUDCON         equ	415	;# 
  1793     020C                     WPUA            equ	524	;# 
  1794     020D                     WPUB            equ	525	;# 
  1795     0211                     SSP1BUF         equ	529	;# 
  1796     0211                     SSPBUF          equ	529	;# 
  1797     0212                     SSP1ADD         equ	530	;# 
  1798     0212                     SSPADD          equ	530	;# 
  1799     0213                     SSP1MSK         equ	531	;# 
  1800     0213                     SSPMSK          equ	531	;# 
  1801     0214                     SSP1STAT        equ	532	;# 
  1802     0214                     SSPSTAT         equ	532	;# 
  1803     0215                     SSP1CON1        equ	533	;# 
  1804     0215                     SSPCON1         equ	533	;# 
  1805     0215                     SSPCON          equ	533	;# 
  1806     0216                     SSP1CON2        equ	534	;# 
  1807     0216                     SSPCON2         equ	534	;# 
  1808     0217                     SSP1CON3        equ	535	;# 
  1809     0217                     SSPCON3         equ	535	;# 
  1810     0219                     SSP2BUF         equ	537	;# 
  1811     021A                     SSP2ADD         equ	538	;# 
  1812     021B                     SSP2MSK         equ	539	;# 
  1813     021C                     SSP2STAT        equ	540	;# 
  1814     021D                     SSP2CON1        equ	541	;# 
  1815     021E                     SSP2CON2        equ	542	;# 
  1816     021F                     SSP2CON3        equ	543	;# 
  1817     0291                     CCPR1           equ	657	;# 
  1818     0291                     CCPR1L          equ	657	;# 
  1819     0292                     CCPR1H          equ	658	;# 
  1820     0293                     CCP1CON         equ	659	;# 
  1821     0294                     PWM1CON         equ	660	;# 
  1822     0295                     CCP1AS          equ	661	;# 
  1823     0295                     ECCP1AS         equ	661	;# 
  1824     0296                     PSTR1CON        equ	662	;# 
  1825     0298                     CCPR2           equ	664	;# 
  1826     0298                     CCPR2L          equ	664	;# 
  1827     0299                     CCPR2H          equ	665	;# 
  1828     029A                     CCP2CON         equ	666	;# 
  1829     029B                     PWM2CON         equ	667	;# 
  1830     029C                     CCP2AS          equ	668	;# 
  1831     029C                     ECCP2AS         equ	668	;# 
  1832     029D                     PSTR2CON        equ	669	;# 
  1833     029E                     CCPTMRS         equ	670	;# 
  1834     029E                     CCPTMRS0        equ	670	;# 
  1835     0311                     CCPR3           equ	785	;# 
  1836     0311                     CCPR3L          equ	785	;# 
  1837     0312                     CCPR3H          equ	786	;# 
  1838     0313                     CCP3CON         equ	787	;# 
  1839     0318                     CCPR4           equ	792	;# 
  1840     0318                     CCPR4L          equ	792	;# 
  1841     0319                     CCPR4H          equ	793	;# 
  1842     031A                     CCP4CON         equ	794	;# 
  1843     0394                     IOCBP           equ	916	;# 
  1844     0395                     IOCBN           equ	917	;# 
  1845     0396                     IOCBF           equ	918	;# 
  1846     039A                     CLKRCON         equ	922	;# 
  1847     039C                     MDCON           equ	924	;# 
  1848     039D                     MDSRC           equ	925	;# 
  1849     039E                     MDCARL          equ	926	;# 
  1850     039F                     MDCARH          equ	927	;# 
  1851     0415                     TMR4            equ	1045	;# 
  1852     0416                     PR4             equ	1046	;# 
  1853     0417                     T4CON           equ	1047	;# 
  1854     041C                     TMR6            equ	1052	;# 
  1855     041D                     PR6             equ	1053	;# 
  1856     041E                     T6CON           equ	1054	;# 
  1857     0FE4                     STATUS_SHAD     equ	4068	;# 
  1858     0FE5                     WREG_SHAD       equ	4069	;# 
  1859     0FE6                     BSR_SHAD        equ	4070	;# 
  1860     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1861     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1862     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1863     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1864     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1865     0FED                     STKPTR          equ	4077	;# 
  1866     0FEE                     TOSL            equ	4078	;# 
  1867     0FEF                     TOSH            equ	4079	;# 
  1868     0000                     INDF0           equ	0	;# 
  1869     0001                     INDF1           equ	1	;# 
  1870     0002                     PCL             equ	2	;# 
  1871     0003                     STATUS          equ	3	;# 
  1872     0004                     FSR0L           equ	4	;# 
  1873     0005                     FSR0H           equ	5	;# 
  1874     0006                     FSR1L           equ	6	;# 
  1875     0007                     FSR1H           equ	7	;# 
  1876     0008                     BSR             equ	8	;# 
  1877     0009                     WREG            equ	9	;# 
  1878     000A                     PCLATH          equ	10	;# 
  1879     000B                     INTCON          equ	11	;# 
  1880     000C                     PORTA           equ	12	;# 
  1881     000D                     PORTB           equ	13	;# 
  1882     0011                     PIR1            equ	17	;# 
  1883     0012                     PIR2            equ	18	;# 
  1884     0013                     PIR3            equ	19	;# 
  1885     0014                     PIR4            equ	20	;# 
  1886     0015                     TMR0            equ	21	;# 
  1887     0016                     TMR1            equ	22	;# 
  1888     0016                     TMR1L           equ	22	;# 
  1889     0017                     TMR1H           equ	23	;# 
  1890     0018                     T1CON           equ	24	;# 
  1891     0019                     T1GCON          equ	25	;# 
  1892     001A                     TMR2            equ	26	;# 
  1893     001B                     PR2             equ	27	;# 
  1894     001C                     T2CON           equ	28	;# 
  1895     001E                     CPSCON0         equ	30	;# 
  1896     001F                     CPSCON1         equ	31	;# 
  1897     008C                     TRISA           equ	140	;# 
  1898     008D                     TRISB           equ	141	;# 
  1899     0091                     PIE1            equ	145	;# 
  1900     0092                     PIE2            equ	146	;# 
  1901     0093                     PIE3            equ	147	;# 
  1902     0094                     PIE4            equ	148	;# 
  1903     0095                     OPTION_REG      equ	149	;# 
  1904     0096                     PCON            equ	150	;# 
  1905     0097                     WDTCON          equ	151	;# 
  1906     0098                     OSCTUNE         equ	152	;# 
  1907     0099                     OSCCON          equ	153	;# 
  1908     009A                     OSCSTAT         equ	154	;# 
  1909     009B                     ADRES           equ	155	;# 
  1910     009B                     ADRESL          equ	155	;# 
  1911     009C                     ADRESH          equ	156	;# 
  1912     009D                     ADCON0          equ	157	;# 
  1913     009E                     ADCON1          equ	158	;# 
  1914     010C                     LATA            equ	268	;# 
  1915     010D                     LATB            equ	269	;# 
  1916     0111                     CM1CON0         equ	273	;# 
  1917     0112                     CM1CON1         equ	274	;# 
  1918     0113                     CM2CON0         equ	275	;# 
  1919     0114                     CM2CON1         equ	276	;# 
  1920     0115                     CMOUT           equ	277	;# 
  1921     0116                     BORCON          equ	278	;# 
  1922     0117                     FVRCON          equ	279	;# 
  1923     0118                     DACCON0         equ	280	;# 
  1924     0119                     DACCON1         equ	281	;# 
  1925     011A                     SRCON0          equ	282	;# 
  1926     011B                     SRCON1          equ	283	;# 
  1927     011D                     APFCON0         equ	285	;# 
  1928     011E                     APFCON1         equ	286	;# 
  1929     018C                     ANSELA          equ	396	;# 
  1930     018D                     ANSELB          equ	397	;# 
  1931     0191                     EEADR           equ	401	;# 
  1932     0191                     EEADRL          equ	401	;# 
  1933     0192                     EEADRH          equ	402	;# 
  1934     0193                     EEDAT           equ	403	;# 
  1935     0193                     EEDATL          equ	403	;# 
  1936     0193                     EEDATA          equ	403	;# 
  1937     0194                     EEDATH          equ	404	;# 
  1938     0195                     EECON1          equ	405	;# 
  1939     0196                     EECON2          equ	406	;# 
  1940     0199                     RCREG           equ	409	;# 
  1941     019A                     TXREG           equ	410	;# 
  1942     019B                     SP1BRG          equ	411	;# 
  1943     019B                     SP1BRGL         equ	411	;# 
  1944     019B                     SPBRG           equ	411	;# 
  1945     019B                     SPBRGL          equ	411	;# 
  1946     019C                     SP1BRGH         equ	412	;# 
  1947     019C                     SPBRGH          equ	412	;# 
  1948     019D                     RCSTA           equ	413	;# 
  1949     019E                     TXSTA           equ	414	;# 
  1950     019F                     BAUDCON         equ	415	;# 
  1951     020C                     WPUA            equ	524	;# 
  1952     020D                     WPUB            equ	525	;# 
  1953     0211                     SSP1BUF         equ	529	;# 
  1954     0211                     SSPBUF          equ	529	;# 
  1955     0212                     SSP1ADD         equ	530	;# 
  1956     0212                     SSPADD          equ	530	;# 
  1957     0213                     SSP1MSK         equ	531	;# 
  1958     0213                     SSPMSK          equ	531	;# 
  1959     0214                     SSP1STAT        equ	532	;# 
  1960     0214                     SSPSTAT         equ	532	;# 
  1961     0215                     SSP1CON1        equ	533	;# 
  1962     0215                     SSPCON1         equ	533	;# 
  1963     0215                     SSPCON          equ	533	;# 
  1964     0216                     SSP1CON2        equ	534	;# 
  1965     0216                     SSPCON2         equ	534	;# 
  1966     0217                     SSP1CON3        equ	535	;# 
  1967     0217                     SSPCON3         equ	535	;# 
  1968     0219                     SSP2BUF         equ	537	;# 
  1969     021A                     SSP2ADD         equ	538	;# 
  1970     021B                     SSP2MSK         equ	539	;# 
  1971     021C                     SSP2STAT        equ	540	;# 
  1972     021D                     SSP2CON1        equ	541	;# 
  1973     021E                     SSP2CON2        equ	542	;# 
  1974     021F                     SSP2CON3        equ	543	;# 
  1975     0291                     CCPR1           equ	657	;# 
  1976     0291                     CCPR1L          equ	657	;# 
  1977     0292                     CCPR1H          equ	658	;# 
  1978     0293                     CCP1CON         equ	659	;# 
  1979     0294                     PWM1CON         equ	660	;# 
  1980     0295                     CCP1AS          equ	661	;# 
  1981     0295                     ECCP1AS         equ	661	;# 
  1982     0296                     PSTR1CON        equ	662	;# 
  1983     0298                     CCPR2           equ	664	;# 
  1984     0298                     CCPR2L          equ	664	;# 
  1985     0299                     CCPR2H          equ	665	;# 
  1986     029A                     CCP2CON         equ	666	;# 
  1987     029B                     PWM2CON         equ	667	;# 
  1988     029C                     CCP2AS          equ	668	;# 
  1989     029C                     ECCP2AS         equ	668	;# 
  1990     029D                     PSTR2CON        equ	669	;# 
  1991     029E                     CCPTMRS         equ	670	;# 
  1992     029E                     CCPTMRS0        equ	670	;# 
  1993     0311                     CCPR3           equ	785	;# 
  1994     0311                     CCPR3L          equ	785	;# 
  1995     0312                     CCPR3H          equ	786	;# 
  1996     0313                     CCP3CON         equ	787	;# 
  1997     0318                     CCPR4           equ	792	;# 
  1998     0318                     CCPR4L          equ	792	;# 
  1999     0319                     CCPR4H          equ	793	;# 
  2000     031A                     CCP4CON         equ	794	;# 
  2001     0394                     IOCBP           equ	916	;# 
  2002     0395                     IOCBN           equ	917	;# 
  2003     0396                     IOCBF           equ	918	;# 
  2004     039A                     CLKRCON         equ	922	;# 
  2005     039C                     MDCON           equ	924	;# 
  2006     039D                     MDSRC           equ	925	;# 
  2007     039E                     MDCARL          equ	926	;# 
  2008     039F                     MDCARH          equ	927	;# 
  2009     0415                     TMR4            equ	1045	;# 
  2010     0416                     PR4             equ	1046	;# 
  2011     0417                     T4CON           equ	1047	;# 
  2012     041C                     TMR6            equ	1052	;# 
  2013     041D                     PR6             equ	1053	;# 
  2014     041E                     T6CON           equ	1054	;# 
  2015     0FE4                     STATUS_SHAD     equ	4068	;# 
  2016     0FE5                     WREG_SHAD       equ	4069	;# 
  2017     0FE6                     BSR_SHAD        equ	4070	;# 
  2018     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2019     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2020     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2021     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2022     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2023     0FED                     STKPTR          equ	4077	;# 
  2024     0FEE                     TOSL            equ	4078	;# 
  2025     0FEF                     TOSH            equ	4079	;# 
  2026                           
  2027                           	psect	stringtext1
  2028     07AE                     __pstringtext1:
  2029     07AE                     _LUTsoundspeed:
  2030     07AE  3466               	retlw	102
  2031     07AF  34A6               	retlw	166
  2032     07B0  34A5               	retlw	165
  2033     07B1  3443               	retlw	67
  2034     07B2  3433               	retlw	51
  2035     07B3  34F3               	retlw	243
  2036     07B4  34A5               	retlw	165
  2037     07B5  3443               	retlw	67
  2038     07B6  3400               	retlw	0
  2039     07B7  3440               	retlw	64
  2040     07B8  34A6               	retlw	166
  2041     07B9  3443               	retlw	67
  2042     07BA  34CD               	retlw	205
  2043     07BB  348C               	retlw	140
  2044     07BC  34A6               	retlw	166
  2045     07BD  3443               	retlw	67
  2046     07BE  349A               	retlw	154
  2047     07BF  34D9               	retlw	217
  2048     07C0  34A6               	retlw	166
  2049     07C1  3443               	retlw	67
  2050     07C2  3466               	retlw	102
  2051     07C3  3426               	retlw	38
  2052     07C4  34A7               	retlw	167
  2053     07C5  3443               	retlw	67
  2054     07C6  3433               	retlw	51
  2055     07C7  3473               	retlw	115
  2056     07C8  34A7               	retlw	167
  2057     07C9  3443               	retlw	67
  2058     07CA  3400               	retlw	0
  2059     07CB  34C0               	retlw	192
  2060     07CC  34A7               	retlw	167
  2061     07CD  3443               	retlw	67
  2062     07CE  34CD               	retlw	205
  2063     07CF  340C               	retlw	12
  2064     07D0  34A8               	retlw	168
  2065     07D1  3443               	retlw	67
  2066     07D2  349A               	retlw	154
  2067     07D3  3459               	retlw	89
  2068     07D4  34A8               	retlw	168
  2069     07D5  3443               	retlw	67
  2070     07D6  3466               	retlw	102
  2071     07D7  34A6               	retlw	166
  2072     07D8  34A8               	retlw	168
  2073     07D9  3443               	retlw	67
  2074     07DA  3433               	retlw	51
  2075     07DB  34F3               	retlw	243
  2076     07DC  34A8               	retlw	168
  2077     07DD  3443               	retlw	67
  2078     07DE  3400               	retlw	0
  2079     07DF  3440               	retlw	64
  2080     07E0  34A9               	retlw	169
  2081     07E1  3443               	retlw	67
  2082     07E2  34CD               	retlw	205
  2083     07E3  348C               	retlw	140
  2084     07E4  34A9               	retlw	169
  2085     07E5  3443               	retlw	67
  2086     07E6  349A               	retlw	154
  2087     07E7  34D9               	retlw	217
  2088     07E8  34A9               	retlw	169
  2089     07E9  3443               	retlw	67
  2090     07EA  3466               	retlw	102
  2091     07EB  3426               	retlw	38
  2092     07EC  34AA               	retlw	170
  2093     07ED  3443               	retlw	67
  2094     07EE  3433               	retlw	51
  2095     07EF  3473               	retlw	115
  2096     07F0  34AA               	retlw	170
  2097     07F1  3443               	retlw	67
  2098     07F2  3400               	retlw	0
  2099     07F3  34C0               	retlw	192
  2100     07F4  34AA               	retlw	170
  2101     07F5  3443               	retlw	67
  2102     07F6  3400               	retlw	0
  2103     07F7  3400               	retlw	0
  2104     07F8  34AB               	retlw	171
  2105     07F9  3443               	retlw	67
  2106     07FA  34CD               	retlw	205
  2107     07FB  344C               	retlw	76
  2108     07FC  34AB               	retlw	171
  2109     07FD  3443               	retlw	67
  2110     07FE  349A               	retlw	154
  2111     07FF  3499               	retlw	153
  2112     0800  34AB               	retlw	171
  2113     0801  3443               	retlw	67
  2114     0802  3466               	retlw	102
  2115     0803  34E6               	retlw	230
  2116     0804  34AB               	retlw	171
  2117     0805  3443               	retlw	67
  2118     0806  3433               	retlw	51
  2119     0807  3433               	retlw	51
  2120     0808  34AC               	retlw	172
  2121     0809  3443               	retlw	67
  2122     080A  3400               	retlw	0
  2123     080B  3480               	retlw	128
  2124     080C  34AC               	retlw	172
  2125     080D  3443               	retlw	67
  2126     080E  3400               	retlw	0
  2127     080F  34C0               	retlw	192
  2128     0810  34AC               	retlw	172
  2129     0811  3443               	retlw	67
  2130     0812  34CD               	retlw	205
  2131     0813  340C               	retlw	12
  2132     0814  34AD               	retlw	173
  2133     0815  3443               	retlw	67
  2134     0816  349A               	retlw	154
  2135     0817  3459               	retlw	89
  2136     0818  34AD               	retlw	173
  2137     0819  3443               	retlw	67
  2138     081A  3466               	retlw	102
  2139     081B  34A6               	retlw	166
  2140     081C  34AD               	retlw	173
  2141     081D  3443               	retlw	67
  2142     081E  3433               	retlw	51
  2143     081F  34F3               	retlw	243
  2144     0820  34AD               	retlw	173
  2145     0821  3443               	retlw	67
  2146     0822  3433               	retlw	51
  2147     0823  3433               	retlw	51
  2148     0824  34AE               	retlw	174
  2149     0825  3443               	retlw	67
  2150     0826  3400               	retlw	0
  2151     0827  3480               	retlw	128
  2152     0828  34AE               	retlw	174
  2153     0829  3443               	retlw	67
  2154     082A  34CD               	retlw	205
  2155     082B  34CC               	retlw	204
  2156     082C  34AE               	retlw	174
  2157     082D  3443               	retlw	67
  2158     082E  349A               	retlw	154
  2159     082F  3419               	retlw	25
  2160     0830  34AF               	retlw	175
  2161     0831  3443               	retlw	67
  2162     0832  349A               	retlw	154
  2163     0833  3459               	retlw	89
  2164     0834  34AF               	retlw	175
  2165     0835  3443               	retlw	67
  2166     0836  3466               	retlw	102
  2167     0837  34A6               	retlw	166
  2168     0838  34AF               	retlw	175
  2169     0839  3443               	retlw	67
  2170     083A  3433               	retlw	51
  2171     083B  34F3               	retlw	243
  2172     083C  34AF               	retlw	175
  2173     083D  3443               	retlw	67
  2174     083E  3400               	retlw	0
  2175     083F  3440               	retlw	64
  2176     0840  34B0               	retlw	176
  2177     0841  3443               	retlw	67
  2178     0842  3400               	retlw	0
  2179     0843  3480               	retlw	128
  2180     0844  34B0               	retlw	176
  2181     0845  3443               	retlw	67
  2182     0846  34CD               	retlw	205
  2183     0847  34CC               	retlw	204
  2184     0848  34B0               	retlw	176
  2185     0849  3443               	retlw	67
  2186     084A  349A               	retlw	154
  2187     084B  3419               	retlw	25
  2188     084C  34B1               	retlw	177
  2189     084D  3443               	retlw	67
  2190     084E  349A               	retlw	154
  2191     084F  3459               	retlw	89
  2192     0850  34B1               	retlw	177
  2193     0851  3443               	retlw	67
  2194     0852  3466               	retlw	102
  2195     0853  34A6               	retlw	166
  2196     0854  34B1               	retlw	177
  2197     0855  3443               	retlw	67
  2198     0856  3433               	retlw	51
  2199     0857  34F3               	retlw	243
  2200     0858  34B1               	retlw	177
  2201     0859  3443               	retlw	67
  2202     085A  3433               	retlw	51
  2203     085B  3433               	retlw	51
  2204     085C  34B2               	retlw	178
  2205     085D  3443               	retlw	67
  2206     085E  3400               	retlw	0
  2207     085F  3480               	retlw	128
  2208     0860  34B2               	retlw	178
  2209     0861  3443               	retlw	67
  2210     0862  34CD               	retlw	205
  2211     0863  34CC               	retlw	204
  2212     0864  34B2               	retlw	178
  2213     0865  3443               	retlw	67
  2214     0866  34CD               	retlw	205
  2215     0867  340C               	retlw	12
  2216     0868  34B3               	retlw	179
  2217     0869  3443               	retlw	67
  2218     086A  349A               	retlw	154
  2219     086B  3459               	retlw	89
  2220     086C  34B3               	retlw	179
  2221     086D  3443               	retlw	67
  2222     086E  349A               	retlw	154
  2223     086F  3499               	retlw	153
  2224     0870  34B3               	retlw	179
  2225     0871  3443               	retlw	67
  2226     0872  3466               	retlw	102
  2227     0873  34E6               	retlw	230
  2228     0874  34B3               	retlw	179
  2229     0875  3443               	retlw	67
  2230     0876  3466               	retlw	102
  2231     0877  3426               	retlw	38
  2232     0878  34B4               	retlw	180
  2233     0879  3443               	retlw	67
  2234     087A                     __end_of_LUTsoundspeed:
  2235                           
  2236                           	psect	nvBANK1
  2237     00E9                     __pnvBANK1:
  2238     00E9                     _INT_InterruptHandler:
  2239     00E9                     	ds	2
  2240     00EB                     _TMR4_InterruptHandler:
  2241     00EB                     	ds	2
  2242     00ED                     _TMR1_InterruptHandler:
  2243     00ED                     	ds	2
  2244                           
  2245                           	psect	nvBANK2
  2246     0148                     __pnvBANK2:
  2247     0148                     _EUSART_ErrorHandler:
  2248     0148                     	ds	2
  2249     014A                     _EUSART_OverrunErrorHandler:
  2250     014A                     	ds	2
  2251     014C                     _EUSART_FramingErrorHandler:
  2252     014C                     	ds	2
  2253     014E                     _EUSART_RxDefaultInterruptHandler:
  2254     014E                     	ds	2
  2255     0150                     _EUSART_TxDefaultInterruptHandler:
  2256     0150                     	ds	2
  2257     000D                     _PORTBbits      set	13
  2258     001C                     _T2CONbits      set	28
  2259     001C                     _T2CON          set	28
  2260     001A                     _TMR2           set	26
  2261     001B                     _PR2            set	27
  2262     0019                     _T1GCONbits     set	25
  2263     0018                     _T1CONbits      set	24
  2264     0018                     _T1CON          set	24
  2265     0016                     _TMR1L          set	22
  2266     0017                     _TMR1H          set	23
  2267     0019                     _T1GCON         set	25
  2268     0013                     _PIR3bits       set	19
  2269     0011                     _PIR1bits       set	17
  2270     000B                     _INTCONbits     set	11
  2271     0093                     _PIE3bits       set	147
  2272     0091                     _PIE1bits       set	145
  2273     0097                     _WDTCON         set	151
  2274     0098                     _OSCTUNE        set	152
  2275     0099                     _OSCCON         set	153
  2276     0095                     _OPTION_REGbits set	149
  2277     008D                     _TRISB          set	141
  2278     008C                     _TRISA          set	140
  2279     009D                     _ADCON0bits     set	157
  2280     009D                     _ADCON0         set	157
  2281     009C                     _ADRESH         set	156
  2282     009B                     _ADRESL         set	155
  2283     009E                     _ADCON1         set	158
  2284     010C                     _LATAbits       set	268
  2285     0116                     _BORCON         set	278
  2286     011E                     _APFCON1        set	286
  2287     011D                     _APFCON0        set	285
  2288     010D                     _LATB           set	269
  2289     010C                     _LATA           set	268
  2290     0199                     _RCREG          set	409
  2291     019D                     _RCSTAbits      set	413
  2292     019A                     _TXREG          set	410
  2293     019E                     _TXSTAbits      set	414
  2294     019C                     _SPBRGH         set	412
  2295     019B                     _SPBRGL         set	411
  2296     019E                     _TXSTA          set	414
  2297     019D                     _RCSTA          set	413
  2298     019F                     _BAUDCON        set	415
  2299     018C                     _ANSELA         set	396
  2300     018D                     _ANSELB         set	397
  2301     020C                     _WPUA           set	524
  2302     020D                     _WPUB           set	525
  2303     029E                     _CCPTMRS0bits   set	670
  2304     0291                     _CCPR1L         set	657
  2305     0292                     _CCPR1H         set	658
  2306     0296                     _PSTR1CON       set	662
  2307     0294                     _PWM1CON        set	660
  2308     0295                     _ECCP1AS        set	661
  2309     0293                     _CCP1CON        set	659
  2310     0417                     _T4CONbits      set	1047
  2311     0417                     _T4CON          set	1047
  2312     0415                     _TMR4           set	1045
  2313     0416                     _PR4            set	1046
  2314                           
  2315                           	psect	cinit
  2316     0059                     start_initialization:	
  2317                           ; #config settings
  2318                           
  2319     0059                     __initialization:
  2320                           
  2321                           ; Clear objects allocated to COMMON
  2322     0059  01F9               	clrf	__pbssCOMMON& (0+127)
  2323     005A  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  2324     005B  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  2325                           
  2326                           ; Clear objects allocated to BANK1
  2327     005C  30A0               	movlw	low __pbssBANK1
  2328     005D  0084               	movwf	4
  2329     005E  3000               	movlw	high __pbssBANK1
  2330     005F  0085               	movwf	5
  2331     0060  303B               	movlw	59
  2332     0061  3180  2072  3180   	fcall	clear_ram0
  2333                           
  2334                           ; Clear objects allocated to BANK2
  2335     0064  3020               	movlw	low __pbssBANK2
  2336     0065  0084               	movwf	4
  2337     0066  3001               	movlw	high __pbssBANK2
  2338     0067  0085               	movwf	5
  2339     0068  3028               	movlw	40
  2340     0069  3180  2072  3180   	fcall	clear_ram0
  2341     006C                     end_of_initialization:	
  2342                           ;End of C runtime variable initialization code
  2343                           
  2344     006C                     __end_of__initialization:
  2345     006C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2346     006D  0020               	movlb	0
  2347     006E  318D  2D13         	ljmp	_main	;jump to C main() function
  2348                           
  2349                           	psect	bssCOMMON
  2350     0079                     __pbssCOMMON:
  2351     0079                     _eusartRxTail:
  2352     0079                     	ds	1
  2353     007A                     _eusartRxHead:
  2354     007A                     	ds	1
  2355     007B                     _eusartTxHead:
  2356     007B                     	ds	1
  2357                           
  2358                           	psect	bssBANK1
  2359     00A0                     __pbssBANK1:
  2360     00A0                     _dados:
  2361     00A0                     	ds	15
  2362     00AF                     _rxbuffer:
  2363     00AF                     	ds	7
  2364     00B6                     _erroAnterior:
  2365     00B6                     	ds	4
  2366     00BA                     _erroAcumulado:
  2367     00BA                     	ds	4
  2368     00BE                     _temperature_kelvin:
  2369     00BE                     	ds	4
  2370     00C2                     _posicao:
  2371     00C2                     	ds	2
  2372     00C4                     _passo_atual:
  2373     00C4                     	ds	2
  2374     00C6                     _pwm:
  2375     00C6                     	ds	2
  2376     00C8                     _soundspeed_t:
  2377     00C8                     	ds	2
  2378     00CA                     _timer1ReloadVal:
  2379     00CA                     	ds	2
  2380     00CC                     _ADC_InterruptHandler:
  2381     00CC                     	ds	2
  2382     00CE                     MoveValvula@passos:
  2383     00CE                     	ds	1
  2384     00CF                     _novosDadosCadastrados:
  2385     00CF                     	ds	1
  2386     00D0                     _calibracao:
  2387     00D0                     	ds	1
  2388     00D1                     _valvula_aberta:
  2389     00D1                     	ds	1
  2390     00D2                     _temperature_index:
  2391     00D2                     	ds	1
  2392     00D3                     _eusartRxLastError:
  2393     00D3                     	ds	1
  2394     00D4                     _eusartRxCount:
  2395     00D4                     	ds	1
  2396     00D5                     _eusartTxBufferRemaining:
  2397     00D5                     	ds	1
  2398     00D6                     _eusartTxTail:
  2399     00D6                     	ds	1
  2400     00D7                     _temperature:
  2401     00D7                     	ds	4
  2402                           
  2403                           	psect	bssBANK2
  2404     0120                     __pbssBANK2:
  2405     0120                     _eusartRxStatusBuffer:
  2406     0120                     	ds	8
  2407     0128                     _eusartRxBuffer:
  2408     0128                     	ds	8
  2409     0130                     _eusartTxBuffer:
  2410     0130                     	ds	8
  2411     0138                     _valvula_desejada:
  2412     0138                     	ds	4
  2413     013C                     _valvula:
  2414     013C                     	ds	4
  2415     0140                     _soundspeed:
  2416     0140                     	ds	4
  2417     0144                     _time_of_flight:
  2418     0144                     	ds	4
  2419                           
  2420                           	psect	clrtext
  2421     0072                     clear_ram0:	
  2422                           ;	Called with FSR0 containing the base address, and
  2423                           ;	WREG with the size to clear
  2424                           
  2425     0072  0064               	clrwdt	;clear the watchdog before getting into this loop
  2426     0073                     clrloop0:
  2427     0073  0180               	clrf	0	;clear RAM location pointed to by FSR
  2428     0074  3101               	addfsr 0,1
  2429     0075  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2430     0076  2873               	goto	clrloop0	;have we reached the end yet?
  2431     0077  3400               	retlw	0	;all done for this memory range, return
  2432                           
  2433                           	psect	cstackBANK2
  2434     0152                     __pcstackBANK2:
  2435     0152                     Controle@ajuste:
  2436                           
  2437                           ; 2 bytes @ 0x0
  2438     0152                     	ds	2
  2439     0154                     ??_main:
  2440                           
  2441                           ; 1 bytes @ 0x2
  2442     0154                     	ds	2
  2443                           
  2444                           	psect	cstackBANK1
  2445     00DB                     __pcstackBANK1:
  2446     00DB                     ?_ControleAjuste:
  2447     00DB                     ??_calculateHeight:	
  2448                           ; 2 bytes @ 0x0
  2449                           
  2450                           
  2451                           ; 1 bytes @ 0x0
  2452     00DB                     	ds	2
  2453     00DD                     ControleAjuste@deltaErro:
  2454                           
  2455                           ; 4 bytes @ 0x2
  2456     00DD                     	ds	4
  2457     00E1                     _ControleAjuste$1897:
  2458                           
  2459                           ; 4 bytes @ 0x6
  2460     00E1                     	ds	4
  2461     00E5                     ControleAjuste@erroAtual:
  2462                           
  2463                           ; 4 bytes @ 0xA
  2464     00E5                     	ds	4
  2465                           
  2466                           	psect	cstackCOMMON
  2467     0070                     __pcstackCOMMON:
  2468     0070                     ?_OSCILLATOR_Initialize:
  2469     0070                     ?_WDT_Initialize:	
  2470                           ; 1 bytes @ 0x0
  2471                           
  2472     0070                     ?_EPWM1_Initialize:	
  2473                           ; 1 bytes @ 0x0
  2474                           
  2475     0070                     ?_TMR4_Initialize:	
  2476                           ; 1 bytes @ 0x0
  2477                           
  2478     0070                     ?_TMR2_Initialize:	
  2479                           ; 1 bytes @ 0x0
  2480                           
  2481     0070                     ?_TMR1_Initialize:	
  2482                           ; 1 bytes @ 0x0
  2483                           
  2484     0070                     ?_EXT_INT_Initialize:	
  2485                           ; 1 bytes @ 0x0
  2486                           
  2487     0070                     ?_EUSART_Initialize:	
  2488                           ; 1 bytes @ 0x0
  2489                           
  2490     0070                     ?_INT_ISR:	
  2491                           ; 1 bytes @ 0x0
  2492                           
  2493     0070                     ?_TMR4_ISR:	
  2494                           ; 1 bytes @ 0x0
  2495                           
  2496     0070                     ?_TMR1_ISR:	
  2497                           ; 1 bytes @ 0x0
  2498                           
  2499     0070                     ?_TMR1_DefaultInterruptHandler:	
  2500                           ; 1 bytes @ 0x0
  2501                           
  2502     0070                     ?_EUSART_Receive_ISR:	
  2503                           ; 1 bytes @ 0x0
  2504                           
  2505     0070                     ?_EUSART_Transmit_ISR:	
  2506                           ; 1 bytes @ 0x0
  2507                           
  2508     0070                     ?_EUSART_DefaultFramingErrorHandler:	
  2509                           ; 1 bytes @ 0x0
  2510                           
  2511     0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  2512                           ; 1 bytes @ 0x0
  2513                           
  2514     0070                     ?_EUSART_DefaultErrorHandler:	
  2515                           ; 1 bytes @ 0x0
  2516                           
  2517     0070                     ?_EUSART_RxDataHandler:	
  2518                           ; 1 bytes @ 0x0
  2519                           
  2520     0070                     ?_TMR4_DefaultInterruptHandler:	
  2521                           ; 1 bytes @ 0x0
  2522                           
  2523     0070                     ?_INT_CallBack:	
  2524                           ; 1 bytes @ 0x0
  2525                           
  2526     0070                     ?_LeituraValvula:	
  2527                           ; 1 bytes @ 0x0
  2528                           
  2529     0070                     ?_calculateToF:	
  2530                           ; 1 bytes @ 0x0
  2531                           
  2532     0070                     ?_processaRecepcaoUSART:	
  2533                           ; 1 bytes @ 0x0
  2534                           
  2535     0070                     ?_atualizaDadosRecebidos:	
  2536                           ; 1 bytes @ 0x0
  2537                           
  2538     0070                     ?_Controle:	
  2539                           ; 1 bytes @ 0x0
  2540                           
  2541     0070                     ?_AbreValvula:	
  2542                           ; 1 bytes @ 0x0
  2543                           
  2544     0070                     ?_FechaValvula:	
  2545                           ; 1 bytes @ 0x0
  2546                           
  2547     0070                     ?_MoveValvula:	
  2548                           ; 1 bytes @ 0x0
  2549                           
  2550     0070                     ?_ADC_Initialize:	
  2551                           ; 1 bytes @ 0x0
  2552                           
  2553     0070                     ?_PIN_MANAGER_Initialize:	
  2554                           ; 1 bytes @ 0x0
  2555                           
  2556     0070                     ?_SYSTEM_Initialize:	
  2557                           ; 1 bytes @ 0x0
  2558                           
  2559     0070                     ?_INTERRUPT_InterruptManager:	
  2560                           ; 1 bytes @ 0x0
  2561                           
  2562     0070                     ?_TMR1_StartTimer:	
  2563                           ; 1 bytes @ 0x0
  2564                           
  2565     0070                     ?_TMR1_StopTimer:	
  2566                           ; 1 bytes @ 0x0
  2567                           
  2568     0070                     ?_EUSART_is_rx_ready:	
  2569                           ; 1 bytes @ 0x0
  2570                           
  2571     0070                     ?_EUSART_Read:	
  2572                           ; 1 bytes @ 0x0
  2573                           
  2574     0070                     ?_INT_DefaultInterruptHandler:	
  2575                           ; 1 bytes @ 0x0
  2576                           
  2577     0070                     ?_main:	
  2578                           ; 1 bytes @ 0x0
  2579                           
  2580     0070                     ?i1_TMR1_WriteTimer:	
  2581                           ; 1 bytes @ 0x0
  2582                           
  2583     0070                     ?_calculateHeight:	
  2584                           ; 1 bytes @ 0x0
  2585                           
  2586     0070                     i1TMR1_WriteTimer@timerVal:	
  2587                           ; 4 bytes @ 0x0
  2588                           
  2589     0070                     ??_INT_ISR:	
  2590                           ; 2 bytes @ 0x0
  2591                           
  2592     0070                     ??_TMR4_ISR:	
  2593                           ; 1 bytes @ 0x0
  2594                           
  2595     0070                     ??_TMR1_DefaultInterruptHandler:	
  2596                           ; 1 bytes @ 0x0
  2597                           
  2598     0070                     ??_EUSART_Receive_ISR:	
  2599                           ; 1 bytes @ 0x0
  2600                           
  2601     0070                     ??_EUSART_Transmit_ISR:	
  2602                           ; 1 bytes @ 0x0
  2603                           
  2604     0070                     ??_EUSART_DefaultFramingErrorHandler:	
  2605                           ; 1 bytes @ 0x0
  2606                           
  2607     0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  2608                           ; 1 bytes @ 0x0
  2609                           
  2610     0070                     ??_EUSART_DefaultErrorHandler:	
  2611                           ; 1 bytes @ 0x0
  2612                           
  2613     0070                     ??_EUSART_RxDataHandler:	
  2614                           ; 1 bytes @ 0x0
  2615                           
  2616     0070                     ??_TMR4_DefaultInterruptHandler:	
  2617                           ; 1 bytes @ 0x0
  2618                           
  2619     0070                     ??_INT_CallBack:	
  2620                           ; 1 bytes @ 0x0
  2621                           
  2622     0070                     ??_INT_DefaultInterruptHandler:	
  2623                           ; 1 bytes @ 0x0
  2624                           
  2625                           
  2626                           ; 1 bytes @ 0x0
  2627     0070                     	ds	2
  2628     0072                     ?_TMR1_SetInterruptHandler:
  2629     0072                     ?_EUSART_SetRxInterruptHandler:	
  2630                           ; 1 bytes @ 0x2
  2631                           
  2632     0072                     ?_EUSART_SetTxInterruptHandler:	
  2633                           ; 1 bytes @ 0x2
  2634                           
  2635     0072                     ?_EUSART_SetFramingErrorHandler:	
  2636                           ; 1 bytes @ 0x2
  2637                           
  2638     0072                     ?_EUSART_SetOverrunErrorHandler:	
  2639                           ; 1 bytes @ 0x2
  2640                           
  2641     0072                     ?_EUSART_SetErrorHandler:	
  2642                           ; 1 bytes @ 0x2
  2643                           
  2644     0072                     ?_TMR4_SetInterruptHandler:	
  2645                           ; 1 bytes @ 0x2
  2646                           
  2647     0072                     ?_ajustaValvula:	
  2648                           ; 1 bytes @ 0x2
  2649                           
  2650     0072                     ?_EPWM1_LoadDutyValue:	
  2651                           ; 1 bytes @ 0x2
  2652                           
  2653     0072                     ?_TMR1_WriteTimer:	
  2654                           ; 1 bytes @ 0x2
  2655                           
  2656     0072                     ?_INT_SetInterruptHandler:	
  2657                           ; 1 bytes @ 0x2
  2658                           
  2659     0072                     ?__Umul8_16:	
  2660                           ; 1 bytes @ 0x2
  2661                           
  2662     0072                     ?_ADC_GetConversion:	
  2663                           ; 2 bytes @ 0x2
  2664                           
  2665     0072                     ?_TMR1_ReadTimer:	
  2666                           ; 2 bytes @ 0x2
  2667                           
  2668     0072                     EUSART_Read@readValue:	
  2669                           ; 2 bytes @ 0x2
  2670                           
  2671     0072                     __Umul8_16@multiplicand:	
  2672                           ; 1 bytes @ 0x2
  2673                           
  2674     0072                     EPWM1_LoadDutyValue@dutyValue:	
  2675                           ; 1 bytes @ 0x2
  2676                           
  2677     0072                     TMR1_WriteTimer@timerVal:	
  2678                           ; 2 bytes @ 0x2
  2679                           
  2680     0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  2681                           ; 2 bytes @ 0x2
  2682                           
  2683     0072                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2684                           ; 2 bytes @ 0x2
  2685                           
  2686     0072                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2687                           ; 2 bytes @ 0x2
  2688                           
  2689     0072                     EUSART_SetErrorHandler@interruptHandler:	
  2690                           ; 2 bytes @ 0x2
  2691                           
  2692     0072                     EUSART_SetTxInterruptHandler@interruptHandler:	
  2693                           ; 2 bytes @ 0x2
  2694                           
  2695     0072                     EUSART_SetRxInterruptHandler@interruptHandler:	
  2696                           ; 2 bytes @ 0x2
  2697                           
  2698     0072                     TMR4_SetInterruptHandler@InterruptHandler:	
  2699                           ; 2 bytes @ 0x2
  2700                           
  2701     0072                     INT_SetInterruptHandler@InterruptHandler:	
  2702                           ; 2 bytes @ 0x2
  2703                           
  2704     0072                     ajustaValvula@ajuste:	
  2705                           ; 2 bytes @ 0x2
  2706                           
  2707     0072                     ??_OSCILLATOR_Initialize:	
  2708                           ; 2 bytes @ 0x2
  2709                           
  2710     0072                     ??_WDT_Initialize:	
  2711                           ; 1 bytes @ 0x2
  2712                           
  2713     0072                     ??_EPWM1_Initialize:	
  2714                           ; 1 bytes @ 0x2
  2715                           
  2716     0072                     ??_TMR2_Initialize:	
  2717                           ; 1 bytes @ 0x2
  2718                           
  2719     0072                     ??_TMR1_ISR:	
  2720                           ; 1 bytes @ 0x2
  2721                           
  2722     0072                     ??_MoveValvula:	
  2723                           ; 1 bytes @ 0x2
  2724                           
  2725     0072                     ??_ADC_Initialize:	
  2726                           ; 1 bytes @ 0x2
  2727                           
  2728     0072                     ??_PIN_MANAGER_Initialize:	
  2729                           ; 1 bytes @ 0x2
  2730                           
  2731     0072                     ??_INTERRUPT_InterruptManager:	
  2732                           ; 1 bytes @ 0x2
  2733                           
  2734     0072                     ??_TMR1_StartTimer:	
  2735                           ; 1 bytes @ 0x2
  2736                           
  2737     0072                     ??_TMR1_StopTimer:	
  2738                           ; 1 bytes @ 0x2
  2739                           
  2740     0072                     ??_EUSART_is_rx_ready:	
  2741                           ; 1 bytes @ 0x2
  2742                           
  2743     0072                     ??_EUSART_Read:	
  2744                           ; 1 bytes @ 0x2
  2745                           
  2746     0072                     ??___flge:	
  2747                           ; 1 bytes @ 0x2
  2748                           
  2749     0072                     ??i1_TMR1_WriteTimer:	
  2750                           ; 1 bytes @ 0x2
  2751                           
  2752                           
  2753                           ; 1 bytes @ 0x2
  2754     0072                     	ds	1
  2755     0073                     MoveValvula@direcao:
  2756     0073                     ??_processaRecepcaoUSART:	
  2757                           ; 1 bytes @ 0x3
  2758                           
  2759                           
  2760                           ; 1 bytes @ 0x3
  2761     0073                     	ds	1
  2762     0074                     processaRecepcaoUSART@i:
  2763     0074                     ??_TMR4_Initialize:	
  2764                           ; 2 bytes @ 0x4
  2765                           
  2766     0074                     ??_TMR1_Initialize:	
  2767                           ; 1 bytes @ 0x4
  2768                           
  2769     0074                     ??_EXT_INT_Initialize:	
  2770                           ; 1 bytes @ 0x4
  2771                           
  2772     0074                     ??_EUSART_Initialize:	
  2773                           ; 1 bytes @ 0x4
  2774                           
  2775     0074                     ??_TMR1_SetInterruptHandler:	
  2776                           ; 1 bytes @ 0x4
  2777                           
  2778     0074                     ??_EUSART_SetRxInterruptHandler:	
  2779                           ; 1 bytes @ 0x4
  2780                           
  2781     0074                     ??_EUSART_SetTxInterruptHandler:	
  2782                           ; 1 bytes @ 0x4
  2783                           
  2784     0074                     ??_EUSART_SetFramingErrorHandler:	
  2785                           ; 1 bytes @ 0x4
  2786                           
  2787     0074                     ??_EUSART_SetOverrunErrorHandler:	
  2788                           ; 1 bytes @ 0x4
  2789                           
  2790     0074                     ??_EUSART_SetErrorHandler:	
  2791                           ; 1 bytes @ 0x4
  2792                           
  2793     0074                     ??_TMR4_SetInterruptHandler:	
  2794                           ; 1 bytes @ 0x4
  2795                           
  2796     0074                     ??_FechaValvula:	
  2797                           ; 1 bytes @ 0x4
  2798                           
  2799     0074                     ??_ajustaValvula:	
  2800                           ; 1 bytes @ 0x4
  2801                           
  2802     0074                     ??__Umul8_16:	
  2803                           ; 1 bytes @ 0x4
  2804                           
  2805     0074                     ??_ADC_GetConversion:	
  2806                           ; 1 bytes @ 0x4
  2807                           
  2808     0074                     ??_SYSTEM_Initialize:	
  2809                           ; 1 bytes @ 0x4
  2810                           
  2811     0074                     ??_EPWM1_LoadDutyValue:	
  2812                           ; 1 bytes @ 0x4
  2813                           
  2814     0074                     ??_TMR1_ReadTimer:	
  2815                           ; 1 bytes @ 0x4
  2816                           
  2817     0074                     ??_TMR1_WriteTimer:	
  2818                           ; 1 bytes @ 0x4
  2819                           
  2820     0074                     ??_INT_SetInterruptHandler:	
  2821                           ; 1 bytes @ 0x4
  2822                           
  2823                           
  2824                           ; 1 bytes @ 0x4
  2825     0074                     	ds	1
  2826     0075                     ADC_GetConversion@channel:
  2827     0075                     _ajustaValvula$1176:	
  2828                           ; 1 bytes @ 0x5
  2829                           
  2830                           
  2831                           ; 2 bytes @ 0x5
  2832     0075                     	ds	1
  2833     0076                     ?_ajustaPwm:
  2834     0076                     ___fltol@sign1:	
  2835                           ; 1 bytes @ 0x6
  2836                           
  2837     0076                     ajustaPwm@ajuste:	
  2838                           ; 1 bytes @ 0x6
  2839                           
  2840     0076                     ??_LeituraValvula:	
  2841                           ; 2 bytes @ 0x6
  2842                           
  2843     0076                     ??_atualizaDadosRecebidos:	
  2844                           ; 1 bytes @ 0x6
  2845                           
  2846     0076                     ??___flsub:	
  2847                           ; 1 bytes @ 0x6
  2848                           
  2849                           
  2850                           ; 1 bytes @ 0x6
  2851     0076                     	ds	1
  2852     0077                     ___fltol@exp1:
  2853     0077                     ajustaValvula@novaPosicao:	
  2854                           ; 1 bytes @ 0x7
  2855                           
  2856     0077                     ??_AbreValvula:	
  2857                           ; 2 bytes @ 0x7
  2858                           
  2859                           
  2860                           ; 1 bytes @ 0x7
  2861     0077                     	ds	1
  2862     0078                     ??_ajustaPwm:
  2863     0078                     ??_ControleAjuste:	
  2864                           ; 1 bytes @ 0x8
  2865                           
  2866                           
  2867                           ; 1 bytes @ 0x8
  2868     0078                     	ds	1
  2869     0079                     ??_calculateToF:
  2870     0079                     ??_Controle:	
  2871                           ; 1 bytes @ 0x9
  2872                           
  2873                           
  2874                           	psect	cstackBANK0
  2875     0020                     __pcstackBANK0:	
  2876                           ; 1 bytes @ 0x9
  2877                           
  2878     0020                     ?___flge:
  2879     0020                     LeituraValvula@forcar_calibracao:	
  2880                           ; 1 bit 
  2881                           
  2882     0020                     TMR1_ReadTimer@readVal:	
  2883                           ; 1 bytes @ 0x0
  2884                           
  2885     0020                     _ajustaPwm$1172:	
  2886                           ; 2 bytes @ 0x0
  2887                           
  2888     0020                     __Umul8_16@product:	
  2889                           ; 2 bytes @ 0x0
  2890                           
  2891     0020                     ___flge@ff1:	
  2892                           ; 2 bytes @ 0x0
  2893                           
  2894                           
  2895                           ; 4 bytes @ 0x0
  2896     0020                     	ds	1
  2897     0021                     LeituraValvula@valor_sensor:
  2898                           
  2899                           ; 2 bytes @ 0x1
  2900     0021                     	ds	1
  2901     0022                     TMR1_ReadTimer@readValHigh:
  2902     0022                     ajustaPwm@sinalPWM:	
  2903                           ; 1 bytes @ 0x2
  2904                           
  2905     0022                     __Umul8_16@word_mpld:	
  2906                           ; 2 bytes @ 0x2
  2907                           
  2908                           
  2909                           ; 2 bytes @ 0x2
  2910     0022                     	ds	1
  2911     0023                     TMR1_ReadTimer@readValLow:
  2912                           
  2913                           ; 1 bytes @ 0x3
  2914     0023                     	ds	1
  2915     0024                     __Umul8_16@multiplier:
  2916     0024                     ___flge@ff2:	
  2917                           ; 1 bytes @ 0x4
  2918                           
  2919                           
  2920                           ; 4 bytes @ 0x4
  2921     0024                     	ds	1
  2922     0025                     ?___xxtofl:
  2923     0025                     ___xxtofl@val:	
  2924                           ; 4 bytes @ 0x5
  2925                           
  2926                           
  2927                           ; 4 bytes @ 0x5
  2928     0025                     	ds	4
  2929     0029                     ??___xxtofl:
  2930                           
  2931                           ; 1 bytes @ 0x9
  2932     0029                     	ds	4
  2933     002D                     ___xxtofl@sign:
  2934                           
  2935                           ; 1 bytes @ 0xD
  2936     002D                     	ds	1
  2937     002E                     ___xxtofl@exp:
  2938                           
  2939                           ; 1 bytes @ 0xE
  2940     002E                     	ds	1
  2941     002F                     ___xxtofl@arg:
  2942                           
  2943                           ; 4 bytes @ 0xF
  2944     002F                     	ds	4
  2945     0033                     ?___flmul:
  2946     0033                     ___flmul@b:	
  2947                           ; 4 bytes @ 0x13
  2948                           
  2949                           
  2950                           ; 4 bytes @ 0x13
  2951     0033                     	ds	4
  2952     0037                     ___flmul@a:
  2953                           
  2954                           ; 4 bytes @ 0x17
  2955     0037                     	ds	4
  2956     003B                     ??___flmul:
  2957                           
  2958                           ; 1 bytes @ 0x1B
  2959     003B                     	ds	5
  2960     0040                     ___flmul@sign:
  2961                           
  2962                           ; 1 bytes @ 0x20
  2963     0040                     	ds	1
  2964     0041                     ___flmul@aexp:
  2965                           
  2966                           ; 1 bytes @ 0x21
  2967     0041                     	ds	1
  2968     0042                     ___flmul@grs:
  2969                           
  2970                           ; 4 bytes @ 0x22
  2971     0042                     	ds	4
  2972     0046                     ___flmul@bexp:
  2973                           
  2974                           ; 1 bytes @ 0x26
  2975     0046                     	ds	1
  2976     0047                     ___flmul@prod:
  2977                           
  2978                           ; 4 bytes @ 0x27
  2979     0047                     	ds	4
  2980     004B                     ___flmul@temp:
  2981                           
  2982                           ; 2 bytes @ 0x2B
  2983     004B                     	ds	2
  2984     004D                     ?___fladd:
  2985     004D                     ?___fldiv:	
  2986                           ; 4 bytes @ 0x2D
  2987                           
  2988     004D                     ___fladd@b:	
  2989                           ; 4 bytes @ 0x2D
  2990                           
  2991     004D                     ___fldiv@a:	
  2992                           ; 4 bytes @ 0x2D
  2993                           
  2994                           
  2995                           ; 4 bytes @ 0x2D
  2996     004D                     	ds	4
  2997     0051                     ___fladd@a:
  2998     0051                     ___fldiv@b:	
  2999                           ; 4 bytes @ 0x31
  3000                           
  3001                           
  3002                           ; 4 bytes @ 0x31
  3003     0051                     	ds	4
  3004     0055                     ??___fladd:
  3005     0055                     ??___fldiv:	
  3006                           ; 1 bytes @ 0x35
  3007                           
  3008                           
  3009                           ; 1 bytes @ 0x35
  3010     0055                     	ds	5
  3011     005A                     ___fldiv@rem:
  3012                           
  3013                           ; 4 bytes @ 0x3A
  3014     005A                     	ds	3
  3015     005D                     ___fladd@signs:
  3016                           
  3017                           ; 1 bytes @ 0x3D
  3018     005D                     	ds	1
  3019     005E                     ___fladd@aexp:
  3020     005E                     ___fldiv@sign:	
  3021                           ; 1 bytes @ 0x3E
  3022                           
  3023                           
  3024                           ; 1 bytes @ 0x3E
  3025     005E                     	ds	1
  3026     005F                     ___fladd@bexp:
  3027     005F                     ___fldiv@new_exp:	
  3028                           ; 1 bytes @ 0x3F
  3029                           
  3030                           
  3031                           ; 2 bytes @ 0x3F
  3032     005F                     	ds	1
  3033     0060                     ___fladd@grs:
  3034                           
  3035                           ; 1 bytes @ 0x40
  3036     0060                     	ds	1
  3037     0061                     ?___flsub:
  3038     0061                     ___flsub@a:	
  3039                           ; 4 bytes @ 0x41
  3040                           
  3041     0061                     ___fldiv@grs:	
  3042                           ; 4 bytes @ 0x41
  3043                           
  3044                           
  3045                           ; 4 bytes @ 0x41
  3046     0061                     	ds	4
  3047     0065                     ___fldiv@bexp:
  3048     0065                     ___flsub@b:	
  3049                           ; 1 bytes @ 0x45
  3050                           
  3051                           
  3052                           ; 4 bytes @ 0x45
  3053     0065                     	ds	1
  3054     0066                     ___fldiv@aexp:
  3055                           
  3056                           ; 1 bytes @ 0x46
  3057     0066                     	ds	1
  3058     0067                     ?___fltol:
  3059     0067                     ___fltol@f1:	
  3060                           ; 4 bytes @ 0x47
  3061                           
  3062                           
  3063                           ; 4 bytes @ 0x47
  3064     0067                     	ds	4
  3065     006B                     ??___fltol:
  3066                           
  3067                           ; 1 bytes @ 0x4B
  3068     006B                     	ds	4
  3069                           
  3070                           	psect	maintext
  3071     0D13                     __pmaintext:	
  3072 ;;
  3073 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3074 ;;
  3075 ;; *************** function _main *****************
  3076 ;; Defined at:
  3077 ;;		line 48 in file "main.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;		None
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;		None
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  1    wreg      void 
  3084 ;; Registers used:
  3085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3086 ;; Tracked objects:
  3087 ;;		On entry : B1F/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3091 ;;      Params:         0       0       0       0       0       0
  3092 ;;      Locals:         0       0       0       0       0       0
  3093 ;;      Temps:          0       0       0       2       0       0
  3094 ;;      Totals:         0       0       0       2       0       0
  3095 ;;Total ram usage:        2 bytes
  3096 ;; Hardware stack levels required when called: 8
  3097 ;; This function calls:
  3098 ;;		_AbreValvula
  3099 ;;		_Controle
  3100 ;;		_EUSART_is_rx_ready
  3101 ;;		_FechaValvula
  3102 ;;		_LeituraValvula
  3103 ;;		_SYSTEM_Initialize
  3104 ;;		_ajustaPwm
  3105 ;;		_atualizaDadosRecebidos
  3106 ;;		_calculateHeight
  3107 ;;		_calculateToF
  3108 ;;		_processaRecepcaoUSART
  3109 ;; This function is called by:
  3110 ;;		Startup code after reset
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114     0D13                     _main:	
  3115                           ;psect for function _main
  3116                           
  3117     0D13                     l4276:	
  3118                           ;incstack = 0
  3119                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3120                           
  3121                           
  3122                           ;main.c: 51:     SYSTEM_Initialize();
  3123     0D13  3189  21D8  318D   	fcall	_SYSTEM_Initialize
  3124     0D16                     l4278:
  3125                           
  3126                           ;main.c: 52:     LeituraValvula(1);
  3127     0D16  3001               	movlw	1
  3128     0D17  318B  2381  318D   	fcall	_LeituraValvula
  3129     0D1A                     l4280:
  3130                           
  3131                           ;main.c: 54:     (INTCONbits.GIE = 1);
  3132     0D1A  178B               	bsf	11,7	;volatile
  3133     0D1B                     l4282:
  3134                           
  3135                           ;main.c: 55:     (INTCONbits.PEIE = 1);
  3136     0D1B  170B               	bsf	11,6	;volatile
  3137     0D1C                     l4284:
  3138                           
  3139                           ;main.c: 58:     {;main.c: 59:         calculateHeight();
  3140     0D1C  3186  265B  318D   	fcall	_calculateHeight
  3141                           
  3142                           ;main.c: 60:         calculateToF();
  3143     0D1F  318B  23D8  318D   	fcall	_calculateToF
  3144     0D22                     l4286:
  3145                           
  3146                           ;main.c: 61:         _delay((unsigned long)((100)*(16000000/4000.0)));
  3147     0D22  3003               	movlw	3
  3148     0D23  0022               	movlb	2	; select bank2
  3149     0D24  00D5               	movwf	(??_main^(0+256)+1)
  3150     0D25  3008               	movlw	8
  3151     0D26  00D4               	movwf	??_main^(0+256)
  3152     0D27  3077               	movlw	119
  3153     0D28                     u5417:
  3154     0D28  0B89               	decfsz	9,f
  3155     0D29  2D28               	goto	u5417
  3156     0D2A  0BD4               	decfsz	??_main^(0+256),f
  3157     0D2B  2D28               	goto	u5417
  3158     0D2C  0BD5               	decfsz	(??_main^(0+256)+1),f
  3159     0D2D  2D28               	goto	u5417
  3160     0D2E                     l4288:
  3161                           
  3162                           ;main.c: 63:         if (EUSART_is_rx_ready()) {
  3163     0D2E  3180  200D  318D   	fcall	_EUSART_is_rx_ready
  3164     0D31  3A00               	xorlw	0
  3165     0D32  1903               	skipnz
  3166     0D33  2D35               	goto	u5351
  3167     0D34  2D36               	goto	u5350
  3168     0D35                     u5351:
  3169     0D35  2D3A               	goto	l4292
  3170     0D36                     u5350:
  3171     0D36                     l4290:
  3172                           
  3173                           ;main.c: 64:             processaRecepcaoUSART();
  3174     0D36  318A  22A4  318D   	fcall	_processaRecepcaoUSART
  3175                           
  3176                           ;main.c: 65:         } else if (novosDadosCadastrados) {
  3177     0D39  2D43               	goto	l4296
  3178     0D3A                     l4292:
  3179     0D3A  0021               	movlb	1	; select bank1
  3180     0D3B  084F               	movf	_novosDadosCadastrados^(0+128),w
  3181     0D3C  1903               	btfsc	3,2
  3182     0D3D  2D3F               	goto	u5361
  3183     0D3E  2D40               	goto	u5360
  3184     0D3F                     u5361:
  3185     0D3F  2D43               	goto	l4296
  3186     0D40                     u5360:
  3187     0D40                     l4294:
  3188                           
  3189                           ;main.c: 66:             atualizaDadosRecebidos();
  3190     0D40  3180  2061  318D   	fcall	_atualizaDadosRecebidos
  3191     0D43                     l4296:
  3192                           
  3193                           ;main.c: 69:         if (rxbuffer[0] == 1 || rxbuffer[0] == 2) {
  3194     0D43  0021               	movlb	1	; select bank1
  3195     0D44  032F               	decf	_rxbuffer^(0+128),w
  3196     0D45  1903               	btfsc	3,2
  3197     0D46  2D48               	goto	u5371
  3198     0D47  2D49               	goto	u5370
  3199     0D48                     u5371:
  3200     0D48  2D4F               	goto	l4300
  3201     0D49                     u5370:
  3202     0D49                     l4298:
  3203     0D49  3002               	movlw	2
  3204     0D4A  062F               	xorwf	_rxbuffer^(0+128),w
  3205     0D4B  1D03               	btfss	3,2
  3206     0D4C  2D4E               	goto	u5381
  3207     0D4D  2D4F               	goto	u5380
  3208     0D4E                     u5381:
  3209     0D4E  2D53               	goto	l4302
  3210     0D4F                     u5380:
  3211     0D4F                     l4300:
  3212                           
  3213                           ;main.c: 71:             Controle();
  3214     0D4F  318A  223A  318D   	fcall	_Controle
  3215                           
  3216                           ;main.c: 72:         }
  3217     0D52  2D60               	goto	l4310
  3218     0D53                     l4302:
  3219     0D53  082F               	movf	_rxbuffer^(0+128),w
  3220     0D54  1D03               	btfss	3,2
  3221     0D55  2D57               	goto	u5391
  3222     0D56  2D58               	goto	u5390
  3223     0D57                     u5391:
  3224     0D57  2D59               	goto	l4306
  3225     0D58                     u5390:
  3226     0D58  2D60               	goto	l4310
  3227     0D59                     l4306:
  3228     0D59  3003               	movlw	3
  3229     0D5A  062F               	xorwf	_rxbuffer^(0+128),w
  3230     0D5B  1D03               	btfss	3,2
  3231     0D5C  2D5E               	goto	u5401
  3232     0D5D  2D5F               	goto	u5400
  3233     0D5E                     u5401:
  3234     0D5E  2D60               	goto	l4310
  3235     0D5F                     u5400:
  3236     0D5F                     l4308:
  3237     0D5F  0001               	reset	;# 
  3238     0D60                     l4310:
  3239                           
  3240                           ;main.c: 82:         ajustaPwm(128);
  3241     0D60  3080               	movlw	128
  3242     0D61  00F6               	movwf	ajustaPwm@ajuste
  3243     0D62  3000               	movlw	0
  3244     0D63  00F7               	movwf	ajustaPwm@ajuste+1
  3245     0D64  318A  22D3  318D   	fcall	_ajustaPwm
  3246     0D67                     l4312:
  3247                           
  3248                           ;main.c: 83:         _delay((unsigned long)((500)*(16000000/4000.0)));
  3249     0D67  300B               	movlw	11
  3250     0D68  0022               	movlb	2	; select bank2
  3251     0D69  00D5               	movwf	(??_main^(0+256)+1)
  3252     0D6A  3026               	movlw	38
  3253     0D6B  00D4               	movwf	??_main^(0+256)
  3254     0D6C  305D               	movlw	93
  3255     0D6D                     u5427:
  3256     0D6D  0B89               	decfsz	9,f
  3257     0D6E  2D6D               	goto	u5427
  3258     0D6F  0BD4               	decfsz	??_main^(0+256),f
  3259     0D70  2D6D               	goto	u5427
  3260     0D71  0BD5               	decfsz	(??_main^(0+256)+1),f
  3261     0D72  2D6D               	goto	u5427
  3262     0D73  3200               	nop2
  3263     0D74                     l4314:
  3264                           
  3265                           ;main.c: 85:         AbreValvula();
  3266     0D74  3189  219E  318D   	fcall	_AbreValvula
  3267     0D77                     l4316:
  3268                           
  3269                           ;main.c: 86:         _delay((unsigned long)((1000)*(16000000/4000.0)));
  3270     0D77  3015               	movlw	21
  3271     0D78  0022               	movlb	2	; select bank2
  3272     0D79  00D5               	movwf	(??_main^(0+256)+1)
  3273     0D7A  304B               	movlw	75
  3274     0D7B  00D4               	movwf	??_main^(0+256)
  3275     0D7C  30BE               	movlw	190
  3276     0D7D                     u5437:
  3277     0D7D  0B89               	decfsz	9,f
  3278     0D7E  2D7D               	goto	u5437
  3279     0D7F  0BD4               	decfsz	??_main^(0+256),f
  3280     0D80  2D7D               	goto	u5437
  3281     0D81  0BD5               	decfsz	(??_main^(0+256)+1),f
  3282     0D82  2D7D               	goto	u5437
  3283     0D83  0000               	nop
  3284     0D84                     l4318:
  3285                           
  3286                           ;main.c: 88:         FechaValvula();
  3287     0D84  3188  2095  318D   	fcall	_FechaValvula
  3288     0D87                     l4320:
  3289                           
  3290                           ;main.c: 89:         _delay((unsigned long)((1000)*(16000000/4000.0)));
  3291     0D87  3015               	movlw	21
  3292     0D88  0022               	movlb	2	; select bank2
  3293     0D89  00D5               	movwf	(??_main^(0+256)+1)
  3294     0D8A  304B               	movlw	75
  3295     0D8B  00D4               	movwf	??_main^(0+256)
  3296     0D8C  30BE               	movlw	190
  3297     0D8D                     u5447:
  3298     0D8D  0B89               	decfsz	9,f
  3299     0D8E  2D8D               	goto	u5447
  3300     0D8F  0BD4               	decfsz	??_main^(0+256),f
  3301     0D90  2D8D               	goto	u5447
  3302     0D91  0BD5               	decfsz	(??_main^(0+256)+1),f
  3303     0D92  2D8D               	goto	u5447
  3304     0D93  0000               	nop
  3305     0D94  2D1C               	goto	l4284
  3306     0D95  3180  2856         	ljmp	start
  3307     0D97                     __end_of_main:
  3308                           
  3309                           	psect	text1
  3310     0AA4                     __ptext1:	
  3311 ;; *************** function _processaRecepcaoUSART *****************
  3312 ;; Defined at:
  3313 ;;		line 94 in file "main.c"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;		None
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;  i               2    4[COMMON] int 
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  1    wreg      void 
  3320 ;; Registers used:
  3321 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3327 ;;      Params:         0       0       0       0       0       0
  3328 ;;      Locals:         2       0       0       0       0       0
  3329 ;;      Temps:          1       0       0       0       0       0
  3330 ;;      Totals:         3       0       0       0       0       0
  3331 ;;Total ram usage:        3 bytes
  3332 ;; Hardware stack levels used: 1
  3333 ;; Hardware stack levels required when called: 5
  3334 ;; This function calls:
  3335 ;;		_EUSART_Read
  3336 ;; This function is called by:
  3337 ;;		_main
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341     0AA4                     _processaRecepcaoUSART:	
  3342                           ;psect for function _processaRecepcaoUSART
  3343                           
  3344     0AA4                     l3526:	
  3345                           ;incstack = 0
  3346                           ; Regs used in _processaRecepcaoUSART: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  3347                           
  3348                           
  3349                           ;main.c: 95:     for (int i = 0; i < 7; i++) {
  3350     0AA4  01F4               	clrf	processaRecepcaoUSART@i
  3351     0AA5  01F5               	clrf	processaRecepcaoUSART@i+1
  3352     0AA6                     l3532:
  3353                           
  3354                           ;main.c: 96:         rxbuffer[i] = EUSART_Read();
  3355     0AA6  318A  225D  318A   	fcall	_EUSART_Read
  3356     0AA9  00F3               	movwf	??_processaRecepcaoUSART
  3357     0AAA  0874               	movf	processaRecepcaoUSART@i,w
  3358     0AAB  3EAF               	addlw	(low (_rxbuffer| 0))& (0+255)
  3359     0AAC  0086               	movwf	6
  3360     0AAD  0187               	clrf	7
  3361     0AAE  0873               	movf	??_processaRecepcaoUSART,w
  3362     0AAF  0081               	movwf	1
  3363     0AB0                     l3534:
  3364                           
  3365                           ;main.c: 97:     }
  3366     0AB0  3001               	movlw	1
  3367     0AB1  07F4               	addwf	processaRecepcaoUSART@i,f
  3368     0AB2  3000               	movlw	0
  3369     0AB3  3DF5               	addwfc	processaRecepcaoUSART@i+1,f
  3370     0AB4                     l3536:
  3371     0AB4  0875               	movf	processaRecepcaoUSART@i+1,w
  3372     0AB5  3A80               	xorlw	128
  3373     0AB6  00F3               	movwf	??_processaRecepcaoUSART
  3374     0AB7  3080               	movlw	128
  3375     0AB8  0273               	subwf	??_processaRecepcaoUSART,w
  3376     0AB9  1D03               	skipz
  3377     0ABA  2ABD               	goto	u3795
  3378     0ABB  3007               	movlw	7
  3379     0ABC  0274               	subwf	processaRecepcaoUSART@i,w
  3380     0ABD                     u3795:
  3381     0ABD  1C03               	skipc
  3382     0ABE  2AC0               	goto	u3791
  3383     0ABF  2AC1               	goto	u3790
  3384     0AC0                     u3791:
  3385     0AC0  2AA6               	goto	l3532
  3386     0AC1                     u3790:
  3387     0AC1                     l3538:
  3388                           
  3389                           ;main.c: 99:     dados.Modo_Operacao = rxbuffer[0];
  3390     0AC1  0021               	movlb	1	; select bank1
  3391     0AC2  082F               	movf	_rxbuffer^(0+128),w
  3392     0AC3  00A0               	movwf	_dados^(0+128)
  3393                           
  3394                           ;main.c: 100:     dados.height_desejada.bytes[1] = rxbuffer[1];
  3395     0AC4  0830               	movf	(_rxbuffer^(0+128)+1),w
  3396     0AC5  00A2               	movwf	(_dados^(0+128)+2)
  3397                           
  3398                           ;main.c: 101:     dados.height_desejada.bytes[0] = rxbuffer[2];
  3399     0AC6  0831               	movf	(_rxbuffer^(0+128)+2),w
  3400     0AC7  00A1               	movwf	(_dados^(0+128)+1)
  3401                           
  3402                           ;main.c: 102:     dados.valvula_desejada.bytes[1] = rxbuffer[3];
  3403     0AC8  0832               	movf	(_rxbuffer^(0+128)+3),w
  3404     0AC9  00AA               	movwf	(_dados^(0+128)+10)
  3405                           
  3406                           ;main.c: 103:     dados.valvula_desejada.bytes[0] = rxbuffer[4];
  3407     0ACA  0833               	movf	(_rxbuffer^(0+128)+4),w
  3408     0ACB  00A9               	movwf	(_dados^(0+128)+9)
  3409                           
  3410                           ;main.c: 104:     dados.pwm.bytes[1] = rxbuffer[5];
  3411     0ACC  0834               	movf	(_rxbuffer^(0+128)+5),w
  3412     0ACD  00AE               	movwf	(_dados^(0+128)+14)
  3413                           
  3414                           ;main.c: 105:     dados.pwm.bytes[0] = rxbuffer[6];
  3415     0ACE  0835               	movf	(_rxbuffer^(0+128)+6),w
  3416     0ACF  00AD               	movwf	(_dados^(0+128)+13)
  3417     0AD0                     l3540:
  3418                           
  3419                           ;main.c: 107:     novosDadosCadastrados = 1;
  3420     0AD0  3001               	movlw	1
  3421     0AD1  00CF               	movwf	_novosDadosCadastrados^(0+128)
  3422     0AD2                     l577:
  3423     0AD2  0008               	return
  3424     0AD3                     __end_of_processaRecepcaoUSART:
  3425                           
  3426                           	psect	text2
  3427     0A5D                     __ptext2:	
  3428 ;; *************** function _EUSART_Read *****************
  3429 ;; Defined at:
  3430 ;;		line 151 in file "mcc_generated_files/eusart.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;		None
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;  readValue       1    2[COMMON] unsigned char 
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      unsigned char 
  3437 ;; Registers used:
  3438 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3444 ;;      Params:         0       0       0       0       0       0
  3445 ;;      Locals:         1       0       0       0       0       0
  3446 ;;      Temps:          0       0       0       0       0       0
  3447 ;;      Totals:         1       0       0       0       0       0
  3448 ;;Total ram usage:        1 bytes
  3449 ;; Hardware stack levels used: 1
  3450 ;; Hardware stack levels required when called: 4
  3451 ;; This function calls:
  3452 ;;		Nothing
  3453 ;; This function is called by:
  3454 ;;		_processaRecepcaoUSART
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458     0A5D                     _EUSART_Read:	
  3459                           ;psect for function _EUSART_Read
  3460                           
  3461     0A5D                     l3144:	
  3462                           ;incstack = 0
  3463                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  3464                           
  3465     0A5D                     l3146:	
  3466                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  3467                           
  3468                           
  3469                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  3470     0A5D  0021               	movlb	1	; select bank1
  3471     0A5E  0854               	movf	_eusartRxCount^(0+128),w	;volatile
  3472     0A5F  1903               	btfsc	3,2
  3473     0A60  2A62               	goto	u3131
  3474     0A61  2A63               	goto	u3130
  3475     0A62                     u3131:
  3476     0A62  2A5D               	goto	l3146
  3477     0A63                     u3130:
  3478     0A63                     l3148:
  3479                           
  3480                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
  3481     0A63  0879               	movf	_eusartRxTail,w	;volatile
  3482     0A64  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
  3483     0A65  0086               	movwf	6
  3484     0A66  3001               	movlw	1	; select bank2/3
  3485     0A67  0087               	movwf	7
  3486     0A68  0801               	movf	1,w
  3487     0A69  00D3               	movwf	_eusartRxLastError^(0+128)	;volatile
  3488                           
  3489                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
  3490     0A6A  0879               	movf	_eusartRxTail,w
  3491     0A6B  3E28               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
  3492     0A6C  0086               	movwf	6
  3493     0A6D  3001               	movlw	1	; select bank2/3
  3494     0A6E  0087               	movwf	7
  3495     0A6F  0801               	movf	1,w
  3496     0A70  00F2               	movwf	EUSART_Read@readValue
  3497     0A71                     l3150:
  3498     0A71  3001               	movlw	1
  3499     0A72  07F9               	addwf	_eusartRxTail,f	;volatile
  3500     0A73                     l3152:
  3501                           
  3502                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
  3503     0A73  3008               	movlw	8
  3504     0A74  0279               	subwf	_eusartRxTail,w	;volatile
  3505     0A75  1C03               	skipc
  3506     0A76  2A78               	goto	u3141
  3507     0A77  2A79               	goto	u3140
  3508     0A78                     u3141:
  3509     0A78  2A7A               	goto	l3156
  3510     0A79                     u3140:
  3511     0A79                     l3154:
  3512                           
  3513                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
  3514     0A79  01F9               	clrf	_eusartRxTail	;volatile
  3515     0A7A                     l3156:
  3516                           
  3517                           ;mcc_generated_files/eusart.c: 166:     PIE1bits.RCIE = 0;
  3518     0A7A  1291               	bcf	17,5	;volatile
  3519     0A7B                     l3158:
  3520                           
  3521                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
  3522     0A7B  3001               	movlw	1
  3523     0A7C  02D4               	subwf	_eusartRxCount^(0+128),f	;volatile
  3524     0A7D                     l3160:
  3525                           
  3526                           ;mcc_generated_files/eusart.c: 168:     PIE1bits.RCIE = 1;
  3527     0A7D  1691               	bsf	17,5	;volatile
  3528     0A7E                     l3162:
  3529                           
  3530                           ;mcc_generated_files/eusart.c: 170:     return readValue;
  3531     0A7E  0872               	movf	EUSART_Read@readValue,w
  3532     0A7F                     l346:
  3533     0A7F  0008               	return
  3534     0A80                     __end_of_EUSART_Read:
  3535                           
  3536                           	psect	text3
  3537     0BD8                     __ptext3:	
  3538 ;; *************** function _calculateToF *****************
  3539 ;; Defined at:
  3540 ;;		line 143 in file "main.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;		None
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;		None
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  1    wreg      void 
  3547 ;; Registers used:
  3548 ;;		wreg, status,2, status,0, pclath, cstack
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3554 ;;      Params:         0       0       0       0       0       0
  3555 ;;      Locals:         0       0       0       0       0       0
  3556 ;;      Temps:          0       0       0       0       0       0
  3557 ;;      Totals:         0       0       0       0       0       0
  3558 ;;Total ram usage:        0 bytes
  3559 ;; Hardware stack levels used: 1
  3560 ;; Hardware stack levels required when called: 6
  3561 ;; This function calls:
  3562 ;;		_TMR1_ReadTimer
  3563 ;;		_TMR1_StartTimer
  3564 ;;		_TMR1_StopTimer
  3565 ;;		_TMR1_WriteTimer
  3566 ;;		___flmul
  3567 ;;		___fltol
  3568 ;;		___xxtofl
  3569 ;; This function is called by:
  3570 ;;		_main
  3571 ;; This function uses a non-reentrant model
  3572 ;;
  3573                           
  3574     0BD8                     _calculateToF:	
  3575                           ;psect for function _calculateToF
  3576                           
  3577     0BD8                     l591:	
  3578                           ;incstack = 0
  3579                           ; Regs used in _calculateToF: [wreg+status,2+status,0+pclath+cstack]
  3580                           ;main.c: 144:     do { LATAbits.LATA6 = 1; } while(0);
  3581                           
  3582     0BD8  0022               	movlb	2	; select bank2
  3583     0BD9  170C               	bsf	12,6	;volatile
  3584     0BDA                     l4234:
  3585                           
  3586                           ;main.c: 145:     _delay((unsigned long)((10)*(16000000/4000000.0)));
  3587     0BDA  300D               	movlw	13
  3588     0BDB                     u5457:
  3589     0BDB  0B89               	decfsz	9,f
  3590     0BDC  2BDB               	goto	u5457
  3591     0BDD  0000               	nop
  3592     0BDE                     l4236:
  3593     0BDE  0022               	movlb	2	; select bank2
  3594     0BDF  130C               	bcf	12,6	;volatile
  3595     0BE0                     l595:
  3596     0BE0  0020               	movlb	0	; select bank0
  3597     0BE1  1C0D               	btfss	13,0	;volatile
  3598     0BE2  2BE4               	goto	u5291
  3599     0BE3  2BE5               	goto	u5290
  3600     0BE4                     u5291:
  3601     0BE4  2BE0               	goto	l595
  3602     0BE5                     u5290:
  3603     0BE5                     l4238:
  3604                           
  3605                           ;main.c: 149:     TMR1_WriteTimer(0);
  3606     0BE5  3000               	movlw	0
  3607     0BE6  00F2               	movwf	TMR1_WriteTimer@timerVal
  3608     0BE7  00F3               	movwf	TMR1_WriteTimer@timerVal+1
  3609     0BE8  3188  20D1  318B   	fcall	_TMR1_WriteTimer
  3610     0BEB                     l4240:
  3611                           
  3612                           ;main.c: 150:     TMR1_StartTimer();
  3613     0BEB  3180  206C  318B   	fcall	_TMR1_StartTimer
  3614     0BEE                     l598:	
  3615                           ;main.c: 151:     while(PORTBbits.RB0);
  3616                           
  3617     0BEE  0020               	movlb	0	; select bank0
  3618     0BEF  180D               	btfsc	13,0	;volatile
  3619     0BF0  2BF2               	goto	u5301
  3620     0BF1  2BF3               	goto	u5300
  3621     0BF2                     u5301:
  3622     0BF2  2BEE               	goto	l598
  3623     0BF3                     u5300:
  3624     0BF3                     l4242:
  3625                           
  3626                           ;main.c: 152:     TMR1_StopTimer();
  3627     0BF3  3180  206F  318B   	fcall	_TMR1_StopTimer
  3628     0BF6                     l4244:
  3629                           
  3630                           ;main.c: 153:     dados.time_of_flight.total = TMR1_ReadTimer();
  3631     0BF6  3189  214F  318B   	fcall	_TMR1_ReadTimer
  3632     0BF9  0873               	movf	?_TMR1_ReadTimer+1,w
  3633     0BFA  0021               	movlb	1	; select bank1
  3634     0BFB  00A6               	movwf	((_dados+1)^(0+128)+5)
  3635     0BFC  0872               	movf	?_TMR1_ReadTimer,w
  3636     0BFD  00A5               	movwf	(_dados^(0+128)+5)
  3637     0BFE                     l4246:
  3638                           
  3639                           ;main.c: 155:     dados.time_of_flight.total = dados.time_of_flight.total * 0.00025;
  3640     0BFE  0825               	movf	(_dados^(0+128)+5),w
  3641     0BFF  0020               	movlb	0	; select bank0
  3642     0C00  00A5               	movwf	___xxtofl@val
  3643     0C01  0021               	movlb	1	; select bank1
  3644     0C02  0826               	movf	((_dados+1)^(0+128)+5),w
  3645     0C03  0020               	movlb	0	; select bank0
  3646     0C04  00A6               	movwf	___xxtofl@val+1
  3647     0C05  01A7               	clrf	___xxtofl@val+2
  3648     0C06  01A8               	clrf	___xxtofl@val+3
  3649     0C07  3000               	movlw	0
  3650     0C08  318E  2622  318B   	fcall	___xxtofl
  3651     0C0B  0020               	movlb	0	; select bank0
  3652     0C0C  0828               	movf	?___xxtofl+3,w
  3653     0C0D  00BA               	movwf	___flmul@a+3
  3654     0C0E  0827               	movf	?___xxtofl+2,w
  3655     0C0F  00B9               	movwf	___flmul@a+2
  3656     0C10  0826               	movf	?___xxtofl+1,w
  3657     0C11  00B8               	movwf	___flmul@a+1
  3658     0C12  0825               	movf	?___xxtofl,w
  3659     0C13  00B7               	movwf	___flmul@a
  3660     0C14  3039               	movlw	57
  3661     0C15  00B6               	movwf	___flmul@b+3
  3662     0C16  3083               	movlw	131
  3663     0C17  00B5               	movwf	___flmul@b+2
  3664     0C18  3012               	movlw	18
  3665     0C19  00B4               	movwf	___flmul@b+1
  3666     0C1A  306F               	movlw	111
  3667     0C1B  00B3               	movwf	___flmul@b
  3668     0C1C  3180  2070  318B   	fcall	___flmul
  3669     0C1F  0020               	movlb	0	; select bank0
  3670     0C20  0836               	movf	?___flmul+3,w
  3671     0C21  00EA               	movwf	___fltol@f1+3
  3672     0C22  0835               	movf	?___flmul+2,w
  3673     0C23  00E9               	movwf	___fltol@f1+2
  3674     0C24  0834               	movf	?___flmul+1,w
  3675     0C25  00E8               	movwf	___fltol@f1+1
  3676     0C26  0833               	movf	?___flmul,w
  3677     0C27  00E7               	movwf	___fltol@f1
  3678     0C28  318C  2434  318B   	fcall	___fltol
  3679     0C2B  0020               	movlb	0	; select bank0
  3680     0C2C  0868               	movf	?___fltol+1,w
  3681     0C2D  0021               	movlb	1	; select bank1
  3682     0C2E  00A6               	movwf	((_dados+1)^(0+128)+5)
  3683     0C2F  0020               	movlb	0	; select bank0
  3684     0C30  0867               	movf	?___fltol,w
  3685     0C31  0021               	movlb	1	; select bank1
  3686     0C32  00A5               	movwf	(_dados^(0+128)+5)
  3687     0C33                     l601:
  3688     0C33  0008               	return
  3689     0C34                     __end_of_calculateToF:
  3690                           
  3691                           	psect	text4
  3692     08D1                     __ptext4:	
  3693 ;; *************** function _TMR1_WriteTimer *****************
  3694 ;; Defined at:
  3695 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;  timerVal        2    2[COMMON] unsigned short 
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;		None
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  1    wreg      void 
  3702 ;; Registers used:
  3703 ;;		wreg, status,2
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3709 ;;      Params:         2       0       0       0       0       0
  3710 ;;      Locals:         0       0       0       0       0       0
  3711 ;;      Temps:          0       0       0       0       0       0
  3712 ;;      Totals:         2       0       0       0       0       0
  3713 ;;Total ram usage:        2 bytes
  3714 ;; Hardware stack levels used: 1
  3715 ;; Hardware stack levels required when called: 4
  3716 ;; This function calls:
  3717 ;;		Nothing
  3718 ;; This function is called by:
  3719 ;;		_calculateToF
  3720 ;;		_TMR1_Reload
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724     08D1                     _TMR1_WriteTimer:	
  3725                           ;psect for function _TMR1_WriteTimer
  3726                           
  3727     08D1                     l3130:	
  3728                           ;incstack = 0
  3729                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  3730                           
  3731                           
  3732                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  3733     08D1  0020               	movlb	0	; select bank0
  3734     08D2  1D18               	btfss	24,2	;volatile
  3735     08D3  28D5               	goto	u3121
  3736     08D4  28D6               	goto	u3120
  3737     08D5                     u3121:
  3738     08D5  28DD               	goto	l3140
  3739     08D6                     u3120:
  3740     08D6                     l3132:
  3741                           
  3742                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  3743     08D6  1018               	bcf	24,0	;volatile
  3744     08D7                     l3134:
  3745                           
  3746                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
  3747     08D7  0873               	movf	TMR1_WriteTimer@timerVal+1,w
  3748     08D8  0097               	movwf	23	;volatile
  3749     08D9                     l3136:
  3750                           
  3751                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
  3752     08D9  0872               	movf	TMR1_WriteTimer@timerVal,w
  3753     08DA  0096               	movwf	22	;volatile
  3754     08DB                     l3138:
  3755                           
  3756                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  3757     08DB  1418               	bsf	24,0	;volatile
  3758                           
  3759                           ;mcc_generated_files/tmr1.c: 133:     }
  3760     08DC  28E1               	goto	l201
  3761     08DD                     l3140:
  3762                           
  3763                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  3764     08DD  0873               	movf	TMR1_WriteTimer@timerVal+1,w
  3765     08DE  0097               	movwf	23	;volatile
  3766     08DF                     l3142:
  3767                           
  3768                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
  3769     08DF  0872               	movf	TMR1_WriteTimer@timerVal,w
  3770     08E0  0096               	movwf	22	;volatile
  3771     08E1                     l201:
  3772     08E1  0008               	return
  3773     08E2                     __end_of_TMR1_WriteTimer:
  3774                           
  3775                           	psect	text5
  3776     006F                     __ptext5:	
  3777 ;; *************** function _TMR1_StopTimer *****************
  3778 ;; Defined at:
  3779 ;;		line 99 in file "mcc_generated_files/tmr1.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;		None
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;		None
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  1    wreg      void 
  3786 ;; Registers used:
  3787 ;;		None
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3793 ;;      Params:         0       0       0       0       0       0
  3794 ;;      Locals:         0       0       0       0       0       0
  3795 ;;      Temps:          0       0       0       0       0       0
  3796 ;;      Totals:         0       0       0       0       0       0
  3797 ;;Total ram usage:        0 bytes
  3798 ;; Hardware stack levels used: 1
  3799 ;; Hardware stack levels required when called: 4
  3800 ;; This function calls:
  3801 ;;		Nothing
  3802 ;; This function is called by:
  3803 ;;		_calculateToF
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807     006F                     _TMR1_StopTimer:	
  3808                           ;psect for function _TMR1_StopTimer
  3809                           
  3810     006F                     l3124:	
  3811                           ;incstack = 0
  3812                           ; Regs used in _TMR1_StopTimer: []
  3813                           
  3814                           
  3815                           ;mcc_generated_files/tmr1.c: 102:     T1CONbits.TMR1ON = 0;
  3816     006F  0020               	movlb	0	; select bank0
  3817     0070  1018               	bcf	24,0	;volatile
  3818     0071                     l193:
  3819     0071  0008               	return
  3820     0072                     __end_of_TMR1_StopTimer:
  3821                           
  3822                           	psect	text6
  3823     006C                     __ptext6:	
  3824 ;; *************** function _TMR1_StartTimer *****************
  3825 ;; Defined at:
  3826 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;		None
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;		None
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  1    wreg      void 
  3833 ;; Registers used:
  3834 ;;		None
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3840 ;;      Params:         0       0       0       0       0       0
  3841 ;;      Locals:         0       0       0       0       0       0
  3842 ;;      Temps:          0       0       0       0       0       0
  3843 ;;      Totals:         0       0       0       0       0       0
  3844 ;;Total ram usage:        0 bytes
  3845 ;; Hardware stack levels used: 1
  3846 ;; Hardware stack levels required when called: 4
  3847 ;; This function calls:
  3848 ;;		Nothing
  3849 ;; This function is called by:
  3850 ;;		_calculateToF
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854     006C                     _TMR1_StartTimer:	
  3855                           ;psect for function _TMR1_StartTimer
  3856                           
  3857     006C                     l3122:	
  3858                           ;incstack = 0
  3859                           ; Regs used in _TMR1_StartTimer: []
  3860                           
  3861                           
  3862                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  3863     006C  0020               	movlb	0	; select bank0
  3864     006D  1418               	bsf	24,0	;volatile
  3865     006E                     l190:
  3866     006E  0008               	return
  3867     006F                     __end_of_TMR1_StartTimer:
  3868                           
  3869                           	psect	text7
  3870     094F                     __ptext7:	
  3871 ;; *************** function _TMR1_ReadTimer *****************
  3872 ;; Defined at:
  3873 ;;		line 105 in file "mcc_generated_files/tmr1.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;		None
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;  readVal         2    0[BANK0 ] unsigned short 
  3878 ;;  readValLow      1    3[BANK0 ] unsigned char 
  3879 ;;  readValHigh     1    2[BANK0 ] unsigned char 
  3880 ;; Return value:  Size  Location     Type
  3881 ;;                  2    2[COMMON] unsigned short 
  3882 ;; Registers used:
  3883 ;;		wreg
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3889 ;;      Params:         2       0       0       0       0       0
  3890 ;;      Locals:         0       4       0       0       0       0
  3891 ;;      Temps:          5       0       0       0       0       0
  3892 ;;      Totals:         7       4       0       0       0       0
  3893 ;;Total ram usage:       11 bytes
  3894 ;; Hardware stack levels used: 1
  3895 ;; Hardware stack levels required when called: 4
  3896 ;; This function calls:
  3897 ;;		Nothing
  3898 ;; This function is called by:
  3899 ;;		_calculateToF
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902                           
  3903     094F                     _TMR1_ReadTimer:	
  3904                           ;psect for function _TMR1_ReadTimer
  3905                           
  3906     094F                     l3126:	
  3907                           ;incstack = 0
  3908                           ; Regs used in _TMR1_ReadTimer: [wreg]
  3909                           
  3910                           
  3911                           ;mcc_generated_files/tmr1.c: 107:     uint16_t readVal;;mcc_generated_files/tmr1.c: 108:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr1.c: 109:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr1.c: 112:     readValLow = TMR1L;
  3912     094F  0020               	movlb	0	; select bank0
  3913     0950  0816               	movf	22,w	;volatile
  3914     0951  00A3               	movwf	TMR1_ReadTimer@readValLow
  3915                           
  3916                           ;mcc_generated_files/tmr1.c: 113:     readValHigh = TMR1H;
  3917     0952  0817               	movf	23,w	;volatile
  3918     0953  00A2               	movwf	TMR1_ReadTimer@readValHigh
  3919                           
  3920                           ;mcc_generated_files/tmr1.c: 115:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
  3921     0954  0823               	movf	TMR1_ReadTimer@readValLow,w
  3922     0955  00F4               	movwf	??_TMR1_ReadTimer
  3923     0956  01F5               	clrf	??_TMR1_ReadTimer+1
  3924     0957  0822               	movf	TMR1_ReadTimer@readValHigh,w
  3925     0958  00F6               	movwf	??_TMR1_ReadTimer+2
  3926     0959  01F7               	clrf	??_TMR1_ReadTimer+3
  3927     095A  0876               	movf	??_TMR1_ReadTimer+2,w
  3928     095B  00F7               	movwf	??_TMR1_ReadTimer+3
  3929     095C  01F6               	clrf	??_TMR1_ReadTimer+2
  3930     095D  0874               	movf	??_TMR1_ReadTimer,w
  3931     095E  0476               	iorwf	??_TMR1_ReadTimer+2,w
  3932     095F  00A0               	movwf	TMR1_ReadTimer@readVal
  3933     0960  0875               	movf	??_TMR1_ReadTimer+1,w
  3934     0961  0477               	iorwf	??_TMR1_ReadTimer+3,w
  3935     0962  00A1               	movwf	TMR1_ReadTimer@readVal+1
  3936                           
  3937                           ;mcc_generated_files/tmr1.c: 117:     return readVal;
  3938     0963  0821               	movf	TMR1_ReadTimer@readVal+1,w
  3939     0964  00F3               	movwf	?_TMR1_ReadTimer+1
  3940     0965  0820               	movf	TMR1_ReadTimer@readVal,w
  3941     0966  00F2               	movwf	?_TMR1_ReadTimer
  3942     0967                     l196:
  3943     0967  0008               	return
  3944     0968                     __end_of_TMR1_ReadTimer:
  3945                           
  3946                           	psect	text8
  3947     065B                     __ptext8:	
  3948 ;; *************** function _calculateHeight *****************
  3949 ;; Defined at:
  3950 ;;		line 159 in file "main.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;		None
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;		None
  3955 ;; Return value:  Size  Location     Type
  3956 ;;                  4  474[None  ] float 
  3957 ;; Registers used:
  3958 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3964 ;;      Params:         0       0       0       0       0       0
  3965 ;;      Locals:         0       0       0       0       0       0
  3966 ;;      Temps:          0       0       6       0       0       0
  3967 ;;      Totals:         0       0       6       0       0       0
  3968 ;;Total ram usage:        6 bytes
  3969 ;; Hardware stack levels used: 1
  3970 ;; Hardware stack levels required when called: 6
  3971 ;; This function calls:
  3972 ;;		_ADC_GetConversion
  3973 ;;		___fldiv
  3974 ;;		___flge
  3975 ;;		___flmul
  3976 ;;		___fltol
  3977 ;;		___xxtofl
  3978 ;; This function is called by:
  3979 ;;		_main
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983     065B                     _calculateHeight:	
  3984                           ;psect for function _calculateHeight
  3985                           
  3986     065B                     l4220:	
  3987                           ;incstack = 0
  3988                           ; Regs used in _calculateHeight: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3989                           
  3990                           
  3991                           ;main.c: 160:     temperature = ADC_GetConversion(Temp);
  3992     065B  3008               	movlw	8
  3993     065C  3189  2168  3186   	fcall	_ADC_GetConversion
  3994     065F  0872               	movf	?_ADC_GetConversion,w
  3995     0660  0021               	movlb	1	; select bank1
  3996     0661  00DB               	movwf	??_calculateHeight^(0+128)
  3997     0662  0873               	movf	?_ADC_GetConversion+1,w
  3998     0663  00DC               	movwf	(??_calculateHeight^(0+128)+1)
  3999     0664  01DD               	clrf	(??_calculateHeight^(0+128)+2)
  4000     0665  01DE               	clrf	(??_calculateHeight^(0+128)+3)
  4001     0666  085E               	movf	(??_calculateHeight+3)^(0+128),w
  4002     0667  0020               	movlb	0	; select bank0
  4003     0668  00A8               	movwf	___xxtofl@val+3
  4004     0669  0021               	movlb	1	; select bank1
  4005     066A  085D               	movf	(??_calculateHeight+2)^(0+128),w
  4006     066B  0020               	movlb	0	; select bank0
  4007     066C  00A7               	movwf	___xxtofl@val+2
  4008     066D  0021               	movlb	1	; select bank1
  4009     066E  085C               	movf	(??_calculateHeight+1)^(0+128),w
  4010     066F  0020               	movlb	0	; select bank0
  4011     0670  00A6               	movwf	___xxtofl@val+1
  4012     0671  0021               	movlb	1	; select bank1
  4013     0672  085B               	movf	??_calculateHeight^(0+128),w
  4014     0673  0020               	movlb	0	; select bank0
  4015     0674  00A5               	movwf	___xxtofl@val
  4016     0675  3000               	movlw	0
  4017     0676  318E  2622  3186   	fcall	___xxtofl
  4018     0679  0020               	movlb	0	; select bank0
  4019     067A  0828               	movf	?___xxtofl+3,w
  4020     067B  0021               	movlb	1	; select bank1
  4021     067C  00DA               	movwf	(_temperature+3)^(0+128)
  4022     067D  0020               	movlb	0	; select bank0
  4023     067E  0827               	movf	?___xxtofl+2,w
  4024     067F  0021               	movlb	1	; select bank1
  4025     0680  00D9               	movwf	(_temperature+2)^(0+128)
  4026     0681  0020               	movlb	0	; select bank0
  4027     0682  0826               	movf	?___xxtofl+1,w
  4028     0683  0021               	movlb	1	; select bank1
  4029     0684  00D8               	movwf	(_temperature+1)^(0+128)
  4030     0685  0020               	movlb	0	; select bank0
  4031     0686  0825               	movf	?___xxtofl,w
  4032     0687  0021               	movlb	1	; select bank1
  4033     0688  00D7               	movwf	_temperature^(0+128)
  4034                           
  4035                           ;main.c: 161:     temperature = (int)( 0.0488 *(float) temperature);
  4036     0689  085A               	movf	(_temperature+3)^(0+128),w
  4037     068A  0020               	movlb	0	; select bank0
  4038     068B  00BA               	movwf	___flmul@a+3
  4039     068C  0021               	movlb	1	; select bank1
  4040     068D  0859               	movf	(_temperature+2)^(0+128),w
  4041     068E  0020               	movlb	0	; select bank0
  4042     068F  00B9               	movwf	___flmul@a+2
  4043     0690  0021               	movlb	1	; select bank1
  4044     0691  0858               	movf	(_temperature+1)^(0+128),w
  4045     0692  0020               	movlb	0	; select bank0
  4046     0693  00B8               	movwf	___flmul@a+1
  4047     0694  0021               	movlb	1	; select bank1
  4048     0695  0857               	movf	_temperature^(0+128),w
  4049     0696  0020               	movlb	0	; select bank0
  4050     0697  00B7               	movwf	___flmul@a
  4051     0698  303D               	movlw	61
  4052     0699  00B6               	movwf	___flmul@b+3
  4053     069A  3047               	movlw	71
  4054     069B  00B5               	movwf	___flmul@b+2
  4055     069C  30E2               	movlw	226
  4056     069D  00B4               	movwf	___flmul@b+1
  4057     069E  3082               	movlw	130
  4058     069F  00B3               	movwf	___flmul@b
  4059     06A0  3180  2070  3186   	fcall	___flmul
  4060     06A3  0020               	movlb	0	; select bank0
  4061     06A4  0836               	movf	?___flmul+3,w
  4062     06A5  00EA               	movwf	___fltol@f1+3
  4063     06A6  0835               	movf	?___flmul+2,w
  4064     06A7  00E9               	movwf	___fltol@f1+2
  4065     06A8  0834               	movf	?___flmul+1,w
  4066     06A9  00E8               	movwf	___fltol@f1+1
  4067     06AA  0833               	movf	?___flmul,w
  4068     06AB  00E7               	movwf	___fltol@f1
  4069     06AC  318C  2434  3186   	fcall	___fltol
  4070     06AF  0020               	movlb	0	; select bank0
  4071     06B0  0867               	movf	?___fltol,w
  4072     06B1  00A5               	movwf	___xxtofl@val
  4073     06B2  0868               	movf	?___fltol+1,w
  4074     06B3  00A6               	movwf	___xxtofl@val+1
  4075     06B4  0D89               	rlf	9,f
  4076     06B5  3B89               	subwfb	9,f
  4077     06B6  0989               	comf	9,f
  4078     06B7  00A7               	movwf	___xxtofl@val+2
  4079     06B8  00A8               	movwf	___xxtofl@val+3
  4080     06B9  3001               	movlw	1
  4081     06BA  318E  2622  3186   	fcall	___xxtofl
  4082     06BD  0020               	movlb	0	; select bank0
  4083     06BE  0828               	movf	?___xxtofl+3,w
  4084     06BF  0021               	movlb	1	; select bank1
  4085     06C0  00DA               	movwf	(_temperature+3)^(0+128)
  4086     06C1  0020               	movlb	0	; select bank0
  4087     06C2  0827               	movf	?___xxtofl+2,w
  4088     06C3  0021               	movlb	1	; select bank1
  4089     06C4  00D9               	movwf	(_temperature+2)^(0+128)
  4090     06C5  0020               	movlb	0	; select bank0
  4091     06C6  0826               	movf	?___xxtofl+1,w
  4092     06C7  0021               	movlb	1	; select bank1
  4093     06C8  00D8               	movwf	(_temperature+1)^(0+128)
  4094     06C9  0020               	movlb	0	; select bank0
  4095     06CA  0825               	movf	?___xxtofl,w
  4096     06CB  0021               	movlb	1	; select bank1
  4097     06CC  00D7               	movwf	_temperature^(0+128)
  4098                           
  4099                           ;main.c: 162:     if (temperature < 0) temperature = 0;
  4100     06CD  085A               	movf	(_temperature+3)^(0+128),w
  4101     06CE  0020               	movlb	0	; select bank0
  4102     06CF  00A3               	movwf	___flge@ff1+3
  4103     06D0  0021               	movlb	1	; select bank1
  4104     06D1  0859               	movf	(_temperature+2)^(0+128),w
  4105     06D2  0020               	movlb	0	; select bank0
  4106     06D3  00A2               	movwf	___flge@ff1+2
  4107     06D4  0021               	movlb	1	; select bank1
  4108     06D5  0858               	movf	(_temperature+1)^(0+128),w
  4109     06D6  0020               	movlb	0	; select bank0
  4110     06D7  00A1               	movwf	___flge@ff1+1
  4111     06D8  0021               	movlb	1	; select bank1
  4112     06D9  0857               	movf	_temperature^(0+128),w
  4113     06DA  0020               	movlb	0	; select bank0
  4114     06DB  00A0               	movwf	___flge@ff1
  4115     06DC  3000               	movlw	0
  4116     06DD  00A7               	movwf	___flge@ff2+3
  4117     06DE  3000               	movlw	0
  4118     06DF  00A6               	movwf	___flge@ff2+2
  4119     06E0  3000               	movlw	0
  4120     06E1  00A5               	movwf	___flge@ff2+1
  4121     06E2  3000               	movlw	0
  4122     06E3  00A4               	movwf	___flge@ff2
  4123     06E4  318D  2597  3186   	fcall	___flge
  4124     06E7  1803               	btfsc	3,0
  4125     06E8  2EEA               	goto	u5271
  4126     06E9  2EEB               	goto	u5270
  4127     06EA                     u5271:
  4128     06EA  2EF4               	goto	l4224
  4129     06EB                     u5270:
  4130     06EB                     l4222:
  4131     06EB  3000               	movlw	0
  4132     06EC  0021               	movlb	1	; select bank1
  4133     06ED  00DA               	movwf	(_temperature+3)^(0+128)
  4134     06EE  3000               	movlw	0
  4135     06EF  00D9               	movwf	(_temperature+2)^(0+128)
  4136     06F0  3000               	movlw	0
  4137     06F1  00D8               	movwf	(_temperature+1)^(0+128)
  4138     06F2  3000               	movlw	0
  4139     06F3  00D7               	movwf	_temperature^(0+128)
  4140     06F4                     l4224:
  4141                           
  4142                           ;main.c: 163:     if (temperature > 50) temperature = 50;
  4143     06F4  3042               	movlw	66
  4144     06F5  0020               	movlb	0	; select bank0
  4145     06F6  00A3               	movwf	___flge@ff1+3
  4146     06F7  3048               	movlw	72
  4147     06F8  00A2               	movwf	___flge@ff1+2
  4148     06F9  3000               	movlw	0
  4149     06FA  00A1               	movwf	___flge@ff1+1
  4150     06FB  3000               	movlw	0
  4151     06FC  00A0               	movwf	___flge@ff1
  4152     06FD  0021               	movlb	1	; select bank1
  4153     06FE  085A               	movf	(_temperature+3)^(0+128),w
  4154     06FF  0020               	movlb	0	; select bank0
  4155     0700  00A7               	movwf	___flge@ff2+3
  4156     0701  0021               	movlb	1	; select bank1
  4157     0702  0859               	movf	(_temperature+2)^(0+128),w
  4158     0703  0020               	movlb	0	; select bank0
  4159     0704  00A6               	movwf	___flge@ff2+2
  4160     0705  0021               	movlb	1	; select bank1
  4161     0706  0858               	movf	(_temperature+1)^(0+128),w
  4162     0707  0020               	movlb	0	; select bank0
  4163     0708  00A5               	movwf	___flge@ff2+1
  4164     0709  0021               	movlb	1	; select bank1
  4165     070A  0857               	movf	_temperature^(0+128),w
  4166     070B  0020               	movlb	0	; select bank0
  4167     070C  00A4               	movwf	___flge@ff2
  4168     070D  318D  2597  3186   	fcall	___flge
  4169     0710  1803               	btfsc	3,0
  4170     0711  2F13               	goto	u5281
  4171     0712  2F14               	goto	u5280
  4172     0713                     u5281:
  4173     0713  2F1D               	goto	l4228
  4174     0714                     u5280:
  4175     0714                     l4226:
  4176     0714  3042               	movlw	66
  4177     0715  0021               	movlb	1	; select bank1
  4178     0716  00DA               	movwf	(_temperature+3)^(0+128)
  4179     0717  3048               	movlw	72
  4180     0718  00D9               	movwf	(_temperature+2)^(0+128)
  4181     0719  3000               	movlw	0
  4182     071A  00D8               	movwf	(_temperature+1)^(0+128)
  4183     071B  3000               	movlw	0
  4184     071C  00D7               	movwf	_temperature^(0+128)
  4185     071D                     l4228:
  4186                           
  4187                           ;main.c: 164:     temperature_index = temperature;
  4188     071D  0021               	movlb	1	; select bank1
  4189     071E  085A               	movf	(_temperature+3)^(0+128),w
  4190     071F  0020               	movlb	0	; select bank0
  4191     0720  00EA               	movwf	___fltol@f1+3
  4192     0721  0021               	movlb	1	; select bank1
  4193     0722  0859               	movf	(_temperature+2)^(0+128),w
  4194     0723  0020               	movlb	0	; select bank0
  4195     0724  00E9               	movwf	___fltol@f1+2
  4196     0725  0021               	movlb	1	; select bank1
  4197     0726  0858               	movf	(_temperature+1)^(0+128),w
  4198     0727  0020               	movlb	0	; select bank0
  4199     0728  00E8               	movwf	___fltol@f1+1
  4200     0729  0021               	movlb	1	; select bank1
  4201     072A  0857               	movf	_temperature^(0+128),w
  4202     072B  0020               	movlb	0	; select bank0
  4203     072C  00E7               	movwf	___fltol@f1
  4204     072D  318C  2434  3186   	fcall	___fltol
  4205     0730  0020               	movlb	0	; select bank0
  4206     0731  0867               	movf	?___fltol,w
  4207     0732  0021               	movlb	1	; select bank1
  4208     0733  00D2               	movwf	_temperature_index^(0+128)
  4209     0734                     l4230:
  4210                           
  4211                           ;main.c: 165:     soundspeed_t = LUTsoundspeed[temperature_index];
  4212     0734  0852               	movf	_temperature_index^(0+128),w
  4213     0735  00DB               	movwf	??_calculateHeight^(0+128)
  4214     0736  01DC               	clrf	(??_calculateHeight^(0+128)+1)
  4215     0737  35DB               	lslf	??_calculateHeight^(0+128),f
  4216     0738  0DDC               	rlf	(??_calculateHeight^(0+128)+1),f
  4217     0739  35DB               	lslf	??_calculateHeight^(0+128),f
  4218     073A  0DDC               	rlf	(??_calculateHeight^(0+128)+1),f
  4219     073B  30AE               	movlw	low _LUTsoundspeed
  4220     073C  075B               	addwf	??_calculateHeight^(0+128),w
  4221     073D  0084               	movwf	4
  4222     073E  3007               	movlw	high _LUTsoundspeed
  4223     073F  3D5C               	addwfc	(??_calculateHeight+1)^(0+128),w
  4224     0740  3880               	iorlw	128
  4225     0741  0085               	movwf	5
  4226     0742  3F00               	moviw [0]fsr0
  4227     0743  00DD               	movwf	(??_calculateHeight+2)^(0+128)
  4228     0744  3F01               	moviw [1]fsr0
  4229     0745  00DE               	movwf	((??_calculateHeight+2)^(0+128)+1)
  4230     0746  3F02               	moviw [2]fsr0
  4231     0747  00DF               	movwf	((??_calculateHeight+2)^(0+128)+2)
  4232     0748  3F03               	moviw [3]fsr0
  4233     0749  00E0               	movwf	((??_calculateHeight+2)^(0+128)+3)
  4234     074A  0860               	movf	(??_calculateHeight+5)^(0+128),w
  4235     074B  0020               	movlb	0	; select bank0
  4236     074C  00EA               	movwf	___fltol@f1+3
  4237     074D  0021               	movlb	1	; select bank1
  4238     074E  085F               	movf	(??_calculateHeight+4)^(0+128),w
  4239     074F  0020               	movlb	0	; select bank0
  4240     0750  00E9               	movwf	___fltol@f1+2
  4241     0751  0021               	movlb	1	; select bank1
  4242     0752  085E               	movf	(??_calculateHeight+3)^(0+128),w
  4243     0753  0020               	movlb	0	; select bank0
  4244     0754  00E8               	movwf	___fltol@f1+1
  4245     0755  0021               	movlb	1	; select bank1
  4246     0756  085D               	movf	(??_calculateHeight+2)^(0+128),w
  4247     0757  0020               	movlb	0	; select bank0
  4248     0758  00E7               	movwf	___fltol@f1
  4249     0759  318C  2434  3186   	fcall	___fltol
  4250     075C  0020               	movlb	0	; select bank0
  4251     075D  0868               	movf	?___fltol+1,w
  4252     075E  0021               	movlb	1	; select bank1
  4253     075F  00C9               	movwf	(_soundspeed_t+1)^(0+128)
  4254     0760  0020               	movlb	0	; select bank0
  4255     0761  0867               	movf	?___fltol,w
  4256     0762  0021               	movlb	1	; select bank1
  4257     0763  00C8               	movwf	_soundspeed_t^(0+128)
  4258     0764                     l4232:
  4259                           
  4260                           ;main.c: 166:     dados.height.total = (dados.time_of_flight.total*soundspeed/2);
  4261     0764  0825               	movf	(_dados^(0+128)+5),w
  4262     0765  0020               	movlb	0	; select bank0
  4263     0766  00A5               	movwf	___xxtofl@val
  4264     0767  0021               	movlb	1	; select bank1
  4265     0768  0826               	movf	((_dados+1)^(0+128)+5),w
  4266     0769  0020               	movlb	0	; select bank0
  4267     076A  00A6               	movwf	___xxtofl@val+1
  4268     076B  01A7               	clrf	___xxtofl@val+2
  4269     076C  01A8               	clrf	___xxtofl@val+3
  4270     076D  3000               	movlw	0
  4271     076E  318E  2622  3186   	fcall	___xxtofl
  4272     0771  0020               	movlb	0	; select bank0
  4273     0772  0828               	movf	?___xxtofl+3,w
  4274     0773  00BA               	movwf	___flmul@a+3
  4275     0774  0827               	movf	?___xxtofl+2,w
  4276     0775  00B9               	movwf	___flmul@a+2
  4277     0776  0826               	movf	?___xxtofl+1,w
  4278     0777  00B8               	movwf	___flmul@a+1
  4279     0778  0825               	movf	?___xxtofl,w
  4280     0779  00B7               	movwf	___flmul@a
  4281     077A  3000               	movlw	0
  4282     077B  00B6               	movwf	___flmul@b+3
  4283     077C  3000               	movlw	0
  4284     077D  00B5               	movwf	___flmul@b+2
  4285     077E  3000               	movlw	0
  4286     077F  00B4               	movwf	___flmul@b+1
  4287     0780  3000               	movlw	0
  4288     0781  00B3               	movwf	___flmul@b
  4289     0782  3180  2070  3186   	fcall	___flmul
  4290     0785  0020               	movlb	0	; select bank0
  4291     0786  0836               	movf	?___flmul+3,w
  4292     0787  00D4               	movwf	___fldiv@b+3
  4293     0788  0835               	movf	?___flmul+2,w
  4294     0789  00D3               	movwf	___fldiv@b+2
  4295     078A  0834               	movf	?___flmul+1,w
  4296     078B  00D2               	movwf	___fldiv@b+1
  4297     078C  0833               	movf	?___flmul,w
  4298     078D  00D1               	movwf	___fldiv@b
  4299     078E  3040               	movlw	64
  4300     078F  00D0               	movwf	___fldiv@a+3
  4301     0790  3000               	movlw	0
  4302     0791  00CF               	movwf	___fldiv@a+2
  4303     0792  3000               	movlw	0
  4304     0793  00CE               	movwf	___fldiv@a+1
  4305     0794  3000               	movlw	0
  4306     0795  00CD               	movwf	___fldiv@a
  4307     0796  3184  24B7  3186   	fcall	___fldiv
  4308     0799  0020               	movlb	0	; select bank0
  4309     079A  0850               	movf	?___fldiv+3,w
  4310     079B  00EA               	movwf	___fltol@f1+3
  4311     079C  084F               	movf	?___fldiv+2,w
  4312     079D  00E9               	movwf	___fltol@f1+2
  4313     079E  084E               	movf	?___fldiv+1,w
  4314     079F  00E8               	movwf	___fltol@f1+1
  4315     07A0  084D               	movf	?___fldiv,w
  4316     07A1  00E7               	movwf	___fltol@f1
  4317     07A2  318C  2434  3186   	fcall	___fltol
  4318     07A5  0020               	movlb	0	; select bank0
  4319     07A6  0868               	movf	?___fltol+1,w
  4320     07A7  0021               	movlb	1	; select bank1
  4321     07A8  00A4               	movwf	((_dados+1)^(0+128)+3)
  4322     07A9  0020               	movlb	0	; select bank0
  4323     07AA  0867               	movf	?___fltol,w
  4324     07AB  0021               	movlb	1	; select bank1
  4325     07AC  00A3               	movwf	(_dados^(0+128)+3)
  4326     07AD                     l606:
  4327     07AD  0008               	return
  4328     07AE                     __end_of_calculateHeight:
  4329                           
  4330                           	psect	text9
  4331     0D97                     __ptext9:	
  4332 ;; *************** function ___flge *****************
  4333 ;; Defined at:
  4334 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\flge.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;  ff1             4    0[BANK0 ] float 
  4337 ;;  ff2             4    4[BANK0 ] float 
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;		None
  4340 ;; Return value:  Size  Location     Type
  4341 ;;		None               void
  4342 ;; Registers used:
  4343 ;;		wreg, status,2, status,0
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4349 ;;      Params:         0       8       0       0       0       0
  4350 ;;      Locals:         0       0       0       0       0       0
  4351 ;;      Temps:          4       0       0       0       0       0
  4352 ;;      Totals:         4       8       0       0       0       0
  4353 ;;Total ram usage:       12 bytes
  4354 ;; Hardware stack levels used: 1
  4355 ;; Hardware stack levels required when called: 4
  4356 ;; This function calls:
  4357 ;;		Nothing
  4358 ;; This function is called by:
  4359 ;;		_calculateHeight
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363     0D97                     ___flge:	
  4364                           ;psect for function ___flge
  4365                           
  4366     0D97                     l4200:	
  4367                           ;incstack = 0
  4368                           ; Regs used in ___flge: [wreg+status,2+status,0]
  4369                           
  4370     0D97  3000               	movlw	0
  4371     0D98  0020               	movlb	0	; select bank0
  4372     0D99  0520               	andwf	___flge@ff1,w
  4373     0D9A  00F2               	movwf	??___flge
  4374     0D9B  3000               	movlw	0
  4375     0D9C  0521               	andwf	___flge@ff1+1,w
  4376     0D9D  00F3               	movwf	??___flge+1
  4377     0D9E  3080               	movlw	128
  4378     0D9F  0522               	andwf	___flge@ff1+2,w
  4379     0DA0  00F4               	movwf	??___flge+2
  4380     0DA1  307F               	movlw	127
  4381     0DA2  0523               	andwf	___flge@ff1+3,w
  4382     0DA3  00F5               	movwf	??___flge+3
  4383     0DA4  0875               	movf	??___flge+3,w
  4384     0DA5  0474               	iorwf	??___flge+2,w
  4385     0DA6  0473               	iorwf	??___flge+1,w
  4386     0DA7  0472               	iorwf	??___flge,w
  4387     0DA8  1D03               	skipz
  4388     0DA9  2DAB               	goto	u5221
  4389     0DAA  2DAC               	goto	u5220
  4390     0DAB                     u5221:
  4391     0DAB  2DB4               	goto	l1042
  4392     0DAC                     u5220:
  4393     0DAC                     l4202:
  4394     0DAC  3000               	movlw	0
  4395     0DAD  00A3               	movwf	___flge@ff1+3
  4396     0DAE  3000               	movlw	0
  4397     0DAF  00A2               	movwf	___flge@ff1+2
  4398     0DB0  3000               	movlw	0
  4399     0DB1  00A1               	movwf	___flge@ff1+1
  4400     0DB2  3000               	movlw	0
  4401     0DB3  00A0               	movwf	___flge@ff1
  4402     0DB4                     l1042:
  4403     0DB4  3000               	movlw	0
  4404     0DB5  0524               	andwf	___flge@ff2,w
  4405     0DB6  00F2               	movwf	??___flge
  4406     0DB7  3000               	movlw	0
  4407     0DB8  0525               	andwf	___flge@ff2+1,w
  4408     0DB9  00F3               	movwf	??___flge+1
  4409     0DBA  3080               	movlw	128
  4410     0DBB  0526               	andwf	___flge@ff2+2,w
  4411     0DBC  00F4               	movwf	??___flge+2
  4412     0DBD  307F               	movlw	127
  4413     0DBE  0527               	andwf	___flge@ff2+3,w
  4414     0DBF  00F5               	movwf	??___flge+3
  4415     0DC0  0875               	movf	??___flge+3,w
  4416     0DC1  0474               	iorwf	??___flge+2,w
  4417     0DC2  0473               	iorwf	??___flge+1,w
  4418     0DC3  0472               	iorwf	??___flge,w
  4419     0DC4  1D03               	skipz
  4420     0DC5  2DC7               	goto	u5231
  4421     0DC6  2DC8               	goto	u5230
  4422     0DC7                     u5231:
  4423     0DC7  2DD0               	goto	l4206
  4424     0DC8                     u5230:
  4425     0DC8                     l4204:
  4426     0DC8  3000               	movlw	0
  4427     0DC9  00A7               	movwf	___flge@ff2+3
  4428     0DCA  3000               	movlw	0
  4429     0DCB  00A6               	movwf	___flge@ff2+2
  4430     0DCC  3000               	movlw	0
  4431     0DCD  00A5               	movwf	___flge@ff2+1
  4432     0DCE  3000               	movlw	0
  4433     0DCF  00A4               	movwf	___flge@ff2
  4434     0DD0                     l4206:
  4435     0DD0  1FA3               	btfss	___flge@ff1+3,7
  4436     0DD1  2DD3               	goto	u5241
  4437     0DD2  2DD4               	goto	u5240
  4438     0DD3                     u5241:
  4439     0DD3  2DEC               	goto	l4210
  4440     0DD4                     u5240:
  4441     0DD4                     l4208:
  4442     0DD4  3000               	movlw	0
  4443     0DD5  00F2               	movwf	??___flge
  4444     0DD6  3000               	movlw	0
  4445     0DD7  00F3               	movwf	??___flge+1
  4446     0DD8  3000               	movlw	0
  4447     0DD9  00F4               	movwf	??___flge+2
  4448     0DDA  3080               	movlw	128
  4449     0DDB  00F5               	movwf	??___flge+3
  4450     0DDC  0820               	movf	___flge@ff1,w
  4451     0DDD  02F2               	subwf	??___flge,f
  4452     0DDE  0821               	movf	___flge@ff1+1,w
  4453     0DDF  3BF3               	subwfb	??___flge+1,f
  4454     0DE0  0822               	movf	___flge@ff1+2,w
  4455     0DE1  3BF4               	subwfb	??___flge+2,f
  4456     0DE2  0823               	movf	___flge@ff1+3,w
  4457     0DE3  3BF5               	subwfb	??___flge+3,f
  4458     0DE4  0875               	movf	??___flge+3,w
  4459     0DE5  00A3               	movwf	___flge@ff1+3
  4460     0DE6  0874               	movf	??___flge+2,w
  4461     0DE7  00A2               	movwf	___flge@ff1+2
  4462     0DE8  0873               	movf	??___flge+1,w
  4463     0DE9  00A1               	movwf	___flge@ff1+1
  4464     0DEA  0872               	movf	??___flge,w
  4465     0DEB  00A0               	movwf	___flge@ff1
  4466     0DEC                     l4210:
  4467     0DEC  1FA7               	btfss	___flge@ff2+3,7
  4468     0DED  2DEF               	goto	u5251
  4469     0DEE  2DF0               	goto	u5250
  4470     0DEF                     u5251:
  4471     0DEF  2E08               	goto	l1045
  4472     0DF0                     u5250:
  4473     0DF0                     l4212:
  4474     0DF0  3000               	movlw	0
  4475     0DF1  00F2               	movwf	??___flge
  4476     0DF2  3000               	movlw	0
  4477     0DF3  00F3               	movwf	??___flge+1
  4478     0DF4  3000               	movlw	0
  4479     0DF5  00F4               	movwf	??___flge+2
  4480     0DF6  3080               	movlw	128
  4481     0DF7  00F5               	movwf	??___flge+3
  4482     0DF8  0824               	movf	___flge@ff2,w
  4483     0DF9  02F2               	subwf	??___flge,f
  4484     0DFA  0825               	movf	___flge@ff2+1,w
  4485     0DFB  3BF3               	subwfb	??___flge+1,f
  4486     0DFC  0826               	movf	___flge@ff2+2,w
  4487     0DFD  3BF4               	subwfb	??___flge+2,f
  4488     0DFE  0827               	movf	___flge@ff2+3,w
  4489     0DFF  3BF5               	subwfb	??___flge+3,f
  4490     0E00  0875               	movf	??___flge+3,w
  4491     0E01  00A7               	movwf	___flge@ff2+3
  4492     0E02  0874               	movf	??___flge+2,w
  4493     0E03  00A6               	movwf	___flge@ff2+2
  4494     0E04  0873               	movf	??___flge+1,w
  4495     0E05  00A5               	movwf	___flge@ff2+1
  4496     0E06  0872               	movf	??___flge,w
  4497     0E07  00A4               	movwf	___flge@ff2
  4498     0E08                     l1045:
  4499     0E08  3080               	movlw	128
  4500     0E09  06A3               	xorwf	___flge@ff1+3,f
  4501     0E0A  3080               	movlw	128
  4502     0E0B  06A7               	xorwf	___flge@ff2+3,f
  4503     0E0C  0827               	movf	___flge@ff2+3,w
  4504     0E0D  0223               	subwf	___flge@ff1+3,w
  4505     0E0E  1D03               	skipz
  4506     0E0F  2E1A               	goto	u5265
  4507     0E10  0826               	movf	___flge@ff2+2,w
  4508     0E11  0222               	subwf	___flge@ff1+2,w
  4509     0E12  1D03               	skipz
  4510     0E13  2E1A               	goto	u5265
  4511     0E14  0825               	movf	___flge@ff2+1,w
  4512     0E15  0221               	subwf	___flge@ff1+1,w
  4513     0E16  1D03               	skipz
  4514     0E17  2E1A               	goto	u5265
  4515     0E18  0824               	movf	___flge@ff2,w
  4516     0E19  0220               	subwf	___flge@ff1,w
  4517     0E1A                     u5265:
  4518     0E1A  1803               	skipnc
  4519     0E1B  2E1D               	goto	u5261
  4520     0E1C  2E1E               	goto	u5260
  4521     0E1D                     u5261:
  4522     0E1D  2E20               	goto	l4216
  4523     0E1E                     u5260:
  4524     0E1E                     l4214:
  4525     0E1E  1003               	clrc
  4526     0E1F  2E21               	goto	l1050
  4527     0E20                     l4216:
  4528     0E20  1403               	setc
  4529     0E21                     l1050:
  4530     0E21  0008               	return
  4531     0E22                     __end_of___flge:
  4532                           
  4533                           	psect	text10
  4534     04B7                     __ptext10:	
  4535 ;; *************** function ___fldiv *****************
  4536 ;; Defined at:
  4537 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcdiv.c"
  4538 ;; Parameters:    Size  Location     Type
  4539 ;;  a               4   45[BANK0 ] float 
  4540 ;;  b               4   49[BANK0 ] float 
  4541 ;; Auto vars:     Size  Location     Type
  4542 ;;  grs             4   65[BANK0 ] unsigned long 
  4543 ;;  rem             4   58[BANK0 ] unsigned long 
  4544 ;;  new_exp         2   63[BANK0 ] short 
  4545 ;;  aexp            1   70[BANK0 ] unsigned char 
  4546 ;;  bexp            1   69[BANK0 ] unsigned char 
  4547 ;;  sign            1   62[BANK0 ] unsigned char 
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  4   45[BANK0 ] unsigned char 
  4550 ;; Registers used:
  4551 ;;		wreg, status,2, status,0
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4557 ;;      Params:         0       8       0       0       0       0
  4558 ;;      Locals:         0      13       0       0       0       0
  4559 ;;      Temps:          0       5       0       0       0       0
  4560 ;;      Totals:         0      26       0       0       0       0
  4561 ;;Total ram usage:       26 bytes
  4562 ;; Hardware stack levels used: 1
  4563 ;; Hardware stack levels required when called: 4
  4564 ;; This function calls:
  4565 ;;		Nothing
  4566 ;; This function is called by:
  4567 ;;		_calculateHeight
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571     04B7                     ___fldiv:	
  4572                           ;psect for function ___fldiv
  4573                           
  4574     04B7                     l3260:	
  4575                           ;incstack = 0
  4576                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  4577                           
  4578     04B7  0020               	movlb	0	; select bank0
  4579     04B8  0854               	movf	___fldiv@b+3,w
  4580     04B9  3980               	andlw	128
  4581     04BA  00DE               	movwf	___fldiv@sign
  4582     04BB                     l3262:
  4583     04BB  3554               	lslf	___fldiv@b+3,w
  4584     04BC  00E5               	movwf	___fldiv@bexp
  4585     04BD                     l3264:
  4586     04BD  1FD3               	btfss	___fldiv@b+2,7
  4587     04BE  2CC0               	goto	u3321
  4588     04BF  2CC1               	goto	u3320
  4589     04C0                     u3321:
  4590     04C0  2CC2               	goto	l3268
  4591     04C1                     u3320:
  4592     04C1                     l3266:
  4593     04C1  1465               	bsf	___fldiv@bexp,0
  4594     04C2                     l3268:
  4595     04C2  0865               	movf	___fldiv@bexp,w
  4596     04C3  1903               	btfsc	3,2
  4597     04C4  2CC6               	goto	u3331
  4598     04C5  2CC7               	goto	u3330
  4599     04C6                     u3331:
  4600     04C6  2CD7               	goto	l3278
  4601     04C7                     u3330:
  4602     04C7                     l3270:
  4603     04C7  0A65               	incf	___fldiv@bexp,w
  4604     04C8  1D03               	btfss	3,2
  4605     04C9  2CCB               	goto	u3341
  4606     04CA  2CCC               	goto	u3340
  4607     04CB                     u3341:
  4608     04CB  2CD4               	goto	l3274
  4609     04CC                     u3340:
  4610     04CC                     l3272:
  4611     04CC  3000               	movlw	0
  4612     04CD  00D4               	movwf	___fldiv@b+3
  4613     04CE  3000               	movlw	0
  4614     04CF  00D3               	movwf	___fldiv@b+2
  4615     04D0  3000               	movlw	0
  4616     04D1  00D2               	movwf	___fldiv@b+1
  4617     04D2  3000               	movlw	0
  4618     04D3  00D1               	movwf	___fldiv@b
  4619     04D4                     l3274:
  4620     04D4  17D3               	bsf	___fldiv@b+2,7
  4621     04D5                     l3276:
  4622     04D5  01D4               	clrf	___fldiv@b+3
  4623     04D6  2CDF               	goto	l3280
  4624     04D7                     l3278:
  4625     04D7  3000               	movlw	0
  4626     04D8  00D4               	movwf	___fldiv@b+3
  4627     04D9  3000               	movlw	0
  4628     04DA  00D3               	movwf	___fldiv@b+2
  4629     04DB  3000               	movlw	0
  4630     04DC  00D2               	movwf	___fldiv@b+1
  4631     04DD  3000               	movlw	0
  4632     04DE  00D1               	movwf	___fldiv@b
  4633     04DF                     l3280:
  4634     04DF  0850               	movf	___fldiv@a+3,w
  4635     04E0  3980               	andlw	128
  4636     04E1  06DE               	xorwf	___fldiv@sign,f
  4637     04E2                     l3282:
  4638     04E2  3550               	lslf	___fldiv@a+3,w
  4639     04E3  00E6               	movwf	___fldiv@aexp
  4640     04E4                     l3284:
  4641     04E4  1FCF               	btfss	___fldiv@a+2,7
  4642     04E5  2CE7               	goto	u3351
  4643     04E6  2CE8               	goto	u3350
  4644     04E7                     u3351:
  4645     04E7  2CE9               	goto	l3288
  4646     04E8                     u3350:
  4647     04E8                     l3286:
  4648     04E8  1466               	bsf	___fldiv@aexp,0
  4649     04E9                     l3288:
  4650     04E9  0866               	movf	___fldiv@aexp,w
  4651     04EA  1903               	btfsc	3,2
  4652     04EB  2CED               	goto	u3361
  4653     04EC  2CEE               	goto	u3360
  4654     04ED                     u3361:
  4655     04ED  2CFE               	goto	l3298
  4656     04EE                     u3360:
  4657     04EE                     l3290:
  4658     04EE  0A66               	incf	___fldiv@aexp,w
  4659     04EF  1D03               	btfss	3,2
  4660     04F0  2CF2               	goto	u3371
  4661     04F1  2CF3               	goto	u3370
  4662     04F2                     u3371:
  4663     04F2  2CFB               	goto	l3294
  4664     04F3                     u3370:
  4665     04F3                     l3292:
  4666     04F3  3000               	movlw	0
  4667     04F4  00D0               	movwf	___fldiv@a+3
  4668     04F5  3000               	movlw	0
  4669     04F6  00CF               	movwf	___fldiv@a+2
  4670     04F7  3000               	movlw	0
  4671     04F8  00CE               	movwf	___fldiv@a+1
  4672     04F9  3000               	movlw	0
  4673     04FA  00CD               	movwf	___fldiv@a
  4674     04FB                     l3294:
  4675     04FB  17CF               	bsf	___fldiv@a+2,7
  4676     04FC                     l3296:
  4677     04FC  01D0               	clrf	___fldiv@a+3
  4678     04FD  2D06               	goto	l1221
  4679     04FE                     l3298:
  4680     04FE  3000               	movlw	0
  4681     04FF  00D0               	movwf	___fldiv@a+3
  4682     0500  3000               	movlw	0
  4683     0501  00CF               	movwf	___fldiv@a+2
  4684     0502  3000               	movlw	0
  4685     0503  00CE               	movwf	___fldiv@a+1
  4686     0504  3000               	movlw	0
  4687     0505  00CD               	movwf	___fldiv@a
  4688     0506                     l1221:
  4689     0506  0850               	movf	___fldiv@a+3,w
  4690     0507  044F               	iorwf	___fldiv@a+2,w
  4691     0508  044E               	iorwf	___fldiv@a+1,w
  4692     0509  044D               	iorwf	___fldiv@a,w
  4693     050A  1D03               	skipz
  4694     050B  2D0D               	goto	u3381
  4695     050C  2D0E               	goto	u3380
  4696     050D                     u3381:
  4697     050D  2D25               	goto	l3308
  4698     050E                     u3380:
  4699     050E                     l3300:
  4700     050E  3000               	movlw	0
  4701     050F  00D4               	movwf	___fldiv@b+3
  4702     0510  3000               	movlw	0
  4703     0511  00D3               	movwf	___fldiv@b+2
  4704     0512  3000               	movlw	0
  4705     0513  00D2               	movwf	___fldiv@b+1
  4706     0514  3000               	movlw	0
  4707     0515  00D1               	movwf	___fldiv@b
  4708     0516  3080               	movlw	128
  4709     0517  04D3               	iorwf	___fldiv@b+2,f
  4710     0518  307F               	movlw	127
  4711     0519  04D4               	iorwf	___fldiv@b+3,f
  4712     051A                     l3302:
  4713     051A  085E               	movf	___fldiv@sign,w
  4714     051B  04D4               	iorwf	___fldiv@b+3,f
  4715     051C                     l3304:
  4716     051C  0854               	movf	___fldiv@b+3,w
  4717     051D  00D0               	movwf	?___fldiv+3
  4718     051E  0853               	movf	___fldiv@b+2,w
  4719     051F  00CF               	movwf	?___fldiv+2
  4720     0520  0852               	movf	___fldiv@b+1,w
  4721     0521  00CE               	movwf	?___fldiv+1
  4722     0522  0851               	movf	___fldiv@b,w
  4723     0523  00CD               	movwf	?___fldiv
  4724     0524  2E5A               	goto	l1223
  4725     0525                     l3308:
  4726     0525  0865               	movf	___fldiv@bexp,w
  4727     0526  1D03               	btfss	3,2
  4728     0527  2D29               	goto	u3391
  4729     0528  2D2A               	goto	u3390
  4730     0529                     u3391:
  4731     0529  2D33               	goto	l3314
  4732     052A                     u3390:
  4733     052A                     l3310:
  4734     052A  3000               	movlw	0
  4735     052B  00D0               	movwf	?___fldiv+3
  4736     052C  3000               	movlw	0
  4737     052D  00CF               	movwf	?___fldiv+2
  4738     052E  3000               	movlw	0
  4739     052F  00CE               	movwf	?___fldiv+1
  4740     0530  3000               	movlw	0
  4741     0531  00CD               	movwf	?___fldiv
  4742     0532  2E5A               	goto	l1223
  4743     0533                     l3314:
  4744     0533  0865               	movf	___fldiv@bexp,w
  4745     0534  00D5               	movwf	??___fldiv
  4746     0535  01D6               	clrf	??___fldiv+1
  4747     0536  0856               	movf	??___fldiv+1,w
  4748     0537  00D8               	movwf	??___fldiv+3
  4749     0538  0866               	movf	___fldiv@aexp,w
  4750     0539  0255               	subwf	??___fldiv,w
  4751     053A  00D7               	movwf	??___fldiv+2
  4752     053B  1C03               	skipc
  4753     053C  03D8               	decf	??___fldiv+3,f
  4754     053D  0857               	movf	??___fldiv+2,w
  4755     053E  3E7F               	addlw	127
  4756     053F  00DF               	movwf	___fldiv@new_exp
  4757     0540  3000               	movlw	0
  4758     0541  3D58               	addwfc	??___fldiv+3,w
  4759     0542  00E0               	movwf	___fldiv@new_exp+1
  4760     0543                     l3316:
  4761     0543  0854               	movf	___fldiv@b+3,w
  4762     0544  00DD               	movwf	___fldiv@rem+3
  4763     0545  0853               	movf	___fldiv@b+2,w
  4764     0546  00DC               	movwf	___fldiv@rem+2
  4765     0547  0852               	movf	___fldiv@b+1,w
  4766     0548  00DB               	movwf	___fldiv@rem+1
  4767     0549  0851               	movf	___fldiv@b,w
  4768     054A  00DA               	movwf	___fldiv@rem
  4769     054B                     l3318:
  4770     054B  3000               	movlw	0
  4771     054C  00D4               	movwf	___fldiv@b+3
  4772     054D  3000               	movlw	0
  4773     054E  00D3               	movwf	___fldiv@b+2
  4774     054F  3000               	movlw	0
  4775     0550  00D2               	movwf	___fldiv@b+1
  4776     0551  3000               	movlw	0
  4777     0552  00D1               	movwf	___fldiv@b
  4778     0553                     l3320:
  4779     0553  3000               	movlw	0
  4780     0554  00E4               	movwf	___fldiv@grs+3
  4781     0555  3000               	movlw	0
  4782     0556  00E3               	movwf	___fldiv@grs+2
  4783     0557  3000               	movlw	0
  4784     0558  00E2               	movwf	___fldiv@grs+1
  4785     0559  3000               	movlw	0
  4786     055A  00E1               	movwf	___fldiv@grs
  4787     055B                     l3322:
  4788     055B  01E6               	clrf	___fldiv@aexp
  4789     055C  2D99               	goto	l3342
  4790     055D                     l3324:
  4791     055D  0866               	movf	___fldiv@aexp,w
  4792     055E  1903               	btfsc	3,2
  4793     055F  2D61               	goto	u3401
  4794     0560  2D62               	goto	u3400
  4795     0561                     u3401:
  4796     0561  2D7C               	goto	l3334
  4797     0562                     u3400:
  4798     0562                     l3326:
  4799     0562  3001               	movlw	1
  4800     0563                     u3415:
  4801     0563  35DA               	lslf	___fldiv@rem,f
  4802     0564  0DDB               	rlf	___fldiv@rem+1,f
  4803     0565  0DDC               	rlf	___fldiv@rem+2,f
  4804     0566  0DDD               	rlf	___fldiv@rem+3,f
  4805     0567  0B89               	decfsz	9,f
  4806     0568  2D63               	goto	u3415
  4807     0569  3001               	movlw	1
  4808     056A                     u3425:
  4809     056A  35D1               	lslf	___fldiv@b,f
  4810     056B  0DD2               	rlf	___fldiv@b+1,f
  4811     056C  0DD3               	rlf	___fldiv@b+2,f
  4812     056D  0DD4               	rlf	___fldiv@b+3,f
  4813     056E  0B89               	decfsz	9,f
  4814     056F  2D6A               	goto	u3425
  4815     0570                     l3328:
  4816     0570  1FE4               	btfss	___fldiv@grs+3,7
  4817     0571  2D73               	goto	u3431
  4818     0572  2D74               	goto	u3430
  4819     0573                     u3431:
  4820     0573  2D75               	goto	l3332
  4821     0574                     u3430:
  4822     0574                     l3330:
  4823     0574  1451               	bsf	___fldiv@b,0
  4824     0575                     l3332:
  4825     0575  3001               	movlw	1
  4826     0576                     u3445:
  4827     0576  35E1               	lslf	___fldiv@grs,f
  4828     0577  0DE2               	rlf	___fldiv@grs+1,f
  4829     0578  0DE3               	rlf	___fldiv@grs+2,f
  4830     0579  0DE4               	rlf	___fldiv@grs+3,f
  4831     057A  0B89               	decfsz	9,f
  4832     057B  2D76               	goto	u3445
  4833     057C                     l3334:
  4834     057C  0850               	movf	___fldiv@a+3,w
  4835     057D  025D               	subwf	___fldiv@rem+3,w
  4836     057E  1D03               	skipz
  4837     057F  2D8A               	goto	u3455
  4838     0580  084F               	movf	___fldiv@a+2,w
  4839     0581  025C               	subwf	___fldiv@rem+2,w
  4840     0582  1D03               	skipz
  4841     0583  2D8A               	goto	u3455
  4842     0584  084E               	movf	___fldiv@a+1,w
  4843     0585  025B               	subwf	___fldiv@rem+1,w
  4844     0586  1D03               	skipz
  4845     0587  2D8A               	goto	u3455
  4846     0588  084D               	movf	___fldiv@a,w
  4847     0589  025A               	subwf	___fldiv@rem,w
  4848     058A                     u3455:
  4849     058A  1C03               	skipc
  4850     058B  2D8D               	goto	u3451
  4851     058C  2D8E               	goto	u3450
  4852     058D                     u3451:
  4853     058D  2D97               	goto	l3340
  4854     058E                     u3450:
  4855     058E                     l3336:
  4856     058E  1764               	bsf	___fldiv@grs+3,6
  4857     058F                     l3338:
  4858     058F  084D               	movf	___fldiv@a,w
  4859     0590  02DA               	subwf	___fldiv@rem,f
  4860     0591  084E               	movf	___fldiv@a+1,w
  4861     0592  3BDB               	subwfb	___fldiv@rem+1,f
  4862     0593  084F               	movf	___fldiv@a+2,w
  4863     0594  3BDC               	subwfb	___fldiv@rem+2,f
  4864     0595  0850               	movf	___fldiv@a+3,w
  4865     0596  3BDD               	subwfb	___fldiv@rem+3,f
  4866     0597                     l3340:
  4867     0597  3001               	movlw	1
  4868     0598  07E6               	addwf	___fldiv@aexp,f
  4869     0599                     l3342:
  4870     0599  301A               	movlw	26
  4871     059A  0266               	subwf	___fldiv@aexp,w
  4872     059B  1C03               	skipc
  4873     059C  2D9E               	goto	u3461
  4874     059D  2D9F               	goto	u3460
  4875     059E                     u3461:
  4876     059E  2D5D               	goto	l3324
  4877     059F                     u3460:
  4878     059F                     l3344:
  4879     059F  085D               	movf	___fldiv@rem+3,w
  4880     05A0  045C               	iorwf	___fldiv@rem+2,w
  4881     05A1  045B               	iorwf	___fldiv@rem+1,w
  4882     05A2  045A               	iorwf	___fldiv@rem,w
  4883     05A3  1903               	skipnz
  4884     05A4  2DA6               	goto	u3471
  4885     05A5  2DA7               	goto	u3470
  4886     05A6                     u3471:
  4887     05A6  2DC0               	goto	l3358
  4888     05A7                     u3470:
  4889     05A7                     l3346:
  4890     05A7  1461               	bsf	___fldiv@grs,0
  4891     05A8  2DC0               	goto	l3358
  4892     05A9                     l3348:
  4893     05A9  3001               	movlw	1
  4894     05AA                     u3485:
  4895     05AA  35D1               	lslf	___fldiv@b,f
  4896     05AB  0DD2               	rlf	___fldiv@b+1,f
  4897     05AC  0DD3               	rlf	___fldiv@b+2,f
  4898     05AD  0DD4               	rlf	___fldiv@b+3,f
  4899     05AE  0B89               	decfsz	9,f
  4900     05AF  2DAA               	goto	u3485
  4901     05B0                     l3350:
  4902     05B0  1FE4               	btfss	___fldiv@grs+3,7
  4903     05B1  2DB3               	goto	u3491
  4904     05B2  2DB4               	goto	u3490
  4905     05B3                     u3491:
  4906     05B3  2DB5               	goto	l3354
  4907     05B4                     u3490:
  4908     05B4                     l3352:
  4909     05B4  1451               	bsf	___fldiv@b,0
  4910     05B5                     l3354:
  4911     05B5  3001               	movlw	1
  4912     05B6                     u3505:
  4913     05B6  35E1               	lslf	___fldiv@grs,f
  4914     05B7  0DE2               	rlf	___fldiv@grs+1,f
  4915     05B8  0DE3               	rlf	___fldiv@grs+2,f
  4916     05B9  0DE4               	rlf	___fldiv@grs+3,f
  4917     05BA  0B89               	decfsz	9,f
  4918     05BB  2DB6               	goto	u3505
  4919     05BC                     l3356:
  4920     05BC  30FF               	movlw	255
  4921     05BD  07DF               	addwf	___fldiv@new_exp,f
  4922     05BE  30FF               	movlw	255
  4923     05BF  3DE0               	addwfc	___fldiv@new_exp+1,f
  4924     05C0                     l3358:
  4925     05C0  1FD3               	btfss	___fldiv@b+2,7
  4926     05C1  2DC3               	goto	u3511
  4927     05C2  2DC4               	goto	u3510
  4928     05C3                     u3511:
  4929     05C3  2DA9               	goto	l3348
  4930     05C4                     u3510:
  4931     05C4                     l3360:
  4932     05C4  01E6               	clrf	___fldiv@aexp
  4933     05C5                     l3362:
  4934     05C5  1FE4               	btfss	___fldiv@grs+3,7
  4935     05C6  2DC8               	goto	u3521
  4936     05C7  2DC9               	goto	u3520
  4937     05C8                     u3521:
  4938     05C8  2DE5               	goto	l3370
  4939     05C9                     u3520:
  4940     05C9                     l3364:
  4941     05C9  30FF               	movlw	255
  4942     05CA  0561               	andwf	___fldiv@grs,w
  4943     05CB  00D5               	movwf	??___fldiv
  4944     05CC  30FF               	movlw	255
  4945     05CD  0562               	andwf	___fldiv@grs+1,w
  4946     05CE  00D6               	movwf	??___fldiv+1
  4947     05CF  30FF               	movlw	255
  4948     05D0  0563               	andwf	___fldiv@grs+2,w
  4949     05D1  00D7               	movwf	??___fldiv+2
  4950     05D2  307F               	movlw	127
  4951     05D3  0564               	andwf	___fldiv@grs+3,w
  4952     05D4  00D8               	movwf	??___fldiv+3
  4953     05D5  0858               	movf	??___fldiv+3,w
  4954     05D6  0457               	iorwf	??___fldiv+2,w
  4955     05D7  0456               	iorwf	??___fldiv+1,w
  4956     05D8  0455               	iorwf	??___fldiv,w
  4957     05D9  1903               	skipnz
  4958     05DA  2DDC               	goto	u3531
  4959     05DB  2DDD               	goto	u3530
  4960     05DC                     u3531:
  4961     05DC  2DE0               	goto	l1237
  4962     05DD                     u3530:
  4963     05DD                     l3366:
  4964     05DD  3001               	movlw	1
  4965     05DE  00E6               	movwf	___fldiv@aexp
  4966     05DF  2DE5               	goto	l3370
  4967     05E0                     l1237:
  4968     05E0  1C51               	btfss	___fldiv@b,0
  4969     05E1  2DE3               	goto	u3541
  4970     05E2  2DE4               	goto	u3540
  4971     05E3                     u3541:
  4972     05E3  2DE5               	goto	l3370
  4973     05E4                     u3540:
  4974     05E4  2DDD               	goto	l3366
  4975     05E5                     l3370:
  4976     05E5  0866               	movf	___fldiv@aexp,w
  4977     05E6  1903               	btfsc	3,2
  4978     05E7  2DE9               	goto	u3551
  4979     05E8  2DEA               	goto	u3550
  4980     05E9                     u3551:
  4981     05E9  2E10               	goto	l3380
  4982     05EA                     u3550:
  4983     05EA                     l3372:
  4984     05EA  3001               	movlw	1
  4985     05EB  07D1               	addwf	___fldiv@b,f
  4986     05EC  3000               	movlw	0
  4987     05ED  3DD2               	addwfc	___fldiv@b+1,f
  4988     05EE  3DD3               	addwfc	___fldiv@b+2,f
  4989     05EF  3DD4               	addwfc	___fldiv@b+3,f
  4990     05F0                     l3374:
  4991     05F0  1C54               	btfss	___fldiv@b+3,0
  4992     05F1  2DF3               	goto	u3561
  4993     05F2  2DF4               	goto	u3560
  4994     05F3                     u3561:
  4995     05F3  2E10               	goto	l3380
  4996     05F4                     u3560:
  4997     05F4                     l3376:
  4998     05F4  0851               	movf	___fldiv@b,w
  4999     05F5  00D5               	movwf	??___fldiv
  5000     05F6  0852               	movf	___fldiv@b+1,w
  5001     05F7  00D6               	movwf	??___fldiv+1
  5002     05F8  0853               	movf	___fldiv@b+2,w
  5003     05F9  00D7               	movwf	??___fldiv+2
  5004     05FA  0854               	movf	___fldiv@b+3,w
  5005     05FB  00D8               	movwf	??___fldiv+3
  5006     05FC  3001               	movlw	1
  5007     05FD  00D9               	movwf	??___fldiv+4
  5008     05FE                     u3575:
  5009     05FE  37D8               	asrf	??___fldiv+3,f
  5010     05FF  0CD7               	rrf	??___fldiv+2,f
  5011     0600  0CD6               	rrf	??___fldiv+1,f
  5012     0601  0CD5               	rrf	??___fldiv,f
  5013     0602                     u3570:
  5014     0602  0BD9               	decfsz	??___fldiv+4,f
  5015     0603  2DFE               	goto	u3575
  5016     0604  0858               	movf	??___fldiv+3,w
  5017     0605  00D4               	movwf	___fldiv@b+3
  5018     0606  0857               	movf	??___fldiv+2,w
  5019     0607  00D3               	movwf	___fldiv@b+2
  5020     0608  0856               	movf	??___fldiv+1,w
  5021     0609  00D2               	movwf	___fldiv@b+1
  5022     060A  0855               	movf	??___fldiv,w
  5023     060B  00D1               	movwf	___fldiv@b
  5024     060C                     l3378:
  5025     060C  3001               	movlw	1
  5026     060D  07DF               	addwf	___fldiv@new_exp,f
  5027     060E  3000               	movlw	0
  5028     060F  3DE0               	addwfc	___fldiv@new_exp+1,f
  5029     0610                     l3380:
  5030     0610  0860               	movf	___fldiv@new_exp+1,w
  5031     0611  3A80               	xorlw	128
  5032     0612  00D5               	movwf	??___fldiv
  5033     0613  3080               	movlw	128
  5034     0614  0255               	subwf	??___fldiv,w
  5035     0615  1D03               	skipz
  5036     0616  2E19               	goto	u3585
  5037     0617  30FF               	movlw	255
  5038     0618  025F               	subwf	___fldiv@new_exp,w
  5039     0619                     u3585:
  5040     0619  1C03               	skipc
  5041     061A  2E1C               	goto	u3581
  5042     061B  2E1D               	goto	u3580
  5043     061C                     u3581:
  5044     061C  2E2A               	goto	l1242
  5045     061D                     u3580:
  5046     061D                     l3382:
  5047     061D  30FF               	movlw	255
  5048     061E  0020               	movlb	0	; select bank0
  5049     061F  00DF               	movwf	___fldiv@new_exp
  5050     0620  3000               	movlw	0
  5051     0621  00E0               	movwf	___fldiv@new_exp+1
  5052     0622  3000               	movlw	0
  5053     0623  00D4               	movwf	___fldiv@b+3
  5054     0624  3000               	movlw	0
  5055     0625  00D3               	movwf	___fldiv@b+2
  5056     0626  3000               	movlw	0
  5057     0627  00D2               	movwf	___fldiv@b+1
  5058     0628  3000               	movlw	0
  5059     0629  00D1               	movwf	___fldiv@b
  5060     062A                     l1242:
  5061     062A  0020               	movlb	0	; select bank0
  5062     062B  0860               	movf	___fldiv@new_exp+1,w
  5063     062C  3A80               	xorlw	128
  5064     062D  00D5               	movwf	??___fldiv
  5065     062E  3080               	movlw	128
  5066     062F  0255               	subwf	??___fldiv,w
  5067     0630  1D03               	skipz
  5068     0631  2E34               	goto	u3595
  5069     0632  3001               	movlw	1
  5070     0633  025F               	subwf	___fldiv@new_exp,w
  5071     0634                     u3595:
  5072     0634  1803               	skipnc
  5073     0635  2E37               	goto	u3591
  5074     0636  2E38               	goto	u3590
  5075     0637                     u3591:
  5076     0637  2E44               	goto	l1243
  5077     0638                     u3590:
  5078     0638                     l3384:
  5079     0638  0020               	movlb	0	; select bank0
  5080     0639  01DF               	clrf	___fldiv@new_exp
  5081     063A  01E0               	clrf	___fldiv@new_exp+1
  5082     063B                     l3386:
  5083     063B  3000               	movlw	0
  5084     063C  00D4               	movwf	___fldiv@b+3
  5085     063D  3000               	movlw	0
  5086     063E  00D3               	movwf	___fldiv@b+2
  5087     063F  3000               	movlw	0
  5088     0640  00D2               	movwf	___fldiv@b+1
  5089     0641  3000               	movlw	0
  5090     0642  00D1               	movwf	___fldiv@b
  5091     0643                     l3388:
  5092     0643  01DE               	clrf	___fldiv@sign
  5093     0644                     l1243:
  5094     0644  0020               	movlb	0	; select bank0
  5095     0645  085F               	movf	___fldiv@new_exp,w
  5096     0646  00E5               	movwf	___fldiv@bexp
  5097     0647                     l3390:
  5098     0647  1C65               	btfss	___fldiv@bexp,0
  5099     0648  2E4A               	goto	u3601
  5100     0649  2E4B               	goto	u3600
  5101     064A                     u3601:
  5102     064A  2E4D               	goto	l3394
  5103     064B                     u3600:
  5104     064B                     l3392:
  5105     064B  17D3               	bsf	___fldiv@b+2,7
  5106     064C  2E4F               	goto	l1245
  5107     064D                     l3394:
  5108     064D  307F               	movlw	127
  5109     064E  05D3               	andwf	___fldiv@b+2,f
  5110     064F                     l1245:
  5111     064F  0865               	movf	___fldiv@bexp,w
  5112     0650  00D5               	movwf	??___fldiv
  5113     0651  3001               	movlw	1
  5114     0652                     u3615:
  5115     0652  36D5               	lsrf	??___fldiv,f
  5116     0653  0B89               	decfsz	9,f
  5117     0654  2E52               	goto	u3615
  5118     0655  0855               	movf	??___fldiv,w
  5119     0656  00D4               	movwf	___fldiv@b+3
  5120     0657  085E               	movf	___fldiv@sign,w
  5121     0658  04D4               	iorwf	___fldiv@b+3,f
  5122     0659  2D1C               	goto	l3304
  5123     065A                     l1223:
  5124     065A  0008               	return
  5125     065B                     __end_of___fldiv:
  5126                           
  5127                           	psect	text11
  5128     0061                     __ptext11:	
  5129 ;; *************** function _atualizaDadosRecebidos *****************
  5130 ;; Defined at:
  5131 ;;		line 110 in file "main.c"
  5132 ;; Parameters:    Size  Location     Type
  5133 ;;		None
  5134 ;; Auto vars:     Size  Location     Type
  5135 ;;		None
  5136 ;; Return value:  Size  Location     Type
  5137 ;;                  1    wreg      void 
  5138 ;; Registers used:
  5139 ;;		wreg, status,2, status,0, pclath, cstack
  5140 ;; Tracked objects:
  5141 ;;		On entry : 0/0
  5142 ;;		On exit  : 0/0
  5143 ;;		Unchanged: 0/0
  5144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5145 ;;      Params:         0       0       0       0       0       0
  5146 ;;      Locals:         0       0       0       0       0       0
  5147 ;;      Temps:          0       0       0       0       0       0
  5148 ;;      Totals:         0       0       0       0       0       0
  5149 ;;Total ram usage:        0 bytes
  5150 ;; Hardware stack levels used: 1
  5151 ;; Hardware stack levels required when called: 5
  5152 ;; This function calls:
  5153 ;;		_EPWM1_LoadDutyValue
  5154 ;; This function is called by:
  5155 ;;		_main
  5156 ;; This function uses a non-reentrant model
  5157 ;;
  5158                           
  5159     0061                     _atualizaDadosRecebidos:	
  5160                           ;psect for function _atualizaDadosRecebidos
  5161                           
  5162     0061                     l4248:	
  5163                           ;incstack = 0
  5164                           ; Regs used in _atualizaDadosRecebidos: [wreg+status,2+status,0+pclath+cstack]
  5165                           
  5166                           
  5167                           ;main.c: 111:     EPWM1_LoadDutyValue(dados.pwm.total);
  5168     0061  0021               	movlb	1	; select bank1
  5169     0062  082E               	movf	((_dados+1)^(0+128)+13),w
  5170     0063  00F3               	movwf	EPWM1_LoadDutyValue@dutyValue+1
  5171     0064  082D               	movf	(_dados^(0+128)+13),w
  5172     0065  00F2               	movwf	EPWM1_LoadDutyValue@dutyValue
  5173     0066  3189  2121  3180   	fcall	_EPWM1_LoadDutyValue
  5174     0069                     l4250:
  5175                           
  5176                           ;main.c: 112:     novosDadosCadastrados = 0;
  5177     0069  0021               	movlb	1	; select bank1
  5178     006A  01CF               	clrf	_novosDadosCadastrados^(0+128)
  5179     006B                     l580:
  5180     006B  0008               	return
  5181     006C                     __end_of_atualizaDadosRecebidos:
  5182                           
  5183                           	psect	text12
  5184     09D8                     __ptext12:	
  5185 ;; *************** function _SYSTEM_Initialize *****************
  5186 ;; Defined at:
  5187 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5188 ;; Parameters:    Size  Location     Type
  5189 ;;		None
  5190 ;; Auto vars:     Size  Location     Type
  5191 ;;		None
  5192 ;; Return value:  Size  Location     Type
  5193 ;;                  1    wreg      void 
  5194 ;; Registers used:
  5195 ;;		wreg, status,2, status,0, pclath, cstack
  5196 ;; Tracked objects:
  5197 ;;		On entry : 0/0
  5198 ;;		On exit  : 0/0
  5199 ;;		Unchanged: 0/0
  5200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5201 ;;      Params:         0       0       0       0       0       0
  5202 ;;      Locals:         0       0       0       0       0       0
  5203 ;;      Temps:          0       0       0       0       0       0
  5204 ;;      Totals:         0       0       0       0       0       0
  5205 ;;Total ram usage:        0 bytes
  5206 ;; Hardware stack levels used: 1
  5207 ;; Hardware stack levels required when called: 6
  5208 ;; This function calls:
  5209 ;;		_ADC_Initialize
  5210 ;;		_EPWM1_Initialize
  5211 ;;		_EUSART_Initialize
  5212 ;;		_EXT_INT_Initialize
  5213 ;;		_OSCILLATOR_Initialize
  5214 ;;		_PIN_MANAGER_Initialize
  5215 ;;		_TMR1_Initialize
  5216 ;;		_TMR2_Initialize
  5217 ;;		_TMR4_Initialize
  5218 ;;		_WDT_Initialize
  5219 ;; This function is called by:
  5220 ;;		_main
  5221 ;; This function uses a non-reentrant model
  5222 ;;
  5223                           
  5224     09D8                     _SYSTEM_Initialize:	
  5225                           ;psect for function _SYSTEM_Initialize
  5226                           
  5227     09D8                     l3414:	
  5228                           ;incstack = 0
  5229                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5230                           
  5231                           
  5232                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  5233     09D8  3189  2138  3189   	fcall	_PIN_MANAGER_Initialize
  5234                           
  5235                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  5236     09DB  3180  2042  3189   	fcall	_OSCILLATOR_Initialize
  5237                           
  5238                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  5239     09DE  3180  205D  3189   	fcall	_WDT_Initialize
  5240                           
  5241                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  5242     09E1  3180  2016  3189   	fcall	_ADC_Initialize
  5243     09E4                     l3416:
  5244                           
  5245                           ;mcc_generated_files/mcc.c: 57:     EPWM1_Initialize();
  5246     09E4  3188  20A3  3189   	fcall	_EPWM1_Initialize
  5247     09E7                     l3418:
  5248                           
  5249                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  5250     09E7  3188  20E2  3189   	fcall	_TMR4_Initialize
  5251                           
  5252                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  5253     09EA  3180  204F  3189   	fcall	_TMR2_Initialize
  5254     09ED                     l3420:
  5255                           
  5256                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
  5257     09ED  3189  2183  3189   	fcall	_TMR1_Initialize
  5258     09F0                     l3422:
  5259                           
  5260                           ;mcc_generated_files/mcc.c: 61:     EXT_INT_Initialize();
  5261     09F0  3188  207C  3189   	fcall	_EXT_INT_Initialize
  5262     09F3                     l3424:
  5263                           
  5264                           ;mcc_generated_files/mcc.c: 62:     EUSART_Initialize();
  5265     09F3  318B  2308  3189   	fcall	_EUSART_Initialize
  5266     09F6                     l97:
  5267     09F6  0008               	return
  5268     09F7                     __end_of_SYSTEM_Initialize:
  5269                           
  5270                           	psect	text13
  5271     005D                     __ptext13:	
  5272 ;; *************** function _WDT_Initialize *****************
  5273 ;; Defined at:
  5274 ;;		line 75 in file "mcc_generated_files/mcc.c"
  5275 ;; Parameters:    Size  Location     Type
  5276 ;;		None
  5277 ;; Auto vars:     Size  Location     Type
  5278 ;;		None
  5279 ;; Return value:  Size  Location     Type
  5280 ;;                  1    wreg      void 
  5281 ;; Registers used:
  5282 ;;		None
  5283 ;; Tracked objects:
  5284 ;;		On entry : 0/0
  5285 ;;		On exit  : 0/0
  5286 ;;		Unchanged: 0/0
  5287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5288 ;;      Params:         0       0       0       0       0       0
  5289 ;;      Locals:         0       0       0       0       0       0
  5290 ;;      Temps:          0       0       0       0       0       0
  5291 ;;      Totals:         0       0       0       0       0       0
  5292 ;;Total ram usage:        0 bytes
  5293 ;; Hardware stack levels used: 1
  5294 ;; Hardware stack levels required when called: 4
  5295 ;; This function calls:
  5296 ;;		Nothing
  5297 ;; This function is called by:
  5298 ;;		_SYSTEM_Initialize
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302     005D                     _WDT_Initialize:	
  5303                           ;psect for function _WDT_Initialize
  5304                           
  5305     005D                     l3046:	
  5306                           ;incstack = 0
  5307                           ; Regs used in _WDT_Initialize: []
  5308                           
  5309                           
  5310                           ;mcc_generated_files/mcc.c: 78:     WDTCON = 0x16;
  5311     005D  3016               	movlw	22
  5312     005E  0021               	movlb	1	; select bank1
  5313     005F  0097               	movwf	23	;volatile
  5314     0060                     l103:
  5315     0060  0008               	return
  5316     0061                     __end_of_WDT_Initialize:
  5317                           
  5318                           	psect	text14
  5319     08E2                     __ptext14:	
  5320 ;; *************** function _TMR4_Initialize *****************
  5321 ;; Defined at:
  5322 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  5323 ;; Parameters:    Size  Location     Type
  5324 ;;		None
  5325 ;; Auto vars:     Size  Location     Type
  5326 ;;		None
  5327 ;; Return value:  Size  Location     Type
  5328 ;;                  1    wreg      void 
  5329 ;; Registers used:
  5330 ;;		wreg, status,2, status,0, pclath, cstack
  5331 ;; Tracked objects:
  5332 ;;		On entry : 0/0
  5333 ;;		On exit  : 0/0
  5334 ;;		Unchanged: 0/0
  5335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5336 ;;      Params:         0       0       0       0       0       0
  5337 ;;      Locals:         0       0       0       0       0       0
  5338 ;;      Temps:          0       0       0       0       0       0
  5339 ;;      Totals:         0       0       0       0       0       0
  5340 ;;Total ram usage:        0 bytes
  5341 ;; Hardware stack levels used: 1
  5342 ;; Hardware stack levels required when called: 5
  5343 ;; This function calls:
  5344 ;;		_TMR4_SetInterruptHandler
  5345 ;; This function is called by:
  5346 ;;		_SYSTEM_Initialize
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350     08E2                     _TMR4_Initialize:	
  5351                           ;psect for function _TMR4_Initialize
  5352                           
  5353     08E2                     l3060:	
  5354                           ;incstack = 0
  5355                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5356                           
  5357                           
  5358                           ;mcc_generated_files/tmr4.c: 69:     PR4 = 0xFF;
  5359     08E2  30FF               	movlw	255
  5360     08E3  0028               	movlb	8	; select bank8
  5361     08E4  0096               	movwf	22	;volatile
  5362     08E5                     l3062:
  5363                           
  5364                           ;mcc_generated_files/tmr4.c: 72:     TMR4 = 0x00;
  5365     08E5  0195               	clrf	21	;volatile
  5366     08E6                     l3064:
  5367                           
  5368                           ;mcc_generated_files/tmr4.c: 75:     PIR3bits.TMR4IF = 0;
  5369     08E6  0020               	movlb	0	; select bank0
  5370     08E7  1093               	bcf	19,1	;volatile
  5371     08E8                     l3066:
  5372                           
  5373                           ;mcc_generated_files/tmr4.c: 78:     PIE3bits.TMR4IE = 1;
  5374     08E8  0021               	movlb	1	; select bank1
  5375     08E9  1493               	bsf	19,1	;volatile
  5376     08EA                     l3068:
  5377                           
  5378                           ;mcc_generated_files/tmr4.c: 81:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  5379     08EA  3003               	movlw	low _TMR4_DefaultInterruptHandler
  5380     08EB  00F2               	movwf	TMR4_SetInterruptHandler@InterruptHandler
  5381     08EC  3000               	movlw	high _TMR4_DefaultInterruptHandler
  5382     08ED  00F3               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
  5383     08EE  3180  2057  3188   	fcall	_TMR4_SetInterruptHandler
  5384     08F1                     l3070:
  5385                           
  5386                           ;mcc_generated_files/tmr4.c: 84:     T4CON = 0x06;
  5387     08F1  3006               	movlw	6
  5388     08F2  0028               	movlb	8	; select bank8
  5389     08F3  0097               	movwf	23	;volatile
  5390     08F4                     l417:
  5391     08F4  0008               	return
  5392     08F5                     __end_of_TMR4_Initialize:
  5393                           
  5394                           	psect	text15
  5395     0057                     __ptext15:	
  5396 ;; *************** function _TMR4_SetInterruptHandler *****************
  5397 ;; Defined at:
  5398 ;;		line 132 in file "mcc_generated_files/tmr4.c"
  5399 ;; Parameters:    Size  Location     Type
  5400 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  5401 ;;		 -> TMR4_DefaultInterruptHandler(1), 
  5402 ;; Auto vars:     Size  Location     Type
  5403 ;;		None
  5404 ;; Return value:  Size  Location     Type
  5405 ;;                  1    wreg      void 
  5406 ;; Registers used:
  5407 ;;		wreg
  5408 ;; Tracked objects:
  5409 ;;		On entry : 0/0
  5410 ;;		On exit  : 0/0
  5411 ;;		Unchanged: 0/0
  5412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5413 ;;      Params:         2       0       0       0       0       0
  5414 ;;      Locals:         0       0       0       0       0       0
  5415 ;;      Temps:          0       0       0       0       0       0
  5416 ;;      Totals:         2       0       0       0       0       0
  5417 ;;Total ram usage:        2 bytes
  5418 ;; Hardware stack levels used: 1
  5419 ;; Hardware stack levels required when called: 4
  5420 ;; This function calls:
  5421 ;;		Nothing
  5422 ;; This function is called by:
  5423 ;;		_TMR4_Initialize
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           
  5427     0057                     _TMR4_SetInterruptHandler:	
  5428                           ;psect for function _TMR4_SetInterruptHandler
  5429                           
  5430     0057                     l2764:	
  5431                           ;incstack = 0
  5432                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
  5433                           
  5434                           
  5435                           ;mcc_generated_files/tmr4.c: 133:     TMR4_InterruptHandler = InterruptHandler;
  5436     0057  0873               	movf	TMR4_SetInterruptHandler@InterruptHandler+1,w
  5437     0058  0021               	movlb	1	; select bank1
  5438     0059  00EC               	movwf	(_TMR4_InterruptHandler+1)^(0+128)
  5439     005A  0872               	movf	TMR4_SetInterruptHandler@InterruptHandler,w
  5440     005B  00EB               	movwf	_TMR4_InterruptHandler^(0+128)
  5441     005C                     l439:
  5442     005C  0008               	return
  5443     005D                     __end_of_TMR4_SetInterruptHandler:
  5444                           
  5445                           	psect	text16
  5446     004F                     __ptext16:	
  5447 ;; *************** function _TMR2_Initialize *****************
  5448 ;; Defined at:
  5449 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  5450 ;; Parameters:    Size  Location     Type
  5451 ;;		None
  5452 ;; Auto vars:     Size  Location     Type
  5453 ;;		None
  5454 ;; Return value:  Size  Location     Type
  5455 ;;                  1    wreg      void 
  5456 ;; Registers used:
  5457 ;;		status,2
  5458 ;; Tracked objects:
  5459 ;;		On entry : 0/0
  5460 ;;		On exit  : 0/0
  5461 ;;		Unchanged: 0/0
  5462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5463 ;;      Params:         0       0       0       0       0       0
  5464 ;;      Locals:         0       0       0       0       0       0
  5465 ;;      Temps:          0       0       0       0       0       0
  5466 ;;      Totals:         0       0       0       0       0       0
  5467 ;;Total ram usage:        0 bytes
  5468 ;; Hardware stack levels used: 1
  5469 ;; Hardware stack levels required when called: 4
  5470 ;; This function calls:
  5471 ;;		Nothing
  5472 ;; This function is called by:
  5473 ;;		_SYSTEM_Initialize
  5474 ;; This function uses a non-reentrant model
  5475 ;;
  5476                           
  5477     004F                     _TMR2_Initialize:	
  5478                           ;psect for function _TMR2_Initialize
  5479                           
  5480     004F                     l3072:	
  5481                           ;incstack = 0
  5482                           ; Regs used in _TMR2_Initialize: [status,2]
  5483                           
  5484                           
  5485                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  5486     004F  30FF               	movlw	255
  5487     0050  0020               	movlb	0	; select bank0
  5488     0051  009B               	movwf	27	;volatile
  5489     0052                     l3074:
  5490                           
  5491                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  5492     0052  019A               	clrf	26	;volatile
  5493     0053                     l3076:
  5494                           
  5495                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  5496     0053  1091               	bcf	17,1	;volatile
  5497     0054                     l3078:
  5498                           
  5499                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x07;
  5500     0054  3007               	movlw	7
  5501     0055  009C               	movwf	28	;volatile
  5502     0056                     l233:
  5503     0056  0008               	return
  5504     0057                     __end_of_TMR2_Initialize:
  5505                           
  5506                           	psect	text17
  5507     0983                     __ptext17:	
  5508 ;; *************** function _TMR1_Initialize *****************
  5509 ;; Defined at:
  5510 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;		None
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;		None
  5515 ;; Return value:  Size  Location     Type
  5516 ;;                  1    wreg      void 
  5517 ;; Registers used:
  5518 ;;		wreg, status,2, status,0, pclath, cstack
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5524 ;;      Params:         0       0       0       0       0       0
  5525 ;;      Locals:         0       0       0       0       0       0
  5526 ;;      Temps:          0       0       0       0       0       0
  5527 ;;      Totals:         0       0       0       0       0       0
  5528 ;;Total ram usage:        0 bytes
  5529 ;; Hardware stack levels used: 1
  5530 ;; Hardware stack levels required when called: 5
  5531 ;; This function calls:
  5532 ;;		_TMR1_SetInterruptHandler
  5533 ;; This function is called by:
  5534 ;;		_SYSTEM_Initialize
  5535 ;; This function uses a non-reentrant model
  5536 ;;
  5537                           
  5538     0983                     _TMR1_Initialize:	
  5539                           ;psect for function _TMR1_Initialize
  5540                           
  5541     0983                     l3080:	
  5542                           ;incstack = 0
  5543                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5544                           
  5545                           
  5546                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x80;
  5547     0983  3080               	movlw	128
  5548     0984  0020               	movlb	0	; select bank0
  5549     0985  0099               	movwf	25	;volatile
  5550                           
  5551                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xFF;
  5552     0986  30FF               	movlw	255
  5553     0987  0097               	movwf	23	;volatile
  5554                           
  5555                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xFF;
  5556     0988  30FF               	movlw	255
  5557     0989  0096               	movwf	22	;volatile
  5558                           
  5559                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  5560     098A  1011               	bcf	17,0	;volatile
  5561     098B                     l3082:
  5562                           
  5563                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  5564     098B  0817               	movf	23,w	;volatile
  5565     098C  0021               	movlb	1	; select bank1
  5566     098D  00CB               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  5567     098E  0020               	movlb	0	; select bank0
  5568     098F  0816               	movf	22,w	;volatile
  5569     0990  0021               	movlb	1	; select bank1
  5570     0991  00CA               	movwf	_timer1ReloadVal^(0+128)	;volatile
  5571     0992                     l3084:
  5572                           
  5573                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  5574     0992  1411               	bsf	17,0	;volatile
  5575     0993                     l3086:
  5576                           
  5577                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  5578     0993  3002               	movlw	low _TMR1_DefaultInterruptHandler
  5579     0994  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  5580     0995  3000               	movlw	high _TMR1_DefaultInterruptHandler
  5581     0996  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  5582     0997  3180  2049  3189   	fcall	_TMR1_SetInterruptHandler
  5583     099A                     l3088:
  5584                           
  5585                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x01;
  5586     099A  3001               	movlw	1
  5587     099B  0020               	movlb	0	; select bank0
  5588     099C  0098               	movwf	24	;volatile
  5589     099D                     l187:
  5590     099D  0008               	return
  5591     099E                     __end_of_TMR1_Initialize:
  5592                           
  5593                           	psect	text18
  5594     0049                     __ptext18:	
  5595 ;; *************** function _TMR1_SetInterruptHandler *****************
  5596 ;; Defined at:
  5597 ;;		line 171 in file "mcc_generated_files/tmr1.c"
  5598 ;; Parameters:    Size  Location     Type
  5599 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  5600 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  5601 ;; Auto vars:     Size  Location     Type
  5602 ;;		None
  5603 ;; Return value:  Size  Location     Type
  5604 ;;                  1    wreg      void 
  5605 ;; Registers used:
  5606 ;;		wreg
  5607 ;; Tracked objects:
  5608 ;;		On entry : 0/0
  5609 ;;		On exit  : 0/0
  5610 ;;		Unchanged: 0/0
  5611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5612 ;;      Params:         2       0       0       0       0       0
  5613 ;;      Locals:         0       0       0       0       0       0
  5614 ;;      Temps:          0       0       0       0       0       0
  5615 ;;      Totals:         2       0       0       0       0       0
  5616 ;;Total ram usage:        2 bytes
  5617 ;; Hardware stack levels used: 1
  5618 ;; Hardware stack levels required when called: 4
  5619 ;; This function calls:
  5620 ;;		Nothing
  5621 ;; This function is called by:
  5622 ;;		_TMR1_Initialize
  5623 ;; This function uses a non-reentrant model
  5624 ;;
  5625                           
  5626     0049                     _TMR1_SetInterruptHandler:	
  5627                           ;psect for function _TMR1_SetInterruptHandler
  5628                           
  5629     0049                     l2742:	
  5630                           ;incstack = 0
  5631                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  5632                           
  5633                           
  5634                           ;mcc_generated_files/tmr1.c: 172:     TMR1_InterruptHandler = InterruptHandler;
  5635     0049  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  5636     004A  0021               	movlb	1	; select bank1
  5637     004B  00EE               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
  5638     004C  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  5639     004D  00ED               	movwf	_TMR1_InterruptHandler^(0+128)
  5640     004E                     l217:
  5641     004E  0008               	return
  5642     004F                     __end_of_TMR1_SetInterruptHandler:
  5643                           
  5644                           	psect	text19
  5645     0938                     __ptext19:	
  5646 ;; *************** function _PIN_MANAGER_Initialize *****************
  5647 ;; Defined at:
  5648 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;		None
  5651 ;; Auto vars:     Size  Location     Type
  5652 ;;		None
  5653 ;; Return value:  Size  Location     Type
  5654 ;;                  1    wreg      void 
  5655 ;; Registers used:
  5656 ;;		status,2
  5657 ;; Tracked objects:
  5658 ;;		On entry : 0/0
  5659 ;;		On exit  : 0/0
  5660 ;;		Unchanged: 0/0
  5661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5662 ;;      Params:         0       0       0       0       0       0
  5663 ;;      Locals:         0       0       0       0       0       0
  5664 ;;      Temps:          0       0       0       0       0       0
  5665 ;;      Totals:         0       0       0       0       0       0
  5666 ;;Total ram usage:        0 bytes
  5667 ;; Hardware stack levels used: 1
  5668 ;; Hardware stack levels required when called: 4
  5669 ;; This function calls:
  5670 ;;		Nothing
  5671 ;; This function is called by:
  5672 ;;		_SYSTEM_Initialize
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675                           
  5676     0938                     _PIN_MANAGER_Initialize:	
  5677                           ;psect for function _PIN_MANAGER_Initialize
  5678                           
  5679     0938                     l3028:	
  5680                           ;incstack = 0
  5681                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
  5682                           
  5683                           
  5684                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5685     0938  0022               	movlb	2	; select bank2
  5686     0939  018C               	clrf	12	;volatile
  5687                           
  5688                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5689     093A  018D               	clrf	13	;volatile
  5690     093B                     l3030:
  5691                           
  5692                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x21;
  5693     093B  3021               	movlw	33
  5694     093C  0021               	movlb	1	; select bank1
  5695     093D  008C               	movwf	12	;volatile
  5696     093E                     l3032:
  5697                           
  5698                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xF7;
  5699     093E  30F7               	movlw	247
  5700     093F  008D               	movwf	13	;volatile
  5701     0940                     l3034:
  5702                           
  5703                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xF0;
  5704     0940  30F0               	movlw	240
  5705     0941  0023               	movlb	3	; select bank3
  5706     0942  008D               	movwf	13	;volatile
  5707     0943                     l3036:
  5708                           
  5709                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x01;
  5710     0943  3001               	movlw	1
  5711     0944  008C               	movwf	12	;volatile
  5712     0945                     l3038:
  5713                           
  5714                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x11;
  5715     0945  3011               	movlw	17
  5716     0946  0024               	movlb	4	; select bank4
  5717     0947  008D               	movwf	13	;volatile
  5718                           
  5719                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  5720     0948  018C               	clrf	12	;volatile
  5721     0949                     l3040:
  5722                           
  5723                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 0;
  5724     0949  0021               	movlb	1	; select bank1
  5725     094A  1395               	bcf	21,7	;volatile
  5726                           
  5727                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  5728     094B  0022               	movlb	2	; select bank2
  5729     094C  019D               	clrf	29	;volatile
  5730                           
  5731                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  5732     094D  019E               	clrf	30	;volatile
  5733     094E                     l63:
  5734     094E  0008               	return
  5735     094F                     __end_of_PIN_MANAGER_Initialize:
  5736                           
  5737                           	psect	text20
  5738     0042                     __ptext20:	
  5739 ;; *************** function _OSCILLATOR_Initialize *****************
  5740 ;; Defined at:
  5741 ;;		line 65 in file "mcc_generated_files/mcc.c"
  5742 ;; Parameters:    Size  Location     Type
  5743 ;;		None
  5744 ;; Auto vars:     Size  Location     Type
  5745 ;;		None
  5746 ;; Return value:  Size  Location     Type
  5747 ;;                  1    wreg      void 
  5748 ;; Registers used:
  5749 ;;		status,2
  5750 ;; Tracked objects:
  5751 ;;		On entry : 0/0
  5752 ;;		On exit  : 0/0
  5753 ;;		Unchanged: 0/0
  5754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5755 ;;      Params:         0       0       0       0       0       0
  5756 ;;      Locals:         0       0       0       0       0       0
  5757 ;;      Temps:          0       0       0       0       0       0
  5758 ;;      Totals:         0       0       0       0       0       0
  5759 ;;Total ram usage:        0 bytes
  5760 ;; Hardware stack levels used: 1
  5761 ;; Hardware stack levels required when called: 4
  5762 ;; This function calls:
  5763 ;;		Nothing
  5764 ;; This function is called by:
  5765 ;;		_SYSTEM_Initialize
  5766 ;; This function uses a non-reentrant model
  5767 ;;
  5768                           
  5769     0042                     _OSCILLATOR_Initialize:	
  5770                           ;psect for function _OSCILLATOR_Initialize
  5771                           
  5772     0042                     l3042:	
  5773                           ;incstack = 0
  5774                           ; Regs used in _OSCILLATOR_Initialize: [status,2]
  5775                           
  5776                           
  5777                           ;mcc_generated_files/mcc.c: 68:     OSCCON = 0x78;
  5778     0042  3078               	movlw	120
  5779     0043  0021               	movlb	1	; select bank1
  5780     0044  0099               	movwf	25	;volatile
  5781     0045                     l3044:
  5782                           
  5783                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
  5784     0045  0198               	clrf	24	;volatile
  5785                           
  5786                           ;mcc_generated_files/mcc.c: 72:     BORCON = 0x00;
  5787     0046  0022               	movlb	2	; select bank2
  5788     0047  0196               	clrf	22	;volatile
  5789     0048                     l100:
  5790     0048  0008               	return
  5791     0049                     __end_of_OSCILLATOR_Initialize:
  5792                           
  5793                           	psect	text21
  5794     087C                     __ptext21:	
  5795 ;; *************** function _EXT_INT_Initialize *****************
  5796 ;; Defined at:
  5797 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;		None
  5800 ;; Auto vars:     Size  Location     Type
  5801 ;;		None
  5802 ;; Return value:  Size  Location     Type
  5803 ;;                  1    wreg      void 
  5804 ;; Registers used:
  5805 ;;		wreg, status,2, status,0, pclath, cstack
  5806 ;; Tracked objects:
  5807 ;;		On entry : 0/0
  5808 ;;		On exit  : 0/0
  5809 ;;		Unchanged: 0/0
  5810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5811 ;;      Params:         0       0       0       0       0       0
  5812 ;;      Locals:         0       0       0       0       0       0
  5813 ;;      Temps:          0       0       0       0       0       0
  5814 ;;      Totals:         0       0       0       0       0       0
  5815 ;;Total ram usage:        0 bytes
  5816 ;; Hardware stack levels used: 1
  5817 ;; Hardware stack levels required when called: 5
  5818 ;; This function calls:
  5819 ;;		_INT_SetInterruptHandler
  5820 ;; This function is called by:
  5821 ;;		_SYSTEM_Initialize
  5822 ;; This function uses a non-reentrant model
  5823 ;;
  5824                           
  5825     087C                     _EXT_INT_Initialize:	
  5826                           ;psect for function _EXT_INT_Initialize
  5827                           
  5828     087C                     l3090:	
  5829                           ;incstack = 0
  5830                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5831                           
  5832                           
  5833                           ;mcc_generated_files/ext_int.c: 64:     (INTCONbits.INTF = 0);
  5834     087C  108B               	bcf	11,1	;volatile
  5835                           
  5836                           ;mcc_generated_files/ext_int.c: 65:     (OPTION_REGbits.INTEDG = 1);
  5837     087D  0021               	movlb	1	; select bank1
  5838     087E  1715               	bsf	21,6	;volatile
  5839     087F                     l3092:
  5840                           
  5841                           ;mcc_generated_files/ext_int.c: 67:     INT_SetInterruptHandler(INT_DefaultInterruptHand
      +                          ler);
  5842     087F  307B               	movlw	low _INT_DefaultInterruptHandler
  5843     0880  00F2               	movwf	INT_SetInterruptHandler@InterruptHandler
  5844     0881  3008               	movlw	high _INT_DefaultInterruptHandler
  5845     0882  00F3               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  5846     0883  3180  203C  3188   	fcall	_INT_SetInterruptHandler
  5847     0886                     l3094:
  5848                           
  5849                           ;mcc_generated_files/ext_int.c: 68:     (INTCONbits.INTE = 1);
  5850     0886  160B               	bsf	11,4	;volatile
  5851     0887                     l466:
  5852     0887  0008               	return
  5853     0888                     __end_of_EXT_INT_Initialize:
  5854                           
  5855                           	psect	text22
  5856     003C                     __ptext22:	
  5857 ;; *************** function _INT_SetInterruptHandler *****************
  5858 ;; Defined at:
  5859 ;;		line 50 in file "mcc_generated_files/ext_int.c"
  5860 ;; Parameters:    Size  Location     Type
  5861 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  5862 ;;		 -> INT_DefaultInterruptHandler(1), 
  5863 ;; Auto vars:     Size  Location     Type
  5864 ;;		None
  5865 ;; Return value:  Size  Location     Type
  5866 ;;                  1    wreg      void 
  5867 ;; Registers used:
  5868 ;;		wreg
  5869 ;; Tracked objects:
  5870 ;;		On entry : 0/0
  5871 ;;		On exit  : 0/0
  5872 ;;		Unchanged: 0/0
  5873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5874 ;;      Params:         2       0       0       0       0       0
  5875 ;;      Locals:         0       0       0       0       0       0
  5876 ;;      Temps:          0       0       0       0       0       0
  5877 ;;      Totals:         2       0       0       0       0       0
  5878 ;;Total ram usage:        2 bytes
  5879 ;; Hardware stack levels used: 1
  5880 ;; Hardware stack levels required when called: 4
  5881 ;; This function calls:
  5882 ;;		Nothing
  5883 ;; This function is called by:
  5884 ;;		_EXT_INT_Initialize
  5885 ;; This function uses a non-reentrant model
  5886 ;;
  5887                           
  5888     003C                     _INT_SetInterruptHandler:	
  5889                           ;psect for function _INT_SetInterruptHandler
  5890                           
  5891     003C                     l2766:	
  5892                           ;incstack = 0
  5893                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  5894                           
  5895                           
  5896                           ;mcc_generated_files/ext_int.c: 51:     INT_InterruptHandler = InterruptHandler;
  5897     003C  0873               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  5898     003D  0021               	movlb	1	; select bank1
  5899     003E  00EA               	movwf	(_INT_InterruptHandler+1)^(0+128)
  5900     003F  0872               	movf	INT_SetInterruptHandler@InterruptHandler,w
  5901     0040  00E9               	movwf	_INT_InterruptHandler^(0+128)
  5902     0041                     l460:
  5903     0041  0008               	return
  5904     0042                     __end_of_INT_SetInterruptHandler:
  5905                           
  5906                           	psect	text23
  5907     0B08                     __ptext23:	
  5908 ;; *************** function _EUSART_Initialize *****************
  5909 ;; Defined at:
  5910 ;;		line 88 in file "mcc_generated_files/eusart.c"
  5911 ;; Parameters:    Size  Location     Type
  5912 ;;		None
  5913 ;; Auto vars:     Size  Location     Type
  5914 ;;		None
  5915 ;; Return value:  Size  Location     Type
  5916 ;;                  1    wreg      void 
  5917 ;; Registers used:
  5918 ;;		wreg, status,2, status,0, pclath, cstack
  5919 ;; Tracked objects:
  5920 ;;		On entry : 0/0
  5921 ;;		On exit  : 0/0
  5922 ;;		Unchanged: 0/0
  5923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5924 ;;      Params:         0       0       0       0       0       0
  5925 ;;      Locals:         0       0       0       0       0       0
  5926 ;;      Temps:          0       0       0       0       0       0
  5927 ;;      Totals:         0       0       0       0       0       0
  5928 ;;Total ram usage:        0 bytes
  5929 ;; Hardware stack levels used: 1
  5930 ;; Hardware stack levels required when called: 5
  5931 ;; This function calls:
  5932 ;;		_EUSART_SetErrorHandler
  5933 ;;		_EUSART_SetFramingErrorHandler
  5934 ;;		_EUSART_SetOverrunErrorHandler
  5935 ;;		_EUSART_SetRxInterruptHandler
  5936 ;;		_EUSART_SetTxInterruptHandler
  5937 ;; This function is called by:
  5938 ;;		_SYSTEM_Initialize
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942     0B08                     _EUSART_Initialize:	
  5943                           ;psect for function _EUSART_Initialize
  5944                           
  5945     0B08                     l3096:	
  5946                           ;incstack = 0
  5947                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5948                           
  5949                           
  5950                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  5951     0B08  0021               	movlb	1	; select bank1
  5952     0B09  1291               	bcf	17,5	;volatile
  5953     0B0A                     l3098:
  5954                           
  5955                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  5956     0B0A  3044               	movlw	low _EUSART_Receive_ISR
  5957     0B0B  00F2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  5958     0B0C  300B               	movlw	high _EUSART_Receive_ISR
  5959     0B0D  00F3               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  5960     0B0E  3180  2030  318B   	fcall	_EUSART_SetRxInterruptHandler
  5961     0B11                     l3100:
  5962                           
  5963                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  5964     0B11  0021               	movlb	1	; select bank1
  5965     0B12  1211               	bcf	17,4	;volatile
  5966                           
  5967                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  5968     0B13  30BA               	movlw	low _EUSART_Transmit_ISR
  5969     0B14  00F2               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  5970     0B15  3009               	movlw	high _EUSART_Transmit_ISR
  5971     0B16  00F3               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  5972     0B17  3180  2036  318B   	fcall	_EUSART_SetTxInterruptHandler
  5973     0B1A                     l3102:
  5974                           
  5975                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  5976     0B1A  3008               	movlw	8
  5977     0B1B  0023               	movlb	3	; select bank3
  5978     0B1C  009F               	movwf	31	;volatile
  5979     0B1D                     l3104:
  5980                           
  5981                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  5982     0B1D  3090               	movlw	144
  5983     0B1E  009D               	movwf	29	;volatile
  5984     0B1F                     l3106:
  5985                           
  5986                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  5987     0B1F  3024               	movlw	36
  5988     0B20  009E               	movwf	30	;volatile
  5989     0B21                     l3108:
  5990                           
  5991                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0x22;
  5992     0B21  3022               	movlw	34
  5993     0B22  009B               	movwf	27	;volatile
  5994     0B23                     l3110:
  5995                           
  5996                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  5997     0B23  019C               	clrf	28	;volatile
  5998     0B24                     l3112:
  5999                           
  6000                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  6001     0B24  307A               	movlw	low _EUSART_DefaultFramingErrorHandler
  6002     0B25  00F2               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  6003     0B26  3008               	movlw	high _EUSART_DefaultFramingErrorHandler
  6004     0B27  00F3               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  6005     0B28  3180  2024  318B   	fcall	_EUSART_SetFramingErrorHandler
  6006     0B2B                     l3114:
  6007                           
  6008                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  6009     0B2B  3004               	movlw	low _EUSART_DefaultOverrunErrorHandler
  6010     0B2C  00F2               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  6011     0B2D  3000               	movlw	high _EUSART_DefaultOverrunErrorHandler
  6012     0B2E  00F3               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  6013     0B2F  3180  202A  318B   	fcall	_EUSART_SetOverrunErrorHandler
  6014     0B32                     l3116:
  6015                           
  6016                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  6017     0B32  3000               	movlw	low _EUSART_DefaultErrorHandler
  6018     0B33  00F2               	movwf	EUSART_SetErrorHandler@interruptHandler
  6019     0B34  3000               	movlw	high _EUSART_DefaultErrorHandler
  6020     0B35  00F3               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  6021     0B36  3180  201E  318B   	fcall	_EUSART_SetErrorHandler
  6022                           
  6023                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  6024     0B39  0021               	movlb	1	; select bank1
  6025     0B3A  01D3               	clrf	_eusartRxLastError^(0+128)	;volatile
  6026                           
  6027                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  6028     0B3B  01FB               	clrf	_eusartTxHead	;volatile
  6029                           
  6030                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  6031     0B3C  01D6               	clrf	_eusartTxTail^(0+128)	;volatile
  6032     0B3D                     l3118:
  6033                           
  6034                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  6035     0B3D  3008               	movlw	8
  6036     0B3E  00D5               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
  6037                           
  6038                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  6039     0B3F  01FA               	clrf	_eusartRxHead	;volatile
  6040                           
  6041                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  6042     0B40  01F9               	clrf	_eusartRxTail	;volatile
  6043                           
  6044                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  6045     0B41  01D4               	clrf	_eusartRxCount^(0+128)	;volatile
  6046     0B42                     l3120:
  6047                           
  6048                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  6049     0B42  1691               	bsf	17,5	;volatile
  6050     0B43                     l327:
  6051     0B43  0008               	return
  6052     0B44                     __end_of_EUSART_Initialize:
  6053                           
  6054                           	psect	text24
  6055     0036                     __ptext24:	
  6056 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  6057 ;; Defined at:
  6058 ;;		line 276 in file "mcc_generated_files/eusart.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  6061 ;;		 -> EUSART_Transmit_ISR(1), 
  6062 ;; Auto vars:     Size  Location     Type
  6063 ;;		None
  6064 ;; Return value:  Size  Location     Type
  6065 ;;                  1    wreg      void 
  6066 ;; Registers used:
  6067 ;;		wreg
  6068 ;; Tracked objects:
  6069 ;;		On entry : 0/0
  6070 ;;		On exit  : 0/0
  6071 ;;		Unchanged: 0/0
  6072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6073 ;;      Params:         2       0       0       0       0       0
  6074 ;;      Locals:         0       0       0       0       0       0
  6075 ;;      Temps:          0       0       0       0       0       0
  6076 ;;      Totals:         2       0       0       0       0       0
  6077 ;;Total ram usage:        2 bytes
  6078 ;; Hardware stack levels used: 1
  6079 ;; Hardware stack levels required when called: 4
  6080 ;; This function calls:
  6081 ;;		Nothing
  6082 ;; This function is called by:
  6083 ;;		_EUSART_Initialize
  6084 ;; This function uses a non-reentrant model
  6085 ;;
  6086                           
  6087     0036                     _EUSART_SetTxInterruptHandler:	
  6088                           ;psect for function _EUSART_SetTxInterruptHandler
  6089                           
  6090     0036                     l2746:	
  6091                           ;incstack = 0
  6092                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  6093                           
  6094                           
  6095                           ;mcc_generated_files/eusart.c: 277:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  6096     0036  0873               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  6097     0037  0022               	movlb	2	; select bank2
  6098     0038  00D1               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+256)
  6099     0039  0872               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  6100     003A  00D0               	movwf	_EUSART_TxDefaultInterruptHandler^(0+256)
  6101     003B                     l393:
  6102     003B  0008               	return
  6103     003C                     __end_of_EUSART_SetTxInterruptHandler:
  6104                           
  6105                           	psect	text25
  6106     0030                     __ptext25:	
  6107 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  6108 ;; Defined at:
  6109 ;;		line 280 in file "mcc_generated_files/eusart.c"
  6110 ;; Parameters:    Size  Location     Type
  6111 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  6112 ;;		 -> EUSART_Receive_ISR(1), 
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;		None
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  1    wreg      void 
  6117 ;; Registers used:
  6118 ;;		wreg
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/0
  6121 ;;		On exit  : 0/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6124 ;;      Params:         2       0       0       0       0       0
  6125 ;;      Locals:         0       0       0       0       0       0
  6126 ;;      Temps:          0       0       0       0       0       0
  6127 ;;      Totals:         2       0       0       0       0       0
  6128 ;;Total ram usage:        2 bytes
  6129 ;; Hardware stack levels used: 1
  6130 ;; Hardware stack levels required when called: 4
  6131 ;; This function calls:
  6132 ;;		Nothing
  6133 ;; This function is called by:
  6134 ;;		_EUSART_Initialize
  6135 ;; This function uses a non-reentrant model
  6136 ;;
  6137                           
  6138     0030                     _EUSART_SetRxInterruptHandler:	
  6139                           ;psect for function _EUSART_SetRxInterruptHandler
  6140                           
  6141     0030                     l2744:	
  6142                           ;incstack = 0
  6143                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  6144                           
  6145                           
  6146                           ;mcc_generated_files/eusart.c: 281:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  6147     0030  0873               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  6148     0031  0022               	movlb	2	; select bank2
  6149     0032  00CF               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+256)
  6150     0033  0872               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  6151     0034  00CE               	movwf	_EUSART_RxDefaultInterruptHandler^(0+256)
  6152     0035                     l396:
  6153     0035  0008               	return
  6154     0036                     __end_of_EUSART_SetRxInterruptHandler:
  6155                           
  6156                           	psect	text26
  6157     002A                     __ptext26:	
  6158 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  6159 ;; Defined at:
  6160 ;;		line 268 in file "mcc_generated_files/eusart.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  6163 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  6164 ;; Auto vars:     Size  Location     Type
  6165 ;;		None
  6166 ;; Return value:  Size  Location     Type
  6167 ;;                  1    wreg      void 
  6168 ;; Registers used:
  6169 ;;		wreg
  6170 ;; Tracked objects:
  6171 ;;		On entry : 0/0
  6172 ;;		On exit  : 0/0
  6173 ;;		Unchanged: 0/0
  6174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6175 ;;      Params:         2       0       0       0       0       0
  6176 ;;      Locals:         0       0       0       0       0       0
  6177 ;;      Temps:          0       0       0       0       0       0
  6178 ;;      Totals:         2       0       0       0       0       0
  6179 ;;Total ram usage:        2 bytes
  6180 ;; Hardware stack levels used: 1
  6181 ;; Hardware stack levels required when called: 4
  6182 ;; This function calls:
  6183 ;;		Nothing
  6184 ;; This function is called by:
  6185 ;;		_EUSART_Initialize
  6186 ;; This function uses a non-reentrant model
  6187 ;;
  6188                           
  6189     002A                     _EUSART_SetOverrunErrorHandler:	
  6190                           ;psect for function _EUSART_SetOverrunErrorHandler
  6191                           
  6192     002A                     l2750:	
  6193                           ;incstack = 0
  6194                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  6195                           
  6196                           
  6197                           ;mcc_generated_files/eusart.c: 269:     EUSART_OverrunErrorHandler = interruptHandler;
  6198     002A  0873               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  6199     002B  0022               	movlb	2	; select bank2
  6200     002C  00CB               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  6201     002D  0872               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  6202     002E  00CA               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  6203     002F                     l387:
  6204     002F  0008               	return
  6205     0030                     __end_of_EUSART_SetOverrunErrorHandler:
  6206                           
  6207                           	psect	text27
  6208     0024                     __ptext27:	
  6209 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  6210 ;; Defined at:
  6211 ;;		line 264 in file "mcc_generated_files/eusart.c"
  6212 ;; Parameters:    Size  Location     Type
  6213 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  6214 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  6215 ;; Auto vars:     Size  Location     Type
  6216 ;;		None
  6217 ;; Return value:  Size  Location     Type
  6218 ;;                  1    wreg      void 
  6219 ;; Registers used:
  6220 ;;		wreg
  6221 ;; Tracked objects:
  6222 ;;		On entry : 0/0
  6223 ;;		On exit  : 0/0
  6224 ;;		Unchanged: 0/0
  6225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6226 ;;      Params:         2       0       0       0       0       0
  6227 ;;      Locals:         0       0       0       0       0       0
  6228 ;;      Temps:          0       0       0       0       0       0
  6229 ;;      Totals:         2       0       0       0       0       0
  6230 ;;Total ram usage:        2 bytes
  6231 ;; Hardware stack levels used: 1
  6232 ;; Hardware stack levels required when called: 4
  6233 ;; This function calls:
  6234 ;;		Nothing
  6235 ;; This function is called by:
  6236 ;;		_EUSART_Initialize
  6237 ;; This function uses a non-reentrant model
  6238 ;;
  6239                           
  6240     0024                     _EUSART_SetFramingErrorHandler:	
  6241                           ;psect for function _EUSART_SetFramingErrorHandler
  6242                           
  6243     0024                     l2748:	
  6244                           ;incstack = 0
  6245                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  6246                           
  6247                           
  6248                           ;mcc_generated_files/eusart.c: 265:     EUSART_FramingErrorHandler = interruptHandler;
  6249     0024  0873               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  6250     0025  0022               	movlb	2	; select bank2
  6251     0026  00CD               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
  6252     0027  0872               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  6253     0028  00CC               	movwf	_EUSART_FramingErrorHandler^(0+256)
  6254     0029                     l384:
  6255     0029  0008               	return
  6256     002A                     __end_of_EUSART_SetFramingErrorHandler:
  6257                           
  6258                           	psect	text28
  6259     001E                     __ptext28:	
  6260 ;; *************** function _EUSART_SetErrorHandler *****************
  6261 ;; Defined at:
  6262 ;;		line 272 in file "mcc_generated_files/eusart.c"
  6263 ;; Parameters:    Size  Location     Type
  6264 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  6265 ;;		 -> EUSART_DefaultErrorHandler(1), 
  6266 ;; Auto vars:     Size  Location     Type
  6267 ;;		None
  6268 ;; Return value:  Size  Location     Type
  6269 ;;                  1    wreg      void 
  6270 ;; Registers used:
  6271 ;;		wreg
  6272 ;; Tracked objects:
  6273 ;;		On entry : 0/0
  6274 ;;		On exit  : 0/0
  6275 ;;		Unchanged: 0/0
  6276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6277 ;;      Params:         2       0       0       0       0       0
  6278 ;;      Locals:         0       0       0       0       0       0
  6279 ;;      Temps:          0       0       0       0       0       0
  6280 ;;      Totals:         2       0       0       0       0       0
  6281 ;;Total ram usage:        2 bytes
  6282 ;; Hardware stack levels used: 1
  6283 ;; Hardware stack levels required when called: 4
  6284 ;; This function calls:
  6285 ;;		Nothing
  6286 ;; This function is called by:
  6287 ;;		_EUSART_Initialize
  6288 ;; This function uses a non-reentrant model
  6289 ;;
  6290                           
  6291     001E                     _EUSART_SetErrorHandler:	
  6292                           ;psect for function _EUSART_SetErrorHandler
  6293                           
  6294     001E                     l2752:	
  6295                           ;incstack = 0
  6296                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  6297                           
  6298                           
  6299                           ;mcc_generated_files/eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  6300     001E  0873               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  6301     001F  0022               	movlb	2	; select bank2
  6302     0020  00C9               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  6303     0021  0872               	movf	EUSART_SetErrorHandler@interruptHandler,w
  6304     0022  00C8               	movwf	_EUSART_ErrorHandler^(0+256)
  6305     0023                     l390:
  6306     0023  0008               	return
  6307     0024                     __end_of_EUSART_SetErrorHandler:
  6308                           
  6309                           	psect	text29
  6310     08A3                     __ptext29:	
  6311 ;; *************** function _EPWM1_Initialize *****************
  6312 ;; Defined at:
  6313 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  6314 ;; Parameters:    Size  Location     Type
  6315 ;;		None
  6316 ;; Auto vars:     Size  Location     Type
  6317 ;;		None
  6318 ;; Return value:  Size  Location     Type
  6319 ;;                  1    wreg      void 
  6320 ;; Registers used:
  6321 ;;		wreg, status,2, status,0
  6322 ;; Tracked objects:
  6323 ;;		On entry : 0/0
  6324 ;;		On exit  : 0/0
  6325 ;;		Unchanged: 0/0
  6326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6327 ;;      Params:         0       0       0       0       0       0
  6328 ;;      Locals:         0       0       0       0       0       0
  6329 ;;      Temps:          0       0       0       0       0       0
  6330 ;;      Totals:         0       0       0       0       0       0
  6331 ;;Total ram usage:        0 bytes
  6332 ;; Hardware stack levels used: 1
  6333 ;; Hardware stack levels required when called: 4
  6334 ;; This function calls:
  6335 ;;		Nothing
  6336 ;; This function is called by:
  6337 ;;		_SYSTEM_Initialize
  6338 ;; This function uses a non-reentrant model
  6339 ;;
  6340                           
  6341     08A3                     _EPWM1_Initialize:	
  6342                           ;psect for function _EPWM1_Initialize
  6343                           
  6344     08A3                     l3048:	
  6345                           ;incstack = 0
  6346                           ; Regs used in _EPWM1_Initialize: [wreg+status,2+status,0]
  6347                           
  6348                           
  6349                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  6350     08A3  303C               	movlw	60
  6351     08A4  0025               	movlb	5	; select bank5
  6352     08A5  0093               	movwf	19	;volatile
  6353     08A6                     l3050:
  6354                           
  6355                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  6356     08A6  0195               	clrf	21	;volatile
  6357     08A7                     l3052:
  6358                           
  6359                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  6360     08A7  3080               	movlw	128
  6361     08A8  0094               	movwf	20	;volatile
  6362     08A9                     l3054:
  6363                           
  6364                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  6365     08A9  3001               	movlw	1
  6366     08AA  0096               	movwf	22	;volatile
  6367                           
  6368                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  6369     08AB  0192               	clrf	18	;volatile
  6370     08AC                     l3056:
  6371                           
  6372                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0xFF;
  6373     08AC  30FF               	movlw	255
  6374     08AD  0091               	movwf	17	;volatile
  6375     08AE                     l3058:
  6376                           
  6377                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  6378     08AE  30FC               	movlw	-4
  6379     08AF  059E               	andwf	30,f	;volatile
  6380     08B0                     l157:
  6381     08B0  0008               	return
  6382     08B1                     __end_of_EPWM1_Initialize:
  6383                           
  6384                           	psect	text30
  6385     0016                     __ptext30:	
  6386 ;; *************** function _ADC_Initialize *****************
  6387 ;; Defined at:
  6388 ;;		line 67 in file "mcc_generated_files/adc.c"
  6389 ;; Parameters:    Size  Location     Type
  6390 ;;		None
  6391 ;; Auto vars:     Size  Location     Type
  6392 ;;		None
  6393 ;; Return value:  Size  Location     Type
  6394 ;;                  1    wreg      void 
  6395 ;; Registers used:
  6396 ;;		status,2
  6397 ;; Tracked objects:
  6398 ;;		On entry : 0/0
  6399 ;;		On exit  : 0/0
  6400 ;;		Unchanged: 0/0
  6401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6402 ;;      Params:         0       0       0       0       0       0
  6403 ;;      Locals:         0       0       0       0       0       0
  6404 ;;      Temps:          0       0       0       0       0       0
  6405 ;;      Totals:         0       0       0       0       0       0
  6406 ;;Total ram usage:        0 bytes
  6407 ;; Hardware stack levels used: 1
  6408 ;; Hardware stack levels required when called: 4
  6409 ;; This function calls:
  6410 ;;		Nothing
  6411 ;; This function is called by:
  6412 ;;		_SYSTEM_Initialize
  6413 ;; This function uses a non-reentrant model
  6414 ;;
  6415                           
  6416     0016                     _ADC_Initialize:	
  6417                           ;psect for function _ADC_Initialize
  6418                           
  6419     0016                     l3022:	
  6420                           ;incstack = 0
  6421                           ; Regs used in _ADC_Initialize: [status,2]
  6422                           
  6423                           
  6424                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xD0;
  6425     0016  30D0               	movlw	208
  6426     0017  0021               	movlb	1	; select bank1
  6427     0018  009E               	movwf	30	;volatile
  6428     0019                     l3024:
  6429                           
  6430                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  6431     0019  019B               	clrf	27	;volatile
  6432                           
  6433                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  6434     001A  019C               	clrf	28	;volatile
  6435     001B                     l3026:
  6436                           
  6437                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  6438     001B  3001               	movlw	1
  6439     001C  009D               	movwf	29	;volatile
  6440     001D                     l17:
  6441     001D  0008               	return
  6442     001E                     __end_of_ADC_Initialize:
  6443                           
  6444                           	psect	text31
  6445     0895                     __ptext31:	
  6446 ;; *************** function _FechaValvula *****************
  6447 ;; Defined at:
  6448 ;;		line 264 in file "main.c"
  6449 ;; Parameters:    Size  Location     Type
  6450 ;;		None
  6451 ;; Auto vars:     Size  Location     Type
  6452 ;;		None
  6453 ;; Return value:  Size  Location     Type
  6454 ;;                  1    wreg      void 
  6455 ;; Registers used:
  6456 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6457 ;; Tracked objects:
  6458 ;;		On entry : 0/0
  6459 ;;		On exit  : 0/0
  6460 ;;		Unchanged: 0/0
  6461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6462 ;;      Params:         0       0       0       0       0       0
  6463 ;;      Locals:         0       0       0       0       0       0
  6464 ;;      Temps:          0       0       0       0       0       0
  6465 ;;      Totals:         0       0       0       0       0       0
  6466 ;;Total ram usage:        0 bytes
  6467 ;; Hardware stack levels used: 1
  6468 ;; Hardware stack levels required when called: 5
  6469 ;; This function calls:
  6470 ;;		_MoveValvula
  6471 ;; This function is called by:
  6472 ;;		_main
  6473 ;; This function uses a non-reentrant model
  6474 ;;
  6475                           
  6476     0895                     _FechaValvula:	
  6477                           ;psect for function _FechaValvula
  6478                           
  6479     0895                     l4268:	
  6480                           ;incstack = 0
  6481                           ; Regs used in _FechaValvula: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6482                           
  6483                           
  6484                           ;main.c: 265:     while (passo_atual > 0) {
  6485     0895  289A               	goto	l4272
  6486     0896                     l4270:
  6487                           
  6488                           ;main.c: 266:         MoveValvula(0);
  6489     0896  3000               	movlw	0
  6490     0897  318C  24A3  3188   	fcall	_MoveValvula
  6491     089A                     l4272:
  6492                           
  6493                           ;main.c: 265:     while (passo_atual > 0) {
  6494     089A  0021               	movlb	1	; select bank1
  6495     089B  0844               	movf	_passo_atual^(0+128),w
  6496     089C  0445               	iorwf	(_passo_atual+1)^(0+128),w
  6497     089D  1D03               	btfss	3,2
  6498     089E  28A0               	goto	u5341
  6499     089F  28A1               	goto	u5340
  6500     08A0                     u5341:
  6501     08A0  2896               	goto	l4270
  6502     08A1                     u5340:
  6503     08A1                     l4274:
  6504                           
  6505                           ;main.c: 268:     valvula_aberta = 0;
  6506     08A1  01D1               	clrf	_valvula_aberta^(0+128)
  6507     08A2                     l714:
  6508     08A2  0008               	return
  6509     08A3                     __end_of_FechaValvula:
  6510                           
  6511                           	psect	text32
  6512     000D                     __ptext32:	
  6513 ;; *************** function _EUSART_is_rx_ready *****************
  6514 ;; Defined at:
  6515 ;;		line 137 in file "mcc_generated_files/eusart.c"
  6516 ;; Parameters:    Size  Location     Type
  6517 ;;		None
  6518 ;; Auto vars:     Size  Location     Type
  6519 ;;		None
  6520 ;; Return value:  Size  Location     Type
  6521 ;;                  1    wreg      _Bool 
  6522 ;; Registers used:
  6523 ;;		wreg, status,2, status,0
  6524 ;; Tracked objects:
  6525 ;;		On entry : 0/0
  6526 ;;		On exit  : 0/0
  6527 ;;		Unchanged: 0/0
  6528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6529 ;;      Params:         0       0       0       0       0       0
  6530 ;;      Locals:         0       0       0       0       0       0
  6531 ;;      Temps:          0       0       0       0       0       0
  6532 ;;      Totals:         0       0       0       0       0       0
  6533 ;;Total ram usage:        0 bytes
  6534 ;; Hardware stack levels used: 1
  6535 ;; Hardware stack levels required when called: 4
  6536 ;; This function calls:
  6537 ;;		Nothing
  6538 ;; This function is called by:
  6539 ;;		_main
  6540 ;; This function uses a non-reentrant model
  6541 ;;
  6542                           
  6543     000D                     _EUSART_is_rx_ready:	
  6544                           ;psect for function _EUSART_is_rx_ready
  6545                           
  6546     000D                     l3444:	
  6547                           ;incstack = 0
  6548                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  6549                           
  6550                           
  6551                           ;mcc_generated_files/eusart.c: 139:     return (eusartRxCount ? 1 : 0);
  6552     000D  0021               	movlb	1	; select bank1
  6553     000E  0854               	movf	_eusartRxCount^(0+128),w	;volatile
  6554     000F  1D03               	btfss	3,2
  6555     0010  2812               	goto	u3651
  6556     0011  2814               	goto	u3650
  6557     0012                     u3651:
  6558     0012  3001               	movlw	1
  6559     0013  2815               	goto	u3660
  6560     0014                     u3650:
  6561     0014  3000               	movlw	0
  6562     0015                     u3660:
  6563     0015                     l333:
  6564     0015  0008               	return
  6565     0016                     __end_of_EUSART_is_rx_ready:
  6566                           
  6567                           	psect	text33
  6568     0A3A                     __ptext33:	
  6569 ;; *************** function _Controle *****************
  6570 ;; Defined at:
  6571 ;;		line 181 in file "main.c"
  6572 ;; Parameters:    Size  Location     Type
  6573 ;;		None
  6574 ;; Auto vars:     Size  Location     Type
  6575 ;;  ajuste          2    0[BANK2 ] int 
  6576 ;; Return value:  Size  Location     Type
  6577 ;;                  1    wreg      void 
  6578 ;; Registers used:
  6579 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6580 ;; Tracked objects:
  6581 ;;		On entry : 0/0
  6582 ;;		On exit  : 0/0
  6583 ;;		Unchanged: 0/0
  6584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6585 ;;      Params:         0       0       0       0       0       0
  6586 ;;      Locals:         0       0       0       2       0       0
  6587 ;;      Temps:          0       0       0       0       0       0
  6588 ;;      Totals:         0       0       0       2       0       0
  6589 ;;Total ram usage:        2 bytes
  6590 ;; Hardware stack levels used: 1
  6591 ;; Hardware stack levels required when called: 7
  6592 ;; This function calls:
  6593 ;;		_ControleAjuste
  6594 ;;		_ajustaPwm
  6595 ;;		_ajustaValvula
  6596 ;; This function is called by:
  6597 ;;		_main
  6598 ;; This function uses a non-reentrant model
  6599 ;;
  6600                           
  6601     0A3A                     _Controle:	
  6602                           ;psect for function _Controle
  6603                           
  6604     0A3A                     l4252:	
  6605                           ;incstack = 0
  6606                           ; Regs used in _Controle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6607                           
  6608                           
  6609                           ;main.c: 183:     int ajuste = ControleAjuste();
  6610     0A3A  318E  26C7  318A   	fcall	_ControleAjuste
  6611     0A3D  0021               	movlb	1	; select bank1
  6612     0A3E  085C               	movf	(?_ControleAjuste+1)^(0+128),w
  6613     0A3F  0022               	movlb	2	; select bank2
  6614     0A40  00D3               	movwf	(Controle@ajuste+1)^(0+256)
  6615     0A41  0021               	movlb	1	; select bank1
  6616     0A42  085B               	movf	?_ControleAjuste^(0+128),w
  6617     0A43  0022               	movlb	2	; select bank2
  6618     0A44  00D2               	movwf	Controle@ajuste^(0+256)
  6619     0A45                     l4254:
  6620                           
  6621                           ;main.c: 184:     if (dados.Modo_Operacao == 1) {
  6622     0A45  0021               	movlb	1	; select bank1
  6623     0A46  0320               	decf	_dados^(0+128),w
  6624     0A47  1D03               	btfss	3,2
  6625     0A48  2A4A               	goto	u5311
  6626     0A49  2A4B               	goto	u5310
  6627     0A4A                     u5311:
  6628     0A4A  2A54               	goto	l4258
  6629     0A4B                     u5310:
  6630     0A4B                     l4256:
  6631                           
  6632                           ;main.c: 185:         ajustaPwm(ajuste);
  6633     0A4B  0022               	movlb	2	; select bank2
  6634     0A4C  0853               	movf	(Controle@ajuste+1)^(0+256),w
  6635     0A4D  00F7               	movwf	ajustaPwm@ajuste+1
  6636     0A4E  0852               	movf	Controle@ajuste^(0+256),w
  6637     0A4F  00F6               	movwf	ajustaPwm@ajuste
  6638     0A50  318A  22D3  318A   	fcall	_ajustaPwm
  6639                           
  6640                           ;main.c: 186:     } else {
  6641     0A53  2A5C               	goto	l614
  6642     0A54                     l4258:
  6643                           
  6644                           ;main.c: 187:         ajustaValvula(ajuste);
  6645     0A54  0022               	movlb	2	; select bank2
  6646     0A55  0853               	movf	(Controle@ajuste+1)^(0+256),w
  6647     0A56  00F3               	movwf	ajustaValvula@ajuste+1
  6648     0A57  0852               	movf	Controle@ajuste^(0+256),w
  6649     0A58  00F2               	movwf	ajustaValvula@ajuste
  6650     0A59  318A  2217  318A   	fcall	_ajustaValvula
  6651     0A5C                     l614:
  6652     0A5C  0008               	return
  6653     0A5D                     __end_of_Controle:
  6654                           
  6655                           	psect	text34
  6656     0A17                     __ptext34:	
  6657 ;; *************** function _ajustaValvula *****************
  6658 ;; Defined at:
  6659 ;;		line 200 in file "main.c"
  6660 ;; Parameters:    Size  Location     Type
  6661 ;;  ajuste          2    2[COMMON] int 
  6662 ;; Auto vars:     Size  Location     Type
  6663 ;;  novaPosicao     2    7[COMMON] int 
  6664 ;; Return value:  Size  Location     Type
  6665 ;;                  1    wreg      void 
  6666 ;; Registers used:
  6667 ;;		wreg, status,2, status,0
  6668 ;; Tracked objects:
  6669 ;;		On entry : 0/0
  6670 ;;		On exit  : 0/0
  6671 ;;		Unchanged: 0/0
  6672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6673 ;;      Params:         2       0       0       0       0       0
  6674 ;;      Locals:         4       0       0       0       0       0
  6675 ;;      Temps:          1       0       0       0       0       0
  6676 ;;      Totals:         7       0       0       0       0       0
  6677 ;;Total ram usage:        7 bytes
  6678 ;; Hardware stack levels used: 1
  6679 ;; Hardware stack levels required when called: 4
  6680 ;; This function calls:
  6681 ;;		Nothing
  6682 ;; This function is called by:
  6683 ;;		_Controle
  6684 ;; This function uses a non-reentrant model
  6685 ;;
  6686                           
  6687     0A17                     _ajustaValvula:	
  6688                           ;psect for function _ajustaValvula
  6689                           
  6690     0A17                     l4188:	
  6691                           ;incstack = 0
  6692                           ; Regs used in _ajustaValvula: [wreg+status,2+status,0]
  6693                           
  6694                           
  6695                           ;main.c: 202:     int novaPosicao = dados.valvula.total + ajuste;
  6696     0A17  0872               	movf	ajustaValvula@ajuste,w
  6697     0A18  0021               	movlb	1	; select bank1
  6698     0A19  072B               	addwf	(_dados^(0+128)+11),w
  6699     0A1A  00F7               	movwf	ajustaValvula@novaPosicao
  6700     0A1B  0873               	movf	ajustaValvula@ajuste+1,w
  6701     0A1C  3D2C               	addwfc	((_dados+1)^(0+128)+11),w
  6702     0A1D  00F8               	movwf	ajustaValvula@novaPosicao+1
  6703     0A1E                     l4190:
  6704                           
  6705                           ;main.c: 204:     novaPosicao = ((novaPosicao) < (0) ? (0) : ((novaPosicao) > (470) ? (4
      +                          70) : (novaPosicao)));
  6706     0A1E  1BF8               	btfsc	ajustaValvula@novaPosicao+1,7
  6707     0A1F  2A21               	goto	u5201
  6708     0A20  2A22               	goto	u5200
  6709     0A21                     u5201:
  6710     0A21  2A39               	goto	l4198
  6711     0A22                     u5200:
  6712     0A22                     l4192:
  6713     0A22  0878               	movf	ajustaValvula@novaPosicao+1,w
  6714     0A23  3A80               	xorlw	128
  6715     0A24  00F4               	movwf	??_ajustaValvula
  6716     0A25  3081               	movlw	129
  6717     0A26  0274               	subwf	??_ajustaValvula,w
  6718     0A27  1D03               	skipz
  6719     0A28  2A2B               	goto	u5215
  6720     0A29  30D7               	movlw	215
  6721     0A2A  0277               	subwf	ajustaValvula@novaPosicao,w
  6722     0A2B                     u5215:
  6723     0A2B  1803               	skipnc
  6724     0A2C  2A2E               	goto	u5211
  6725     0A2D  2A2F               	goto	u5210
  6726     0A2E                     u5211:
  6727     0A2E  2A34               	goto	l4196
  6728     0A2F                     u5210:
  6729     0A2F                     l4194:
  6730     0A2F  0878               	movf	ajustaValvula@novaPosicao+1,w
  6731     0A30  00F6               	movwf	_ajustaValvula$1176+1
  6732     0A31  0877               	movf	ajustaValvula@novaPosicao,w
  6733     0A32  00F5               	movwf	_ajustaValvula$1176
  6734     0A33  2A38               	goto	l635
  6735     0A34                     l4196:
  6736     0A34  30D6               	movlw	214
  6737     0A35  00F5               	movwf	_ajustaValvula$1176
  6738     0A36  3001               	movlw	1
  6739     0A37  00F6               	movwf	_ajustaValvula$1176+1
  6740     0A38                     l635:
  6741     0A38  2A39               	goto	l636
  6742     0A39                     l4198:
  6743     0A39                     l636:
  6744     0A39  0008               	return
  6745     0A3A                     __end_of_ajustaValvula:
  6746                           
  6747                           	psect	text35
  6748     0AD3                     __ptext35:	
  6749 ;; *************** function _ajustaPwm *****************
  6750 ;; Defined at:
  6751 ;;		line 192 in file "main.c"
  6752 ;; Parameters:    Size  Location     Type
  6753 ;;  ajuste          2    6[COMMON] int 
  6754 ;; Auto vars:     Size  Location     Type
  6755 ;;  sinalPWM        2    2[BANK0 ] int 
  6756 ;; Return value:  Size  Location     Type
  6757 ;;                  1    wreg      void 
  6758 ;; Registers used:
  6759 ;;		wreg, status,2, status,0, pclath, cstack
  6760 ;; Tracked objects:
  6761 ;;		On entry : 0/0
  6762 ;;		On exit  : 0/0
  6763 ;;		Unchanged: 0/0
  6764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6765 ;;      Params:         2       0       0       0       0       0
  6766 ;;      Locals:         0       4       0       0       0       0
  6767 ;;      Temps:          1       0       0       0       0       0
  6768 ;;      Totals:         3       4       0       0       0       0
  6769 ;;Total ram usage:        7 bytes
  6770 ;; Hardware stack levels used: 1
  6771 ;; Hardware stack levels required when called: 5
  6772 ;; This function calls:
  6773 ;;		_EPWM1_LoadDutyValue
  6774 ;; This function is called by:
  6775 ;;		_main
  6776 ;;		_Controle
  6777 ;; This function uses a non-reentrant model
  6778 ;;
  6779                           
  6780     0AD3                     _ajustaPwm:	
  6781                           ;psect for function _ajustaPwm
  6782                           
  6783     0AD3                     l4160:	
  6784                           ;incstack = 0
  6785                           ; Regs used in _ajustaPwm: [wreg+status,2+status,0+pclath+cstack]
  6786                           
  6787                           
  6788                           ;main.c: 193:     int sinalPWM = dados.pwm.total + ajuste;
  6789     0AD3  0876               	movf	ajustaPwm@ajuste,w
  6790     0AD4  0021               	movlb	1	; select bank1
  6791     0AD5  072D               	addwf	(_dados^(0+128)+13),w
  6792     0AD6  0020               	movlb	0	; select bank0
  6793     0AD7  00A2               	movwf	ajustaPwm@sinalPWM
  6794     0AD8  0877               	movf	ajustaPwm@ajuste+1,w
  6795     0AD9  0021               	movlb	1	; select bank1
  6796     0ADA  3D2E               	addwfc	((_dados+1)^(0+128)+13),w
  6797     0ADB  0020               	movlb	0	; select bank0
  6798     0ADC  00A3               	movwf	ajustaPwm@sinalPWM+1
  6799     0ADD                     l4162:
  6800                           
  6801                           ;main.c: 194:     sinalPWM = ((sinalPWM) < (0) ? (0) : ((sinalPWM) > (1023) ? (1023) : (
      +                          sinalPWM)));
  6802     0ADD  1BA3               	btfsc	ajustaPwm@sinalPWM+1,7
  6803     0ADE  2AE0               	goto	u5181
  6804     0ADF  2AE1               	goto	u5180
  6805     0AE0                     u5181:
  6806     0AE0  2AFE               	goto	l4170
  6807     0AE1                     u5180:
  6808     0AE1                     l4164:
  6809     0AE1  0823               	movf	ajustaPwm@sinalPWM+1,w
  6810     0AE2  3A80               	xorlw	128
  6811     0AE3  00F8               	movwf	??_ajustaPwm
  6812     0AE4  3084               	movlw	132
  6813     0AE5  0278               	subwf	??_ajustaPwm,w
  6814     0AE6  1D03               	skipz
  6815     0AE7  2AEA               	goto	u5195
  6816     0AE8  3000               	movlw	0
  6817     0AE9  0222               	subwf	ajustaPwm@sinalPWM,w
  6818     0AEA                     u5195:
  6819     0AEA  1803               	skipnc
  6820     0AEB  2AED               	goto	u5191
  6821     0AEC  2AEE               	goto	u5190
  6822     0AED                     u5191:
  6823     0AED  2AF4               	goto	l4168
  6824     0AEE                     u5190:
  6825     0AEE                     l4166:
  6826     0AEE  0020               	movlb	0	; select bank0
  6827     0AEF  0823               	movf	ajustaPwm@sinalPWM+1,w
  6828     0AF0  00A1               	movwf	_ajustaPwm$1172+1
  6829     0AF1  0822               	movf	ajustaPwm@sinalPWM,w
  6830     0AF2  00A0               	movwf	_ajustaPwm$1172
  6831     0AF3  2AF9               	goto	l624
  6832     0AF4                     l4168:
  6833     0AF4  30FF               	movlw	255
  6834     0AF5  0020               	movlb	0	; select bank0
  6835     0AF6  00A0               	movwf	_ajustaPwm$1172
  6836     0AF7  3003               	movlw	3
  6837     0AF8  00A1               	movwf	_ajustaPwm$1172+1
  6838     0AF9                     l624:
  6839     0AF9  0821               	movf	_ajustaPwm$1172+1,w
  6840     0AFA  00A3               	movwf	ajustaPwm@sinalPWM+1
  6841     0AFB  0820               	movf	_ajustaPwm$1172,w
  6842     0AFC  00A2               	movwf	ajustaPwm@sinalPWM
  6843     0AFD  2B00               	goto	l4172
  6844     0AFE                     l4170:
  6845     0AFE  01A2               	clrf	ajustaPwm@sinalPWM
  6846     0AFF  01A3               	clrf	ajustaPwm@sinalPWM+1
  6847     0B00                     l4172:
  6848                           
  6849                           ;main.c: 196:     EPWM1_LoadDutyValue(sinalPWM);
  6850     0B00  0823               	movf	ajustaPwm@sinalPWM+1,w
  6851     0B01  00F3               	movwf	EPWM1_LoadDutyValue@dutyValue+1
  6852     0B02  0822               	movf	ajustaPwm@sinalPWM,w
  6853     0B03  00F2               	movwf	EPWM1_LoadDutyValue@dutyValue
  6854     0B04  3189  2121  318A   	fcall	_EPWM1_LoadDutyValue
  6855     0B07                     l625:
  6856     0B07  0008               	return
  6857     0B08                     __end_of_ajustaPwm:
  6858                           
  6859                           	psect	text36
  6860     0921                     __ptext36:	
  6861 ;; *************** function _EPWM1_LoadDutyValue *****************
  6862 ;; Defined at:
  6863 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  6864 ;; Parameters:    Size  Location     Type
  6865 ;;  dutyValue       2    2[COMMON] unsigned short 
  6866 ;; Auto vars:     Size  Location     Type
  6867 ;;		None
  6868 ;; Return value:  Size  Location     Type
  6869 ;;                  1    wreg      void 
  6870 ;; Registers used:
  6871 ;;		wreg, status,2, status,0
  6872 ;; Tracked objects:
  6873 ;;		On entry : 0/0
  6874 ;;		On exit  : 0/0
  6875 ;;		Unchanged: 0/0
  6876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6877 ;;      Params:         2       0       0       0       0       0
  6878 ;;      Locals:         0       0       0       0       0       0
  6879 ;;      Temps:          2       0       0       0       0       0
  6880 ;;      Totals:         4       0       0       0       0       0
  6881 ;;Total ram usage:        4 bytes
  6882 ;; Hardware stack levels used: 1
  6883 ;; Hardware stack levels required when called: 4
  6884 ;; This function calls:
  6885 ;;		Nothing
  6886 ;; This function is called by:
  6887 ;;		_atualizaDadosRecebidos
  6888 ;;		_ajustaPwm
  6889 ;; This function uses a non-reentrant model
  6890 ;;
  6891                           
  6892     0921                     _EPWM1_LoadDutyValue:	
  6893                           ;psect for function _EPWM1_LoadDutyValue
  6894                           
  6895     0921                     l3878:	
  6896                           ;incstack = 0
  6897                           ; Regs used in _EPWM1_LoadDutyValue: [wreg+status,2+status,0]
  6898                           
  6899                           
  6900                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  6901     0921  0873               	movf	EPWM1_LoadDutyValue@dutyValue+1,w
  6902     0922  00F5               	movwf	??_EPWM1_LoadDutyValue+1
  6903     0923  0872               	movf	EPWM1_LoadDutyValue@dutyValue,w
  6904     0924  00F4               	movwf	??_EPWM1_LoadDutyValue
  6905     0925  36F5               	lsrf	??_EPWM1_LoadDutyValue+1,f
  6906     0926  0CF4               	rrf	??_EPWM1_LoadDutyValue,f
  6907     0927  36F5               	lsrf	??_EPWM1_LoadDutyValue+1,f
  6908     0928  0CF4               	rrf	??_EPWM1_LoadDutyValue,f
  6909     0929  0874               	movf	??_EPWM1_LoadDutyValue,w
  6910     092A  0025               	movlb	5	; select bank5
  6911     092B  0091               	movwf	17	;volatile
  6912                           
  6913                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  6914     092C  0872               	movf	EPWM1_LoadDutyValue@dutyValue,w
  6915     092D  3903               	andlw	3
  6916     092E  00F4               	movwf	??_EPWM1_LoadDutyValue
  6917     092F  3004               	movlw	4
  6918     0930                     u4525:
  6919     0930  35F4               	lslf	??_EPWM1_LoadDutyValue,f
  6920     0931  0B89               	decfsz	9,f
  6921     0932  2930               	goto	u4525
  6922     0933  0813               	movf	19,w	;volatile
  6923     0934  39CF               	andlw	207
  6924     0935  0474               	iorwf	??_EPWM1_LoadDutyValue,w
  6925     0936  0093               	movwf	19	;volatile
  6926     0937                     l160:
  6927     0937  0008               	return
  6928     0938                     __end_of_EPWM1_LoadDutyValue:
  6929                           
  6930                           	psect	text37
  6931     0EC7                     __ptext37:	
  6932 ;; *************** function _ControleAjuste *****************
  6933 ;; Defined at:
  6934 ;;		line 172 in file "main.c"
  6935 ;; Parameters:    Size  Location     Type
  6936 ;;		None
  6937 ;; Auto vars:     Size  Location     Type
  6938 ;;  erroAtual       4   10[BANK1 ] float 
  6939 ;;  deltaErro       4    2[BANK1 ] float 
  6940 ;; Return value:  Size  Location     Type
  6941 ;;                  2    0[BANK1 ] int 
  6942 ;; Registers used:
  6943 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6944 ;; Tracked objects:
  6945 ;;		On entry : 0/0
  6946 ;;		On exit  : 0/0
  6947 ;;		Unchanged: 0/0
  6948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6949 ;;      Params:         0       0       2       0       0       0
  6950 ;;      Locals:         0       0      12       0       0       0
  6951 ;;      Temps:          0       0       0       0       0       0
  6952 ;;      Totals:         0       0      14       0       0       0
  6953 ;;Total ram usage:       14 bytes
  6954 ;; Hardware stack levels used: 1
  6955 ;; Hardware stack levels required when called: 6
  6956 ;; This function calls:
  6957 ;;		___fladd
  6958 ;;		___flmul
  6959 ;;		___flsub
  6960 ;;		___fltol
  6961 ;;		___xxtofl
  6962 ;; This function is called by:
  6963 ;;		_Controle
  6964 ;; This function uses a non-reentrant model
  6965 ;;
  6966                           
  6967     0EC7                     _ControleAjuste:	
  6968                           ;psect for function _ControleAjuste
  6969                           
  6970     0EC7                     l4174:	
  6971                           ;incstack = 0
  6972                           ; Regs used in _ControleAjuste: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6973                           
  6974                           
  6975                           ;main.c: 173:     float erroAtual = (float)(dados.height_desejada.total - dados.height.t
      +                          otal);
  6976     0EC7  30A0               	movlw	low _dados
  6977     0EC8  0086               	movwf	6
  6978     0EC9  3000               	movlw	high _dados
  6979     0ECA  0087               	movwf	7
  6980     0ECB  3143               	addfsr 1,3
  6981     0ECC  30A0               	movlw	low _dados
  6982     0ECD  0084               	movwf	4
  6983     0ECE  3000               	movlw	high _dados
  6984     0ECF  0085               	movwf	5
  6985     0ED0  3101               	addfsr 0,1
  6986     0ED1  3F40               	moviw [0]fsr1
  6987     0ED2  0200               	subwf	0,w
  6988     0ED3  0020               	movlb	0	; select bank0
  6989     0ED4  00A5               	movwf	___xxtofl@val
  6990     0ED5  3101               	addfsr 0,1
  6991     0ED6  3F41               	moviw [1]fsr1
  6992     0ED7  3B00               	subwfb	0,w
  6993     0ED8  00A6               	movwf	___xxtofl@val+1
  6994     0ED9  01A7               	clrf	___xxtofl@val+2
  6995     0EDA  01A8               	clrf	___xxtofl@val+3
  6996     0EDB  3000               	movlw	0
  6997     0EDC  318E  2622  318E   	fcall	___xxtofl
  6998     0EDF  0020               	movlb	0	; select bank0
  6999     0EE0  0828               	movf	?___xxtofl+3,w
  7000     0EE1  0021               	movlb	1	; select bank1
  7001     0EE2  00E8               	movwf	(ControleAjuste@erroAtual+3)^(0+128)
  7002     0EE3  0020               	movlb	0	; select bank0
  7003     0EE4  0827               	movf	?___xxtofl+2,w
  7004     0EE5  0021               	movlb	1	; select bank1
  7005     0EE6  00E7               	movwf	(ControleAjuste@erroAtual+2)^(0+128)
  7006     0EE7  0020               	movlb	0	; select bank0
  7007     0EE8  0826               	movf	?___xxtofl+1,w
  7008     0EE9  0021               	movlb	1	; select bank1
  7009     0EEA  00E6               	movwf	(ControleAjuste@erroAtual+1)^(0+128)
  7010     0EEB  0020               	movlb	0	; select bank0
  7011     0EEC  0825               	movf	?___xxtofl,w
  7012     0EED  0021               	movlb	1	; select bank1
  7013     0EEE  00E5               	movwf	ControleAjuste@erroAtual^(0+128)
  7014     0EEF                     l4176:
  7015                           
  7016                           ;main.c: 174:     erroAcumulado += erroAtual;
  7017     0EEF  0868               	movf	(ControleAjuste@erroAtual+3)^(0+128),w
  7018     0EF0  0020               	movlb	0	; select bank0
  7019     0EF1  00D0               	movwf	___fladd@b+3
  7020     0EF2  0021               	movlb	1	; select bank1
  7021     0EF3  0867               	movf	(ControleAjuste@erroAtual+2)^(0+128),w
  7022     0EF4  0020               	movlb	0	; select bank0
  7023     0EF5  00CF               	movwf	___fladd@b+2
  7024     0EF6  0021               	movlb	1	; select bank1
  7025     0EF7  0866               	movf	(ControleAjuste@erroAtual+1)^(0+128),w
  7026     0EF8  0020               	movlb	0	; select bank0
  7027     0EF9  00CE               	movwf	___fladd@b+1
  7028     0EFA  0021               	movlb	1	; select bank1
  7029     0EFB  0865               	movf	ControleAjuste@erroAtual^(0+128),w
  7030     0EFC  0020               	movlb	0	; select bank0
  7031     0EFD  00CD               	movwf	___fladd@b
  7032     0EFE  0021               	movlb	1	; select bank1
  7033     0EFF  083D               	movf	(_erroAcumulado+3)^(0+128),w
  7034     0F00  0020               	movlb	0	; select bank0
  7035     0F01  00D4               	movwf	___fladd@a+3
  7036     0F02  0021               	movlb	1	; select bank1
  7037     0F03  083C               	movf	(_erroAcumulado+2)^(0+128),w
  7038     0F04  0020               	movlb	0	; select bank0
  7039     0F05  00D3               	movwf	___fladd@a+2
  7040     0F06  0021               	movlb	1	; select bank1
  7041     0F07  083B               	movf	(_erroAcumulado+1)^(0+128),w
  7042     0F08  0020               	movlb	0	; select bank0
  7043     0F09  00D2               	movwf	___fladd@a+1
  7044     0F0A  0021               	movlb	1	; select bank1
  7045     0F0B  083A               	movf	_erroAcumulado^(0+128),w
  7046     0F0C  0020               	movlb	0	; select bank0
  7047     0F0D  00D1               	movwf	___fladd@a
  7048     0F0E  3182  22AB  318E   	fcall	___fladd
  7049     0F11  0020               	movlb	0	; select bank0
  7050     0F12  0850               	movf	?___fladd+3,w
  7051     0F13  0021               	movlb	1	; select bank1
  7052     0F14  00BD               	movwf	(_erroAcumulado+3)^(0+128)
  7053     0F15  0020               	movlb	0	; select bank0
  7054     0F16  084F               	movf	?___fladd+2,w
  7055     0F17  0021               	movlb	1	; select bank1
  7056     0F18  00BC               	movwf	(_erroAcumulado+2)^(0+128)
  7057     0F19  0020               	movlb	0	; select bank0
  7058     0F1A  084E               	movf	?___fladd+1,w
  7059     0F1B  0021               	movlb	1	; select bank1
  7060     0F1C  00BB               	movwf	(_erroAcumulado+1)^(0+128)
  7061     0F1D  0020               	movlb	0	; select bank0
  7062     0F1E  084D               	movf	?___fladd,w
  7063     0F1F  0021               	movlb	1	; select bank1
  7064     0F20  00BA               	movwf	_erroAcumulado^(0+128)
  7065     0F21                     l4178:
  7066                           
  7067                           ;main.c: 175:     float deltaErro = erroAtual - erroAnterior;
  7068     0F21  0839               	movf	(_erroAnterior+3)^(0+128),w
  7069     0F22  0020               	movlb	0	; select bank0
  7070     0F23  00E4               	movwf	___flsub@a+3
  7071     0F24  0021               	movlb	1	; select bank1
  7072     0F25  0838               	movf	(_erroAnterior+2)^(0+128),w
  7073     0F26  0020               	movlb	0	; select bank0
  7074     0F27  00E3               	movwf	___flsub@a+2
  7075     0F28  0021               	movlb	1	; select bank1
  7076     0F29  0837               	movf	(_erroAnterior+1)^(0+128),w
  7077     0F2A  0020               	movlb	0	; select bank0
  7078     0F2B  00E2               	movwf	___flsub@a+1
  7079     0F2C  0021               	movlb	1	; select bank1
  7080     0F2D  0836               	movf	_erroAnterior^(0+128),w
  7081     0F2E  0020               	movlb	0	; select bank0
  7082     0F2F  00E1               	movwf	___flsub@a
  7083     0F30  0021               	movlb	1	; select bank1
  7084     0F31  0868               	movf	(ControleAjuste@erroAtual+3)^(0+128),w
  7085     0F32  0020               	movlb	0	; select bank0
  7086     0F33  00E8               	movwf	___flsub@b+3
  7087     0F34  0021               	movlb	1	; select bank1
  7088     0F35  0867               	movf	(ControleAjuste@erroAtual+2)^(0+128),w
  7089     0F36  0020               	movlb	0	; select bank0
  7090     0F37  00E7               	movwf	___flsub@b+2
  7091     0F38  0021               	movlb	1	; select bank1
  7092     0F39  0866               	movf	(ControleAjuste@erroAtual+1)^(0+128),w
  7093     0F3A  0020               	movlb	0	; select bank0
  7094     0F3B  00E6               	movwf	___flsub@b+1
  7095     0F3C  0021               	movlb	1	; select bank1
  7096     0F3D  0865               	movf	ControleAjuste@erroAtual^(0+128),w
  7097     0F3E  0020               	movlb	0	; select bank0
  7098     0F3F  00E5               	movwf	___flsub@b
  7099     0F40  3189  21F7  318E   	fcall	___flsub
  7100     0F43  0020               	movlb	0	; select bank0
  7101     0F44  0864               	movf	?___flsub+3,w
  7102     0F45  0021               	movlb	1	; select bank1
  7103     0F46  00E0               	movwf	(ControleAjuste@deltaErro+3)^(0+128)
  7104     0F47  0020               	movlb	0	; select bank0
  7105     0F48  0863               	movf	?___flsub+2,w
  7106     0F49  0021               	movlb	1	; select bank1
  7107     0F4A  00DF               	movwf	(ControleAjuste@deltaErro+2)^(0+128)
  7108     0F4B  0020               	movlb	0	; select bank0
  7109     0F4C  0862               	movf	?___flsub+1,w
  7110     0F4D  0021               	movlb	1	; select bank1
  7111     0F4E  00DE               	movwf	(ControleAjuste@deltaErro+1)^(0+128)
  7112     0F4F  0020               	movlb	0	; select bank0
  7113     0F50  0861               	movf	?___flsub,w
  7114     0F51  0021               	movlb	1	; select bank1
  7115     0F52  00DD               	movwf	ControleAjuste@deltaErro^(0+128)
  7116     0F53                     l4180:
  7117                           
  7118                           ;main.c: 176:     erroAnterior = erroAtual;
  7119     0F53  0868               	movf	(ControleAjuste@erroAtual+3)^(0+128),w
  7120     0F54  00B9               	movwf	(_erroAnterior+3)^(0+128)
  7121     0F55  0867               	movf	(ControleAjuste@erroAtual+2)^(0+128),w
  7122     0F56  00B8               	movwf	(_erroAnterior+2)^(0+128)
  7123     0F57  0866               	movf	(ControleAjuste@erroAtual+1)^(0+128),w
  7124     0F58  00B7               	movwf	(_erroAnterior+1)^(0+128)
  7125     0F59  0865               	movf	ControleAjuste@erroAtual^(0+128),w
  7126     0F5A  00B6               	movwf	_erroAnterior^(0+128)
  7127     0F5B                     l4182:
  7128                           
  7129                           ;main.c: 178:     return (int)(0.1 * erroAtual + 1.5 * erroAcumulado + 0.05 * deltaErro)
      +                          ;
  7130     0F5B  0868               	movf	(ControleAjuste@erroAtual+3)^(0+128),w
  7131     0F5C  0020               	movlb	0	; select bank0
  7132     0F5D  00BA               	movwf	___flmul@a+3
  7133     0F5E  0021               	movlb	1	; select bank1
  7134     0F5F  0867               	movf	(ControleAjuste@erroAtual+2)^(0+128),w
  7135     0F60  0020               	movlb	0	; select bank0
  7136     0F61  00B9               	movwf	___flmul@a+2
  7137     0F62  0021               	movlb	1	; select bank1
  7138     0F63  0866               	movf	(ControleAjuste@erroAtual+1)^(0+128),w
  7139     0F64  0020               	movlb	0	; select bank0
  7140     0F65  00B8               	movwf	___flmul@a+1
  7141     0F66  0021               	movlb	1	; select bank1
  7142     0F67  0865               	movf	ControleAjuste@erroAtual^(0+128),w
  7143     0F68  0020               	movlb	0	; select bank0
  7144     0F69  00B7               	movwf	___flmul@a
  7145     0F6A  303D               	movlw	61
  7146     0F6B  00B6               	movwf	___flmul@b+3
  7147     0F6C  30CC               	movlw	204
  7148     0F6D  00B5               	movwf	___flmul@b+2
  7149     0F6E  30CC               	movlw	204
  7150     0F6F  00B4               	movwf	___flmul@b+1
  7151     0F70  30CD               	movlw	205
  7152     0F71  00B3               	movwf	___flmul@b
  7153     0F72  3180  2070  318E   	fcall	___flmul
  7154     0F75  0020               	movlb	0	; select bank0
  7155     0F76  0836               	movf	?___flmul+3,w
  7156     0F77  00D4               	movwf	___fladd@a+3
  7157     0F78  0835               	movf	?___flmul+2,w
  7158     0F79  00D3               	movwf	___fladd@a+2
  7159     0F7A  0834               	movf	?___flmul+1,w
  7160     0F7B  00D2               	movwf	___fladd@a+1
  7161     0F7C  0833               	movf	?___flmul,w
  7162     0F7D  00D1               	movwf	___fladd@a
  7163     0F7E  0021               	movlb	1	; select bank1
  7164     0F7F  083D               	movf	(_erroAcumulado+3)^(0+128),w
  7165     0F80  0020               	movlb	0	; select bank0
  7166     0F81  00BA               	movwf	___flmul@a+3
  7167     0F82  0021               	movlb	1	; select bank1
  7168     0F83  083C               	movf	(_erroAcumulado+2)^(0+128),w
  7169     0F84  0020               	movlb	0	; select bank0
  7170     0F85  00B9               	movwf	___flmul@a+2
  7171     0F86  0021               	movlb	1	; select bank1
  7172     0F87  083B               	movf	(_erroAcumulado+1)^(0+128),w
  7173     0F88  0020               	movlb	0	; select bank0
  7174     0F89  00B8               	movwf	___flmul@a+1
  7175     0F8A  0021               	movlb	1	; select bank1
  7176     0F8B  083A               	movf	_erroAcumulado^(0+128),w
  7177     0F8C  0020               	movlb	0	; select bank0
  7178     0F8D  00B7               	movwf	___flmul@a
  7179     0F8E  303F               	movlw	63
  7180     0F8F  00B6               	movwf	___flmul@b+3
  7181     0F90  30C0               	movlw	192
  7182     0F91  00B5               	movwf	___flmul@b+2
  7183     0F92  3000               	movlw	0
  7184     0F93  00B4               	movwf	___flmul@b+1
  7185     0F94  3000               	movlw	0
  7186     0F95  00B3               	movwf	___flmul@b
  7187     0F96  3180  2070  318E   	fcall	___flmul
  7188     0F99  0020               	movlb	0	; select bank0
  7189     0F9A  0836               	movf	?___flmul+3,w
  7190     0F9B  00D0               	movwf	___fladd@b+3
  7191     0F9C  0835               	movf	?___flmul+2,w
  7192     0F9D  00CF               	movwf	___fladd@b+2
  7193     0F9E  0834               	movf	?___flmul+1,w
  7194     0F9F  00CE               	movwf	___fladd@b+1
  7195     0FA0  0833               	movf	?___flmul,w
  7196     0FA1  00CD               	movwf	___fladd@b
  7197     0FA2  3182  22AB  318E   	fcall	___fladd
  7198     0FA5  0020               	movlb	0	; select bank0
  7199     0FA6  0850               	movf	?___fladd+3,w
  7200     0FA7  0021               	movlb	1	; select bank1
  7201     0FA8  00E4               	movwf	(_ControleAjuste$1897+3)^(0+128)
  7202     0FA9  0020               	movlb	0	; select bank0
  7203     0FAA  084F               	movf	?___fladd+2,w
  7204     0FAB  0021               	movlb	1	; select bank1
  7205     0FAC  00E3               	movwf	(_ControleAjuste$1897+2)^(0+128)
  7206     0FAD  0020               	movlb	0	; select bank0
  7207     0FAE  084E               	movf	?___fladd+1,w
  7208     0FAF  0021               	movlb	1	; select bank1
  7209     0FB0  00E2               	movwf	(_ControleAjuste$1897+1)^(0+128)
  7210     0FB1  0020               	movlb	0	; select bank0
  7211     0FB2  084D               	movf	?___fladd,w
  7212     0FB3  0021               	movlb	1	; select bank1
  7213     0FB4  00E1               	movwf	_ControleAjuste$1897^(0+128)
  7214     0FB5                     l4184:
  7215                           
  7216                           ;main.c: 178:     return (int)(0.1 * erroAtual + 1.5 * erroAcumulado + 0.05 * deltaErro)
      +                          ;
  7217     0FB5  0864               	movf	(_ControleAjuste$1897+3)^(0+128),w
  7218     0FB6  0020               	movlb	0	; select bank0
  7219     0FB7  00D4               	movwf	___fladd@a+3
  7220     0FB8  0021               	movlb	1	; select bank1
  7221     0FB9  0863               	movf	(_ControleAjuste$1897+2)^(0+128),w
  7222     0FBA  0020               	movlb	0	; select bank0
  7223     0FBB  00D3               	movwf	___fladd@a+2
  7224     0FBC  0021               	movlb	1	; select bank1
  7225     0FBD  0862               	movf	(_ControleAjuste$1897+1)^(0+128),w
  7226     0FBE  0020               	movlb	0	; select bank0
  7227     0FBF  00D2               	movwf	___fladd@a+1
  7228     0FC0  0021               	movlb	1	; select bank1
  7229     0FC1  0861               	movf	_ControleAjuste$1897^(0+128),w
  7230     0FC2  0020               	movlb	0	; select bank0
  7231     0FC3  00D1               	movwf	___fladd@a
  7232     0FC4  0021               	movlb	1	; select bank1
  7233     0FC5  0860               	movf	(ControleAjuste@deltaErro+3)^(0+128),w
  7234     0FC6  0020               	movlb	0	; select bank0
  7235     0FC7  00BA               	movwf	___flmul@a+3
  7236     0FC8  0021               	movlb	1	; select bank1
  7237     0FC9  085F               	movf	(ControleAjuste@deltaErro+2)^(0+128),w
  7238     0FCA  0020               	movlb	0	; select bank0
  7239     0FCB  00B9               	movwf	___flmul@a+2
  7240     0FCC  0021               	movlb	1	; select bank1
  7241     0FCD  085E               	movf	(ControleAjuste@deltaErro+1)^(0+128),w
  7242     0FCE  0020               	movlb	0	; select bank0
  7243     0FCF  00B8               	movwf	___flmul@a+1
  7244     0FD0  0021               	movlb	1	; select bank1
  7245     0FD1  085D               	movf	ControleAjuste@deltaErro^(0+128),w
  7246     0FD2  0020               	movlb	0	; select bank0
  7247     0FD3  00B7               	movwf	___flmul@a
  7248     0FD4  303D               	movlw	61
  7249     0FD5  00B6               	movwf	___flmul@b+3
  7250     0FD6  304C               	movlw	76
  7251     0FD7  00B5               	movwf	___flmul@b+2
  7252     0FD8  30CC               	movlw	204
  7253     0FD9  00B4               	movwf	___flmul@b+1
  7254     0FDA  30CD               	movlw	205
  7255     0FDB  00B3               	movwf	___flmul@b
  7256     0FDC  3180  2070  318E   	fcall	___flmul
  7257     0FDF  0020               	movlb	0	; select bank0
  7258     0FE0  0836               	movf	?___flmul+3,w
  7259     0FE1  00D0               	movwf	___fladd@b+3
  7260     0FE2  0835               	movf	?___flmul+2,w
  7261     0FE3  00CF               	movwf	___fladd@b+2
  7262     0FE4  0834               	movf	?___flmul+1,w
  7263     0FE5  00CE               	movwf	___fladd@b+1
  7264     0FE6  0833               	movf	?___flmul,w
  7265     0FE7  00CD               	movwf	___fladd@b
  7266     0FE8  3182  22AB  318E   	fcall	___fladd
  7267     0FEB  0020               	movlb	0	; select bank0
  7268     0FEC  0850               	movf	?___fladd+3,w
  7269     0FED  00EA               	movwf	___fltol@f1+3
  7270     0FEE  084F               	movf	?___fladd+2,w
  7271     0FEF  00E9               	movwf	___fltol@f1+2
  7272     0FF0  084E               	movf	?___fladd+1,w
  7273     0FF1  00E8               	movwf	___fltol@f1+1
  7274     0FF2  084D               	movf	?___fladd,w
  7275     0FF3  00E7               	movwf	___fltol@f1
  7276     0FF4  318C  2434  318E   	fcall	___fltol
  7277     0FF7  0020               	movlb	0	; select bank0
  7278     0FF8  0868               	movf	?___fltol+1,w
  7279     0FF9  0021               	movlb	1	; select bank1
  7280     0FFA  00DC               	movwf	(?_ControleAjuste+1)^(0+128)
  7281     0FFB  0020               	movlb	0	; select bank0
  7282     0FFC  0867               	movf	?___fltol,w
  7283     0FFD  0021               	movlb	1	; select bank1
  7284     0FFE  00DB               	movwf	?_ControleAjuste^(0+128)
  7285     0FFF                     l609:
  7286     0FFF  0008               	return
  7287     1000                     __end_of_ControleAjuste:
  7288                           
  7289                           	psect	text38
  7290     0E22                     __ptext38:	
  7291 ;; *************** function ___xxtofl *****************
  7292 ;; Defined at:
  7293 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\xxtofl.c"
  7294 ;; Parameters:    Size  Location     Type
  7295 ;;  sign            1    wreg     unsigned char 
  7296 ;;  val             4    5[BANK0 ] long 
  7297 ;; Auto vars:     Size  Location     Type
  7298 ;;  sign            1   13[BANK0 ] unsigned char 
  7299 ;;  arg             4   15[BANK0 ] unsigned long 
  7300 ;;  exp             1   14[BANK0 ] unsigned char 
  7301 ;; Return value:  Size  Location     Type
  7302 ;;                  4    5[BANK0 ] unsigned char 
  7303 ;; Registers used:
  7304 ;;		wreg, status,2, status,0
  7305 ;; Tracked objects:
  7306 ;;		On entry : 0/0
  7307 ;;		On exit  : 0/0
  7308 ;;		Unchanged: 0/0
  7309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7310 ;;      Params:         0       4       0       0       0       0
  7311 ;;      Locals:         0       6       0       0       0       0
  7312 ;;      Temps:          0       4       0       0       0       0
  7313 ;;      Totals:         0      14       0       0       0       0
  7314 ;;Total ram usage:       14 bytes
  7315 ;; Hardware stack levels used: 1
  7316 ;; Hardware stack levels required when called: 4
  7317 ;; This function calls:
  7318 ;;		Nothing
  7319 ;; This function is called by:
  7320 ;;		_calculateToF
  7321 ;;		_calculateHeight
  7322 ;;		_ControleAjuste
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           
  7326     0E22                     ___xxtofl:	
  7327                           ;psect for function ___xxtofl
  7328                           
  7329                           
  7330                           ;incstack = 0
  7331                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7332                           ;___xxtofl@sign stored from wreg
  7333     0E22  0020               	movlb	0	; select bank0
  7334     0E23  00AD               	movwf	___xxtofl@sign
  7335     0E24                     l4094:
  7336     0E24  082D               	movf	___xxtofl@sign,w
  7337     0E25  1903               	btfsc	3,2
  7338     0E26  2E28               	goto	u4971
  7339     0E27  2E29               	goto	u4970
  7340     0E28                     u4971:
  7341     0E28  2E3D               	goto	l4100
  7342     0E29                     u4970:
  7343     0E29                     l4096:
  7344     0E29  1FA8               	btfss	___xxtofl@val+3,7
  7345     0E2A  2E2C               	goto	u4981
  7346     0E2B  2E2D               	goto	u4980
  7347     0E2C                     u4981:
  7348     0E2C  2E3D               	goto	l4100
  7349     0E2D                     u4980:
  7350     0E2D                     l4098:
  7351     0E2D  0925               	comf	___xxtofl@val,w
  7352     0E2E  00AF               	movwf	___xxtofl@arg
  7353     0E2F  0926               	comf	___xxtofl@val+1,w
  7354     0E30  00B0               	movwf	___xxtofl@arg+1
  7355     0E31  0927               	comf	___xxtofl@val+2,w
  7356     0E32  00B1               	movwf	___xxtofl@arg+2
  7357     0E33  0928               	comf	___xxtofl@val+3,w
  7358     0E34  00B2               	movwf	___xxtofl@arg+3
  7359     0E35  0AAF               	incf	___xxtofl@arg,f
  7360     0E36  1903               	skipnz
  7361     0E37  0AB0               	incf	___xxtofl@arg+1,f
  7362     0E38  1903               	skipnz
  7363     0E39  0AB1               	incf	___xxtofl@arg+2,f
  7364     0E3A  1903               	skipnz
  7365     0E3B  0AB2               	incf	___xxtofl@arg+3,f
  7366     0E3C  2E45               	goto	l1305
  7367     0E3D                     l4100:
  7368     0E3D  0828               	movf	___xxtofl@val+3,w
  7369     0E3E  00B2               	movwf	___xxtofl@arg+3
  7370     0E3F  0827               	movf	___xxtofl@val+2,w
  7371     0E40  00B1               	movwf	___xxtofl@arg+2
  7372     0E41  0826               	movf	___xxtofl@val+1,w
  7373     0E42  00B0               	movwf	___xxtofl@arg+1
  7374     0E43  0825               	movf	___xxtofl@val,w
  7375     0E44  00AF               	movwf	___xxtofl@arg
  7376     0E45                     l1305:
  7377     0E45  0828               	movf	___xxtofl@val+3,w
  7378     0E46  0427               	iorwf	___xxtofl@val+2,w
  7379     0E47  0426               	iorwf	___xxtofl@val+1,w
  7380     0E48  0425               	iorwf	___xxtofl@val,w
  7381     0E49  1D03               	skipz
  7382     0E4A  2E4C               	goto	u4991
  7383     0E4B  2E4D               	goto	u4990
  7384     0E4C                     u4991:
  7385     0E4C  2E56               	goto	l1306
  7386     0E4D                     u4990:
  7387     0E4D                     l4102:
  7388     0E4D  3000               	movlw	0
  7389     0E4E  00A8               	movwf	?___xxtofl+3
  7390     0E4F  3000               	movlw	0
  7391     0E50  00A7               	movwf	?___xxtofl+2
  7392     0E51  3000               	movlw	0
  7393     0E52  00A6               	movwf	?___xxtofl+1
  7394     0E53  3000               	movlw	0
  7395     0E54  00A5               	movwf	?___xxtofl
  7396     0E55  2EC6               	goto	l1307
  7397     0E56                     l1306:
  7398     0E56  3096               	movlw	150
  7399     0E57  00AE               	movwf	___xxtofl@exp
  7400     0E58  2E62               	goto	l4108
  7401     0E59                     l4106:
  7402     0E59  3001               	movlw	1
  7403     0E5A  07AE               	addwf	___xxtofl@exp,f
  7404     0E5B  3001               	movlw	1
  7405     0E5C                     u5005:
  7406     0E5C  36B2               	lsrf	___xxtofl@arg+3,f
  7407     0E5D  0CB1               	rrf	___xxtofl@arg+2,f
  7408     0E5E  0CB0               	rrf	___xxtofl@arg+1,f
  7409     0E5F  0CAF               	rrf	___xxtofl@arg,f
  7410     0E60  0B89               	decfsz	9,f
  7411     0E61  2E5C               	goto	u5005
  7412     0E62                     l4108:
  7413     0E62  30FE               	movlw	254
  7414     0E63  0532               	andwf	___xxtofl@arg+3,w
  7415     0E64  1D03               	btfss	3,2
  7416     0E65  2E67               	goto	u5011
  7417     0E66  2E68               	goto	u5010
  7418     0E67                     u5011:
  7419     0E67  2E59               	goto	l4106
  7420     0E68                     u5010:
  7421     0E68  2E78               	goto	l4112
  7422     0E69                     l4110:
  7423     0E69  3001               	movlw	1
  7424     0E6A  07AE               	addwf	___xxtofl@exp,f
  7425     0E6B  3001               	movlw	1
  7426     0E6C  07AF               	addwf	___xxtofl@arg,f
  7427     0E6D  3000               	movlw	0
  7428     0E6E  3DB0               	addwfc	___xxtofl@arg+1,f
  7429     0E6F  3DB1               	addwfc	___xxtofl@arg+2,f
  7430     0E70  3DB2               	addwfc	___xxtofl@arg+3,f
  7431     0E71  3001               	movlw	1
  7432     0E72                     u5025:
  7433     0E72  36B2               	lsrf	___xxtofl@arg+3,f
  7434     0E73  0CB1               	rrf	___xxtofl@arg+2,f
  7435     0E74  0CB0               	rrf	___xxtofl@arg+1,f
  7436     0E75  0CAF               	rrf	___xxtofl@arg,f
  7437     0E76  0B89               	decfsz	9,f
  7438     0E77  2E72               	goto	u5025
  7439     0E78                     l4112:
  7440     0E78  30FF               	movlw	255
  7441     0E79  0532               	andwf	___xxtofl@arg+3,w
  7442     0E7A  1D03               	btfss	3,2
  7443     0E7B  2E7D               	goto	u5031
  7444     0E7C  2E7E               	goto	u5030
  7445     0E7D                     u5031:
  7446     0E7D  2E69               	goto	l4110
  7447     0E7E                     u5030:
  7448     0E7E  2E88               	goto	l4116
  7449     0E7F                     l4114:
  7450     0E7F  3001               	movlw	1
  7451     0E80  02AE               	subwf	___xxtofl@exp,f
  7452     0E81  3001               	movlw	1
  7453     0E82                     u5045:
  7454     0E82  35AF               	lslf	___xxtofl@arg,f
  7455     0E83  0DB0               	rlf	___xxtofl@arg+1,f
  7456     0E84  0DB1               	rlf	___xxtofl@arg+2,f
  7457     0E85  0DB2               	rlf	___xxtofl@arg+3,f
  7458     0E86  0B89               	decfsz	9,f
  7459     0E87  2E82               	goto	u5045
  7460     0E88                     l4116:
  7461     0E88  1BB1               	btfsc	___xxtofl@arg+2,7
  7462     0E89  2E8B               	goto	u5051
  7463     0E8A  2E8C               	goto	u5050
  7464     0E8B                     u5051:
  7465     0E8B  2E92               	goto	l1318
  7466     0E8C                     u5050:
  7467     0E8C                     l4118:
  7468     0E8C  3002               	movlw	2
  7469     0E8D  022E               	subwf	___xxtofl@exp,w
  7470     0E8E  1803               	skipnc
  7471     0E8F  2E91               	goto	u5061
  7472     0E90  2E92               	goto	u5060
  7473     0E91                     u5061:
  7474     0E91  2E7F               	goto	l4114
  7475     0E92                     u5060:
  7476     0E92                     l1318:
  7477     0E92  182E               	btfsc	___xxtofl@exp,0
  7478     0E93  2E95               	goto	u5071
  7479     0E94  2E96               	goto	u5070
  7480     0E95                     u5071:
  7481     0E95  2E9E               	goto	l1319
  7482     0E96                     u5070:
  7483     0E96                     l4120:
  7484     0E96  30FF               	movlw	255
  7485     0E97  05AF               	andwf	___xxtofl@arg,f
  7486     0E98  30FF               	movlw	255
  7487     0E99  05B0               	andwf	___xxtofl@arg+1,f
  7488     0E9A  307F               	movlw	127
  7489     0E9B  05B1               	andwf	___xxtofl@arg+2,f
  7490     0E9C  30FF               	movlw	255
  7491     0E9D  05B2               	andwf	___xxtofl@arg+3,f
  7492     0E9E                     l1319:
  7493     0E9E  1003               	clrc
  7494     0E9F  0CAE               	rrf	___xxtofl@exp,f
  7495     0EA0                     l4122:
  7496     0EA0  082E               	movf	___xxtofl@exp,w
  7497     0EA1  00A9               	movwf	??___xxtofl
  7498     0EA2  01AA               	clrf	??___xxtofl+1
  7499     0EA3  01AB               	clrf	??___xxtofl+2
  7500     0EA4  01AC               	clrf	??___xxtofl+3
  7501     0EA5  3018               	movlw	24
  7502     0EA6                     u5085:
  7503     0EA6  35A9               	lslf	??___xxtofl,f
  7504     0EA7  0DAA               	rlf	??___xxtofl+1,f
  7505     0EA8  0DAB               	rlf	??___xxtofl+2,f
  7506     0EA9  0DAC               	rlf	??___xxtofl+3,f
  7507     0EAA                     u5080:
  7508     0EAA  0B89               	decfsz	9,f
  7509     0EAB  2EA6               	goto	u5085
  7510     0EAC  0829               	movf	??___xxtofl,w
  7511     0EAD  04AF               	iorwf	___xxtofl@arg,f
  7512     0EAE  082A               	movf	??___xxtofl+1,w
  7513     0EAF  04B0               	iorwf	___xxtofl@arg+1,f
  7514     0EB0  082B               	movf	??___xxtofl+2,w
  7515     0EB1  04B1               	iorwf	___xxtofl@arg+2,f
  7516     0EB2  082C               	movf	??___xxtofl+3,w
  7517     0EB3  04B2               	iorwf	___xxtofl@arg+3,f
  7518     0EB4                     l4124:
  7519     0EB4  082D               	movf	___xxtofl@sign,w
  7520     0EB5  1903               	btfsc	3,2
  7521     0EB6  2EB8               	goto	u5091
  7522     0EB7  2EB9               	goto	u5090
  7523     0EB8                     u5091:
  7524     0EB8  2EBE               	goto	l4130
  7525     0EB9                     u5090:
  7526     0EB9                     l4126:
  7527     0EB9  1FA8               	btfss	___xxtofl@val+3,7
  7528     0EBA  2EBC               	goto	u5101
  7529     0EBB  2EBD               	goto	u5100
  7530     0EBC                     u5101:
  7531     0EBC  2EBE               	goto	l4130
  7532     0EBD                     u5100:
  7533     0EBD                     l4128:
  7534     0EBD  17B2               	bsf	___xxtofl@arg+3,7
  7535     0EBE                     l4130:
  7536     0EBE  0832               	movf	___xxtofl@arg+3,w
  7537     0EBF  00A8               	movwf	?___xxtofl+3
  7538     0EC0  0831               	movf	___xxtofl@arg+2,w
  7539     0EC1  00A7               	movwf	?___xxtofl+2
  7540     0EC2  0830               	movf	___xxtofl@arg+1,w
  7541     0EC3  00A6               	movwf	?___xxtofl+1
  7542     0EC4  082F               	movf	___xxtofl@arg,w
  7543     0EC5  00A5               	movwf	?___xxtofl
  7544     0EC6                     l1307:
  7545     0EC6  0008               	return
  7546     0EC7                     __end_of___xxtofl:
  7547                           
  7548                           	psect	text39
  7549     0C34                     __ptext39:	
  7550 ;; *************** function ___fltol *****************
  7551 ;; Defined at:
  7552 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fltol.c"
  7553 ;; Parameters:    Size  Location     Type
  7554 ;;  f1              4   71[BANK0 ] unsigned char 
  7555 ;; Auto vars:     Size  Location     Type
  7556 ;;  exp1            1    7[COMMON] unsigned char 
  7557 ;;  sign1           1    6[COMMON] unsigned char 
  7558 ;; Return value:  Size  Location     Type
  7559 ;;                  4   71[BANK0 ] long 
  7560 ;; Registers used:
  7561 ;;		wreg, status,2, status,0
  7562 ;; Tracked objects:
  7563 ;;		On entry : 0/0
  7564 ;;		On exit  : 0/0
  7565 ;;		Unchanged: 0/0
  7566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7567 ;;      Params:         0       4       0       0       0       0
  7568 ;;      Locals:         2       0       0       0       0       0
  7569 ;;      Temps:          0       4       0       0       0       0
  7570 ;;      Totals:         2       8       0       0       0       0
  7571 ;;Total ram usage:       10 bytes
  7572 ;; Hardware stack levels used: 1
  7573 ;; Hardware stack levels required when called: 4
  7574 ;; This function calls:
  7575 ;;		Nothing
  7576 ;; This function is called by:
  7577 ;;		_calculateToF
  7578 ;;		_calculateHeight
  7579 ;;		_ControleAjuste
  7580 ;; This function uses a non-reentrant model
  7581 ;;
  7582                           
  7583     0C34                     ___fltol:	
  7584                           ;psect for function ___fltol
  7585                           
  7586     0C34                     l3912:	
  7587                           ;incstack = 0
  7588                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7589                           
  7590     0C34  1003               	clrc
  7591     0C35  0020               	movlb	0	; select bank0
  7592     0C36  0D69               	rlf	___fltol@f1+2,w
  7593     0C37  0D6A               	rlf	___fltol@f1+3,w
  7594     0C38  00F7               	movwf	___fltol@exp1
  7595     0C39  0877               	movf	___fltol@exp1,w
  7596     0C3A  1D03               	btfss	3,2
  7597     0C3B  2C3D               	goto	u4601
  7598     0C3C  2C3E               	goto	u4600
  7599     0C3D                     u4601:
  7600     0C3D  2C47               	goto	l3918
  7601     0C3E                     u4600:
  7602     0C3E                     l3914:
  7603     0C3E  3000               	movlw	0
  7604     0C3F  00EA               	movwf	?___fltol+3
  7605     0C40  3000               	movlw	0
  7606     0C41  00E9               	movwf	?___fltol+2
  7607     0C42  3000               	movlw	0
  7608     0C43  00E8               	movwf	?___fltol+1
  7609     0C44  3000               	movlw	0
  7610     0C45  00E7               	movwf	?___fltol
  7611     0C46  2CA2               	goto	l1058
  7612     0C47                     l3918:
  7613     0C47  0867               	movf	___fltol@f1,w
  7614     0C48  00EB               	movwf	??___fltol
  7615     0C49  0868               	movf	___fltol@f1+1,w
  7616     0C4A  00EC               	movwf	??___fltol+1
  7617     0C4B  0869               	movf	___fltol@f1+2,w
  7618     0C4C  00ED               	movwf	??___fltol+2
  7619     0C4D  086A               	movf	___fltol@f1+3,w
  7620     0C4E  00EE               	movwf	??___fltol+3
  7621     0C4F  301F               	movlw	31
  7622     0C50                     u4615:
  7623     0C50  36EE               	lsrf	??___fltol+3,f
  7624     0C51  0CED               	rrf	??___fltol+2,f
  7625     0C52  0CEC               	rrf	??___fltol+1,f
  7626     0C53  0CEB               	rrf	??___fltol,f
  7627     0C54                     u4610:
  7628     0C54  0B89               	decfsz	9,f
  7629     0C55  2C50               	goto	u4615
  7630     0C56  086B               	movf	??___fltol,w
  7631     0C57  00F6               	movwf	___fltol@sign1
  7632     0C58                     l3920:
  7633     0C58  17E9               	bsf	___fltol@f1+2,7
  7634     0C59                     l3922:
  7635     0C59  30FF               	movlw	255
  7636     0C5A  05E7               	andwf	___fltol@f1,f
  7637     0C5B  30FF               	movlw	255
  7638     0C5C  05E8               	andwf	___fltol@f1+1,f
  7639     0C5D  30FF               	movlw	255
  7640     0C5E  05E9               	andwf	___fltol@f1+2,f
  7641     0C5F  3000               	movlw	0
  7642     0C60  05EA               	andwf	___fltol@f1+3,f
  7643     0C61                     l3924:
  7644     0C61  3096               	movlw	150
  7645     0C62  02F7               	subwf	___fltol@exp1,f
  7646     0C63                     l3926:
  7647     0C63  1FF7               	btfss	___fltol@exp1,7
  7648     0C64  2C66               	goto	u4621
  7649     0C65  2C67               	goto	u4620
  7650     0C66                     u4621:
  7651     0C66  2C7D               	goto	l3936
  7652     0C67                     u4620:
  7653     0C67                     l3928:
  7654     0C67  0877               	movf	___fltol@exp1,w
  7655     0C68  3A80               	xorlw	128
  7656     0C69  3E97               	addlw	151
  7657     0C6A  1803               	skipnc
  7658     0C6B  2C6D               	goto	u4631
  7659     0C6C  2C6E               	goto	u4630
  7660     0C6D                     u4631:
  7661     0C6D  2C6F               	goto	l3934
  7662     0C6E                     u4630:
  7663     0C6E  2C3E               	goto	l3914
  7664     0C6F                     l3934:
  7665     0C6F  3001               	movlw	1
  7666     0C70                     u4645:
  7667     0C70  36EA               	lsrf	___fltol@f1+3,f
  7668     0C71  0CE9               	rrf	___fltol@f1+2,f
  7669     0C72  0CE8               	rrf	___fltol@f1+1,f
  7670     0C73  0CE7               	rrf	___fltol@f1,f
  7671     0C74  0B89               	decfsz	9,f
  7672     0C75  2C70               	goto	u4645
  7673     0C76  3001               	movlw	1
  7674     0C77  07F7               	addwf	___fltol@exp1,f
  7675     0C78  1D03               	btfss	3,2
  7676     0C79  2C7B               	goto	u4651
  7677     0C7A  2C7C               	goto	u4650
  7678     0C7B                     u4651:
  7679     0C7B  2C6F               	goto	l3934
  7680     0C7C                     u4650:
  7681     0C7C  2C92               	goto	l3944
  7682     0C7D                     l3936:
  7683     0C7D  3020               	movlw	32
  7684     0C7E  0277               	subwf	___fltol@exp1,w
  7685     0C7F  1C03               	skipc
  7686     0C80  2C82               	goto	u4661
  7687     0C81  2C83               	goto	u4660
  7688     0C82                     u4661:
  7689     0C82  2C8D               	goto	l1065
  7690     0C83                     u4660:
  7691     0C83  2C3E               	goto	l3914
  7692     0C84                     l3942:
  7693     0C84  3001               	movlw	1
  7694     0C85                     u4675:
  7695     0C85  35E7               	lslf	___fltol@f1,f
  7696     0C86  0DE8               	rlf	___fltol@f1+1,f
  7697     0C87  0DE9               	rlf	___fltol@f1+2,f
  7698     0C88  0DEA               	rlf	___fltol@f1+3,f
  7699     0C89  0B89               	decfsz	9,f
  7700     0C8A  2C85               	goto	u4675
  7701     0C8B  3001               	movlw	1
  7702     0C8C  02F7               	subwf	___fltol@exp1,f
  7703     0C8D                     l1065:
  7704     0C8D  0877               	movf	___fltol@exp1,w
  7705     0C8E  1D03               	btfss	3,2
  7706     0C8F  2C91               	goto	u4681
  7707     0C90  2C92               	goto	u4680
  7708     0C91                     u4681:
  7709     0C91  2C84               	goto	l3942
  7710     0C92                     u4680:
  7711     0C92                     l3944:
  7712     0C92  0876               	movf	___fltol@sign1,w
  7713     0C93  1903               	btfsc	3,2
  7714     0C94  2C96               	goto	u4691
  7715     0C95  2C97               	goto	u4690
  7716     0C96                     u4691:
  7717     0C96  2CA2               	goto	l1068
  7718     0C97                     u4690:
  7719     0C97                     l3946:
  7720     0C97  09E7               	comf	___fltol@f1,f
  7721     0C98  09E8               	comf	___fltol@f1+1,f
  7722     0C99  09E9               	comf	___fltol@f1+2,f
  7723     0C9A  09EA               	comf	___fltol@f1+3,f
  7724     0C9B  0AE7               	incf	___fltol@f1,f
  7725     0C9C  1903               	skipnz
  7726     0C9D  0AE8               	incf	___fltol@f1+1,f
  7727     0C9E  1903               	skipnz
  7728     0C9F  0AE9               	incf	___fltol@f1+2,f
  7729     0CA0  1903               	skipnz
  7730     0CA1  0AEA               	incf	___fltol@f1+3,f
  7731     0CA2                     l1068:
  7732     0CA2                     l1058:
  7733     0CA2  0008               	return
  7734     0CA3                     __end_of___fltol:
  7735                           
  7736                           	psect	text40
  7737     09F7                     __ptext40:	
  7738 ;; *************** function ___flsub *****************
  7739 ;; Defined at:
  7740 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcadd.c"
  7741 ;; Parameters:    Size  Location     Type
  7742 ;;  a               4   65[BANK0 ] long 
  7743 ;;  b               4   69[BANK0 ] long 
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;		None
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  4   65[BANK0 ] long 
  7748 ;; Registers used:
  7749 ;;		wreg, status,2, status,0, pclath, cstack
  7750 ;; Tracked objects:
  7751 ;;		On entry : 0/0
  7752 ;;		On exit  : 0/0
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7755 ;;      Params:         0       8       0       0       0       0
  7756 ;;      Locals:         0       0       0       0       0       0
  7757 ;;      Temps:          0       0       0       0       0       0
  7758 ;;      Totals:         0       8       0       0       0       0
  7759 ;;Total ram usage:        8 bytes
  7760 ;; Hardware stack levels used: 1
  7761 ;; Hardware stack levels required when called: 5
  7762 ;; This function calls:
  7763 ;;		___fladd
  7764 ;; This function is called by:
  7765 ;;		_ControleAjuste
  7766 ;; This function uses a non-reentrant model
  7767 ;;
  7768                           
  7769     09F7                     ___flsub:	
  7770                           ;psect for function ___flsub
  7771                           
  7772     09F7                     l3948:	
  7773                           ;incstack = 0
  7774                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  7775                           
  7776     09F7  3080               	movlw	128
  7777     09F8  0020               	movlb	0	; select bank0
  7778     09F9  06E4               	xorwf	___flsub@a+3,f
  7779     09FA                     l3950:
  7780     09FA  0868               	movf	___flsub@b+3,w
  7781     09FB  00D0               	movwf	___fladd@b+3
  7782     09FC  0867               	movf	___flsub@b+2,w
  7783     09FD  00CF               	movwf	___fladd@b+2
  7784     09FE  0866               	movf	___flsub@b+1,w
  7785     09FF  00CE               	movwf	___fladd@b+1
  7786     0A00  0865               	movf	___flsub@b,w
  7787     0A01  00CD               	movwf	___fladd@b
  7788     0A02  0864               	movf	___flsub@a+3,w
  7789     0A03  00D4               	movwf	___fladd@a+3
  7790     0A04  0863               	movf	___flsub@a+2,w
  7791     0A05  00D3               	movwf	___fladd@a+2
  7792     0A06  0862               	movf	___flsub@a+1,w
  7793     0A07  00D2               	movwf	___fladd@a+1
  7794     0A08  0861               	movf	___flsub@a,w
  7795     0A09  00D1               	movwf	___fladd@a
  7796     0A0A  3182  22AB  3189   	fcall	___fladd
  7797     0A0D  0020               	movlb	0	; select bank0
  7798     0A0E  0850               	movf	?___fladd+3,w
  7799     0A0F  00E4               	movwf	?___flsub+3
  7800     0A10  084F               	movf	?___fladd+2,w
  7801     0A11  00E3               	movwf	?___flsub+2
  7802     0A12  084E               	movf	?___fladd+1,w
  7803     0A13  00E2               	movwf	?___flsub+1
  7804     0A14  084D               	movf	?___fladd,w
  7805     0A15  00E1               	movwf	?___flsub
  7806     0A16                     l1211:
  7807     0A16  0008               	return
  7808     0A17                     __end_of___flsub:
  7809                           
  7810                           	psect	text41
  7811     02AB                     __ptext41:	
  7812 ;; *************** function ___fladd *****************
  7813 ;; Defined at:
  7814 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcadd.c"
  7815 ;; Parameters:    Size  Location     Type
  7816 ;;  b               4   45[BANK0 ] long 
  7817 ;;  a               4   49[BANK0 ] long 
  7818 ;; Auto vars:     Size  Location     Type
  7819 ;;  grs             1   64[BANK0 ] unsigned char 
  7820 ;;  bexp            1   63[BANK0 ] unsigned char 
  7821 ;;  aexp            1   62[BANK0 ] unsigned char 
  7822 ;;  signs           1   61[BANK0 ] unsigned char 
  7823 ;; Return value:  Size  Location     Type
  7824 ;;                  4   45[BANK0 ] unsigned char 
  7825 ;; Registers used:
  7826 ;;		wreg, status,2, status,0
  7827 ;; Tracked objects:
  7828 ;;		On entry : 0/0
  7829 ;;		On exit  : 0/0
  7830 ;;		Unchanged: 0/0
  7831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7832 ;;      Params:         0       8       0       0       0       0
  7833 ;;      Locals:         0       4       0       0       0       0
  7834 ;;      Temps:          0       8       0       0       0       0
  7835 ;;      Totals:         0      20       0       0       0       0
  7836 ;;Total ram usage:       20 bytes
  7837 ;; Hardware stack levels used: 1
  7838 ;; Hardware stack levels required when called: 4
  7839 ;; This function calls:
  7840 ;;		Nothing
  7841 ;; This function is called by:
  7842 ;;		_ControleAjuste
  7843 ;;		___flsub
  7844 ;; This function uses a non-reentrant model
  7845 ;;
  7846                           
  7847     02AB                     ___fladd:	
  7848                           ;psect for function ___fladd
  7849                           
  7850     02AB                     l3656:	
  7851                           ;incstack = 0
  7852                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  7853                           
  7854     02AB  0020               	movlb	0	; select bank0
  7855     02AC  0850               	movf	___fladd@b+3,w
  7856     02AD  3980               	andlw	128
  7857     02AE  00DD               	movwf	___fladd@signs
  7858     02AF                     l3658:
  7859     02AF  3550               	lslf	___fladd@b+3,w
  7860     02B0  00DF               	movwf	___fladd@bexp
  7861     02B1                     l3660:
  7862     02B1  1FCF               	btfss	___fladd@b+2,7
  7863     02B2  2AB4               	goto	u4021
  7864     02B3  2AB5               	goto	u4020
  7865     02B4                     u4021:
  7866     02B4  2AB6               	goto	l3664
  7867     02B5                     u4020:
  7868     02B5                     l3662:
  7869     02B5  145F               	bsf	___fladd@bexp,0
  7870     02B6                     l3664:
  7871     02B6  085F               	movf	___fladd@bexp,w
  7872     02B7  1903               	btfsc	3,2
  7873     02B8  2ABA               	goto	u4031
  7874     02B9  2ABB               	goto	u4030
  7875     02BA                     u4031:
  7876     02BA  2ACB               	goto	l3674
  7877     02BB                     u4030:
  7878     02BB                     l3666:
  7879     02BB  0A5F               	incf	___fladd@bexp,w
  7880     02BC  1D03               	btfss	3,2
  7881     02BD  2ABF               	goto	u4041
  7882     02BE  2AC0               	goto	u4040
  7883     02BF                     u4041:
  7884     02BF  2AC8               	goto	l3670
  7885     02C0                     u4040:
  7886     02C0                     l3668:
  7887     02C0  3000               	movlw	0
  7888     02C1  00D0               	movwf	___fladd@b+3
  7889     02C2  3000               	movlw	0
  7890     02C3  00CF               	movwf	___fladd@b+2
  7891     02C4  3000               	movlw	0
  7892     02C5  00CE               	movwf	___fladd@b+1
  7893     02C6  3000               	movlw	0
  7894     02C7  00CD               	movwf	___fladd@b
  7895     02C8                     l3670:
  7896     02C8  17CF               	bsf	___fladd@b+2,7
  7897     02C9                     l3672:
  7898     02C9  01D0               	clrf	___fladd@b+3
  7899     02CA  2AD3               	goto	l3676
  7900     02CB                     l3674:
  7901     02CB  3000               	movlw	0
  7902     02CC  00D0               	movwf	___fladd@b+3
  7903     02CD  3000               	movlw	0
  7904     02CE  00CF               	movwf	___fladd@b+2
  7905     02CF  3000               	movlw	0
  7906     02D0  00CE               	movwf	___fladd@b+1
  7907     02D1  3000               	movlw	0
  7908     02D2  00CD               	movwf	___fladd@b
  7909     02D3                     l3676:
  7910     02D3  0854               	movf	___fladd@a+3,w
  7911     02D4  3980               	andlw	128
  7912     02D5  00DE               	movwf	___fladd@aexp
  7913     02D6                     l3678:
  7914     02D6  085E               	movf	___fladd@aexp,w
  7915     02D7  065D               	xorwf	___fladd@signs,w
  7916     02D8  1903               	skipnz
  7917     02D9  2ADB               	goto	u4051
  7918     02DA  2ADC               	goto	u4050
  7919     02DB                     u4051:
  7920     02DB  2ADD               	goto	l3682
  7921     02DC                     u4050:
  7922     02DC                     l3680:
  7923     02DC  175D               	bsf	___fladd@signs,6
  7924     02DD                     l3682:
  7925     02DD  3554               	lslf	___fladd@a+3,w
  7926     02DE  00DE               	movwf	___fladd@aexp
  7927     02DF                     l3684:
  7928     02DF  1FD3               	btfss	___fladd@a+2,7
  7929     02E0  2AE2               	goto	u4061
  7930     02E1  2AE3               	goto	u4060
  7931     02E2                     u4061:
  7932     02E2  2AE4               	goto	l3688
  7933     02E3                     u4060:
  7934     02E3                     l3686:
  7935     02E3  145E               	bsf	___fladd@aexp,0
  7936     02E4                     l3688:
  7937     02E4  085E               	movf	___fladd@aexp,w
  7938     02E5  1903               	btfsc	3,2
  7939     02E6  2AE8               	goto	u4071
  7940     02E7  2AE9               	goto	u4070
  7941     02E8                     u4071:
  7942     02E8  2AF9               	goto	l3698
  7943     02E9                     u4070:
  7944     02E9                     l3690:
  7945     02E9  0A5E               	incf	___fladd@aexp,w
  7946     02EA  1D03               	btfss	3,2
  7947     02EB  2AED               	goto	u4081
  7948     02EC  2AEE               	goto	u4080
  7949     02ED                     u4081:
  7950     02ED  2AF6               	goto	l3694
  7951     02EE                     u4080:
  7952     02EE                     l3692:
  7953     02EE  3000               	movlw	0
  7954     02EF  00D4               	movwf	___fladd@a+3
  7955     02F0  3000               	movlw	0
  7956     02F1  00D3               	movwf	___fladd@a+2
  7957     02F2  3000               	movlw	0
  7958     02F3  00D2               	movwf	___fladd@a+1
  7959     02F4  3000               	movlw	0
  7960     02F5  00D1               	movwf	___fladd@a
  7961     02F6                     l3694:
  7962     02F6  17D3               	bsf	___fladd@a+2,7
  7963     02F7                     l3696:
  7964     02F7  01D4               	clrf	___fladd@a+3
  7965     02F8  2B01               	goto	l1165
  7966     02F9                     l3698:
  7967     02F9  3000               	movlw	0
  7968     02FA  00D4               	movwf	___fladd@a+3
  7969     02FB  3000               	movlw	0
  7970     02FC  00D3               	movwf	___fladd@a+2
  7971     02FD  3000               	movlw	0
  7972     02FE  00D2               	movwf	___fladd@a+1
  7973     02FF  3000               	movlw	0
  7974     0300  00D1               	movwf	___fladd@a
  7975     0301                     l1165:
  7976     0301  085F               	movf	___fladd@bexp,w
  7977     0302  025E               	subwf	___fladd@aexp,w
  7978     0303  1803               	skipnc
  7979     0304  2B06               	goto	u4091
  7980     0305  2B07               	goto	u4090
  7981     0306                     u4091:
  7982     0306  2B2B               	goto	l3734
  7983     0307                     u4090:
  7984     0307                     l3700:
  7985     0307  1F5D               	btfss	___fladd@signs,6
  7986     0308  2B0A               	goto	u4101
  7987     0309  2B0B               	goto	u4100
  7988     030A                     u4101:
  7989     030A  2B0D               	goto	l3704
  7990     030B                     u4100:
  7991     030B                     l3702:
  7992     030B  3080               	movlw	128
  7993     030C  06DD               	xorwf	___fladd@signs,f
  7994     030D                     l3704:
  7995     030D  085F               	movf	___fladd@bexp,w
  7996     030E  00E0               	movwf	___fladd@grs
  7997     030F                     l3706:
  7998     030F  085E               	movf	___fladd@aexp,w
  7999     0310  00DF               	movwf	___fladd@bexp
  8000     0311                     l3708:
  8001     0311  0860               	movf	___fladd@grs,w
  8002     0312  00DE               	movwf	___fladd@aexp
  8003     0313                     l3710:
  8004     0313  084D               	movf	___fladd@b,w
  8005     0314  00E0               	movwf	___fladd@grs
  8006     0315                     l3712:
  8007     0315  0851               	movf	___fladd@a,w
  8008     0316  00CD               	movwf	___fladd@b
  8009     0317                     l3714:
  8010     0317  0860               	movf	___fladd@grs,w
  8011     0318  00D1               	movwf	___fladd@a
  8012     0319                     l3716:
  8013     0319  084E               	movf	___fladd@b+1,w
  8014     031A  00E0               	movwf	___fladd@grs
  8015     031B                     l3718:
  8016     031B  0852               	movf	___fladd@a+1,w
  8017     031C  00CE               	movwf	___fladd@b+1
  8018     031D                     l3720:
  8019     031D  0860               	movf	___fladd@grs,w
  8020     031E  00D2               	movwf	___fladd@a+1
  8021     031F                     l3722:
  8022     031F  084F               	movf	___fladd@b+2,w
  8023     0320  00E0               	movwf	___fladd@grs
  8024     0321                     l3724:
  8025     0321  0853               	movf	___fladd@a+2,w
  8026     0322  00CF               	movwf	___fladd@b+2
  8027     0323                     l3726:
  8028     0323  0860               	movf	___fladd@grs,w
  8029     0324  00D3               	movwf	___fladd@a+2
  8030     0325                     l3728:
  8031     0325  0850               	movf	___fladd@b+3,w
  8032     0326  00E0               	movwf	___fladd@grs
  8033     0327                     l3730:
  8034     0327  0854               	movf	___fladd@a+3,w
  8035     0328  00D0               	movwf	___fladd@b+3
  8036     0329                     l3732:
  8037     0329  0860               	movf	___fladd@grs,w
  8038     032A  00D4               	movwf	___fladd@a+3
  8039     032B                     l3734:
  8040     032B  01E0               	clrf	___fladd@grs
  8041     032C                     l3736:
  8042     032C  085E               	movf	___fladd@aexp,w
  8043     032D  00D5               	movwf	??___fladd
  8044     032E  01D6               	clrf	??___fladd+1
  8045     032F  0856               	movf	??___fladd+1,w
  8046     0330  00D8               	movwf	??___fladd+3
  8047     0331  085F               	movf	___fladd@bexp,w
  8048     0332  0255               	subwf	??___fladd,w
  8049     0333  00D7               	movwf	??___fladd+2
  8050     0334  1C03               	skipc
  8051     0335  03D8               	decf	??___fladd+3,f
  8052     0336  0858               	movf	??___fladd+3,w
  8053     0337  3A80               	xorlw	128
  8054     0338  00D9               	movwf	??___fladd+4
  8055     0339  3080               	movlw	128
  8056     033A  0259               	subwf	??___fladd+4,w
  8057     033B  1D03               	skipz
  8058     033C  2B3F               	goto	u4115
  8059     033D  301A               	movlw	26
  8060     033E  0257               	subwf	??___fladd+2,w
  8061     033F                     u4115:
  8062     033F  1C03               	skipc
  8063     0340  2B42               	goto	u4111
  8064     0341  2B43               	goto	u4110
  8065     0342                     u4111:
  8066     0342  2B79               	goto	l3752
  8067     0343                     u4110:
  8068     0343                     l3738:
  8069     0343  0020               	movlb	0	; select bank0
  8070     0344  0850               	movf	___fladd@b+3,w
  8071     0345  044F               	iorwf	___fladd@b+2,w
  8072     0346  044E               	iorwf	___fladd@b+1,w
  8073     0347  044D               	iorwf	___fladd@b,w
  8074     0348  1D03               	skipz
  8075     0349  2B4B               	goto	u4121
  8076     034A  2B4D               	goto	u4120
  8077     034B                     u4121:
  8078     034B  3001               	movlw	1
  8079     034C  2B4E               	goto	u4130
  8080     034D                     u4120:
  8081     034D  3000               	movlw	0
  8082     034E                     u4130:
  8083     034E  00E0               	movwf	___fladd@grs
  8084     034F  3000               	movlw	0
  8085     0350  00D0               	movwf	___fladd@b+3
  8086     0351  3000               	movlw	0
  8087     0352  00CF               	movwf	___fladd@b+2
  8088     0353  3000               	movlw	0
  8089     0354  00CE               	movwf	___fladd@b+1
  8090     0355  3000               	movlw	0
  8091     0356  00CD               	movwf	___fladd@b
  8092     0357  085E               	movf	___fladd@aexp,w
  8093     0358  00DF               	movwf	___fladd@bexp
  8094     0359  2B80               	goto	l1169
  8095     035A                     l1171:
  8096     035A  1C60               	btfss	___fladd@grs,0
  8097     035B  2B5D               	goto	u4141
  8098     035C  2B5E               	goto	u4140
  8099     035D                     u4141:
  8100     035D  2B68               	goto	l3742
  8101     035E                     u4140:
  8102     035E                     l3740:
  8103     035E  0860               	movf	___fladd@grs,w
  8104     035F  00D5               	movwf	??___fladd
  8105     0360  3001               	movlw	1
  8106     0361                     u4155:
  8107     0361  36D5               	lsrf	??___fladd,f
  8108     0362  0B89               	decfsz	9,f
  8109     0363  2B61               	goto	u4155
  8110     0364  0855               	movf	??___fladd,w
  8111     0365  3801               	iorlw	1
  8112     0366  00E0               	movwf	___fladd@grs
  8113     0367  2B6A               	goto	l3744
  8114     0368                     l3742:
  8115     0368  1003               	clrc
  8116     0369  0CE0               	rrf	___fladd@grs,f
  8117     036A                     l3744:
  8118     036A  1C4D               	btfss	___fladd@b,0
  8119     036B  2B6D               	goto	u4161
  8120     036C  2B6E               	goto	u4160
  8121     036D                     u4161:
  8122     036D  2B6F               	goto	l3748
  8123     036E                     u4160:
  8124     036E                     l3746:
  8125     036E  17E0               	bsf	___fladd@grs,7
  8126     036F                     l3748:
  8127     036F  3001               	movlw	1
  8128     0370  00D5               	movwf	??___fladd
  8129     0371                     u4175:
  8130     0371  37D0               	asrf	___fladd@b+3,f
  8131     0372  0CCF               	rrf	___fladd@b+2,f
  8132     0373  0CCE               	rrf	___fladd@b+1,f
  8133     0374  0CCD               	rrf	___fladd@b,f
  8134     0375  0BD5               	decfsz	??___fladd& (0+127),f
  8135     0376  2B71               	goto	u4175
  8136     0377                     l3750:
  8137     0377  3001               	movlw	1
  8138     0378  07DF               	addwf	___fladd@bexp,f
  8139     0379                     l3752:
  8140     0379  0020               	movlb	0	; select bank0
  8141     037A  085E               	movf	___fladd@aexp,w
  8142     037B  025F               	subwf	___fladd@bexp,w
  8143     037C  1C03               	skipc
  8144     037D  2B7F               	goto	u4181
  8145     037E  2B80               	goto	u4180
  8146     037F                     u4181:
  8147     037F  2B5A               	goto	l1171
  8148     0380                     u4180:
  8149     0380                     l1169:
  8150     0380  1B5D               	btfsc	___fladd@signs,6
  8151     0381  2B83               	goto	u4191
  8152     0382  2B84               	goto	u4190
  8153     0383                     u4191:
  8154     0383  2BBE               	goto	l3778
  8155     0384                     u4190:
  8156     0384                     l3754:
  8157     0384  085F               	movf	___fladd@bexp,w
  8158     0385  1D03               	btfss	3,2
  8159     0386  2B88               	goto	u4201
  8160     0387  2B89               	goto	u4200
  8161     0388                     u4201:
  8162     0388  2B92               	goto	l3760
  8163     0389                     u4200:
  8164     0389                     l3756:
  8165     0389  3000               	movlw	0
  8166     038A  00D0               	movwf	?___fladd+3
  8167     038B  3000               	movlw	0
  8168     038C  00CF               	movwf	?___fladd+2
  8169     038D  3000               	movlw	0
  8170     038E  00CE               	movwf	?___fladd+1
  8171     038F  3000               	movlw	0
  8172     0390  00CD               	movwf	?___fladd
  8173     0391  2CB6               	goto	l1178
  8174     0392                     l3760:
  8175     0392  0851               	movf	___fladd@a,w
  8176     0393  07CD               	addwf	___fladd@b,f
  8177     0394  0852               	movf	___fladd@a+1,w
  8178     0395  3DCE               	addwfc	___fladd@b+1,f
  8179     0396  0853               	movf	___fladd@a+2,w
  8180     0397  3DCF               	addwfc	___fladd@b+2,f
  8181     0398  0854               	movf	___fladd@a+3,w
  8182     0399  3DD0               	addwfc	___fladd@b+3,f
  8183     039A                     l3762:
  8184     039A  1C50               	btfss	___fladd@b+3,0
  8185     039B  2B9D               	goto	u4211
  8186     039C  2B9E               	goto	u4210
  8187     039D                     u4211:
  8188     039D  2C48               	goto	l3814
  8189     039E                     u4210:
  8190     039E                     l3764:
  8191     039E  1C60               	btfss	___fladd@grs,0
  8192     039F  2BA1               	goto	u4221
  8193     03A0  2BA2               	goto	u4220
  8194     03A1                     u4221:
  8195     03A1  2BAC               	goto	l3768
  8196     03A2                     u4220:
  8197     03A2                     l3766:
  8198     03A2  0860               	movf	___fladd@grs,w
  8199     03A3  00D5               	movwf	??___fladd
  8200     03A4  3001               	movlw	1
  8201     03A5                     u4235:
  8202     03A5  36D5               	lsrf	??___fladd,f
  8203     03A6  0B89               	decfsz	9,f
  8204     03A7  2BA5               	goto	u4235
  8205     03A8  0855               	movf	??___fladd,w
  8206     03A9  3801               	iorlw	1
  8207     03AA  00E0               	movwf	___fladd@grs
  8208     03AB  2BAE               	goto	l3770
  8209     03AC                     l3768:
  8210     03AC  1003               	clrc
  8211     03AD  0CE0               	rrf	___fladd@grs,f
  8212     03AE                     l3770:
  8213     03AE  1C4D               	btfss	___fladd@b,0
  8214     03AF  2BB1               	goto	u4241
  8215     03B0  2BB2               	goto	u4240
  8216     03B1                     u4241:
  8217     03B1  2BB3               	goto	l3774
  8218     03B2                     u4240:
  8219     03B2                     l3772:
  8220     03B2  17E0               	bsf	___fladd@grs,7
  8221     03B3                     l3774:
  8222     03B3  3001               	movlw	1
  8223     03B4  00D5               	movwf	??___fladd
  8224     03B5                     u4255:
  8225     03B5  37D0               	asrf	___fladd@b+3,f
  8226     03B6  0CCF               	rrf	___fladd@b+2,f
  8227     03B7  0CCE               	rrf	___fladd@b+1,f
  8228     03B8  0CCD               	rrf	___fladd@b,f
  8229     03B9  0BD5               	decfsz	??___fladd& (0+127),f
  8230     03BA  2BB5               	goto	u4255
  8231     03BB                     l3776:
  8232     03BB  3001               	movlw	1
  8233     03BC  07DF               	addwf	___fladd@bexp,f
  8234     03BD  2C48               	goto	l3814
  8235     03BE                     l3778:
  8236     03BE  0850               	movf	___fladd@b+3,w
  8237     03BF  3A80               	xorlw	128
  8238     03C0  00D5               	movwf	??___fladd
  8239     03C1  0854               	movf	___fladd@a+3,w
  8240     03C2  3A80               	xorlw	128
  8241     03C3  0255               	subwf	??___fladd,w
  8242     03C4  1D03               	skipz
  8243     03C5  2BD0               	goto	u4263
  8244     03C6  0853               	movf	___fladd@a+2,w
  8245     03C7  024F               	subwf	___fladd@b+2,w
  8246     03C8  1D03               	skipz
  8247     03C9  2BD0               	goto	u4263
  8248     03CA  0852               	movf	___fladd@a+1,w
  8249     03CB  024E               	subwf	___fladd@b+1,w
  8250     03CC  1D03               	skipz
  8251     03CD  2BD0               	goto	u4263
  8252     03CE  0851               	movf	___fladd@a,w
  8253     03CF  024D               	subwf	___fladd@b,w
  8254     03D0                     u4263:
  8255     03D0  1803               	skipnc
  8256     03D1  2BD3               	goto	u4261
  8257     03D2  2BD4               	goto	u4260
  8258     03D3                     u4261:
  8259     03D3  2C09               	goto	l3790
  8260     03D4                     u4260:
  8261     03D4                     l3780:
  8262     03D4  30FF               	movlw	255
  8263     03D5  00D5               	movwf	??___fladd
  8264     03D6  30FF               	movlw	255
  8265     03D7  00D6               	movwf	??___fladd+1
  8266     03D8  30FF               	movlw	255
  8267     03D9  00D7               	movwf	??___fladd+2
  8268     03DA  30FF               	movlw	255
  8269     03DB  00D8               	movwf	??___fladd+3
  8270     03DC  084D               	movf	___fladd@b,w
  8271     03DD  0251               	subwf	___fladd@a,w
  8272     03DE  00D9               	movwf	??___fladd+4
  8273     03DF  084E               	movf	___fladd@b+1,w
  8274     03E0  3B52               	subwfb	___fladd@a+1,w
  8275     03E1  00DA               	movwf	??___fladd+5
  8276     03E2  084F               	movf	___fladd@b+2,w
  8277     03E3  3B53               	subwfb	___fladd@a+2,w
  8278     03E4  00DB               	movwf	??___fladd+6
  8279     03E5  0850               	movf	___fladd@b+3,w
  8280     03E6  3B54               	subwfb	___fladd@a+3,w
  8281     03E7  00DC               	movwf	??___fladd+7
  8282     03E8  0859               	movf	??___fladd+4,w
  8283     03E9  07D5               	addwf	??___fladd,f
  8284     03EA  085A               	movf	??___fladd+5,w
  8285     03EB  3DD6               	addwfc	??___fladd+1,f
  8286     03EC  085B               	movf	??___fladd+6,w
  8287     03ED  3DD7               	addwfc	??___fladd+2,f
  8288     03EE  085C               	movf	??___fladd+7,w
  8289     03EF  3DD8               	addwfc	??___fladd+3,f
  8290     03F0  0858               	movf	??___fladd+3,w
  8291     03F1  00D0               	movwf	___fladd@b+3
  8292     03F2  0857               	movf	??___fladd+2,w
  8293     03F3  00CF               	movwf	___fladd@b+2
  8294     03F4  0856               	movf	??___fladd+1,w
  8295     03F5  00CE               	movwf	___fladd@b+1
  8296     03F6  0855               	movf	??___fladd,w
  8297     03F7  00CD               	movwf	___fladd@b
  8298     03F8                     l3782:
  8299     03F8  3080               	movlw	128
  8300     03F9  06DD               	xorwf	___fladd@signs,f
  8301     03FA                     l3784:
  8302     03FA  0360               	decf	___fladd@grs,w
  8303     03FB  3AFF               	xorlw	255
  8304     03FC  00E0               	movwf	___fladd@grs
  8305     03FD                     l3786:
  8306     03FD  0860               	movf	___fladd@grs,w
  8307     03FE  1D03               	btfss	3,2
  8308     03FF  2C01               	goto	u4271
  8309     0400  2C02               	goto	u4270
  8310     0401                     u4271:
  8311     0401  2C11               	goto	l1186
  8312     0402                     u4270:
  8313     0402                     l3788:
  8314     0402  3001               	movlw	1
  8315     0403  07CD               	addwf	___fladd@b,f
  8316     0404  3000               	movlw	0
  8317     0405  3DCE               	addwfc	___fladd@b+1,f
  8318     0406  3DCF               	addwfc	___fladd@b+2,f
  8319     0407  3DD0               	addwfc	___fladd@b+3,f
  8320     0408  2C11               	goto	l1186
  8321     0409                     l3790:
  8322     0409  0851               	movf	___fladd@a,w
  8323     040A  02CD               	subwf	___fladd@b,f
  8324     040B  0852               	movf	___fladd@a+1,w
  8325     040C  3BCE               	subwfb	___fladd@b+1,f
  8326     040D  0853               	movf	___fladd@a+2,w
  8327     040E  3BCF               	subwfb	___fladd@b+2,f
  8328     040F  0854               	movf	___fladd@a+3,w
  8329     0410  3BD0               	subwfb	___fladd@b+3,f
  8330     0411                     l1186:
  8331     0411  0850               	movf	___fladd@b+3,w
  8332     0412  044F               	iorwf	___fladd@b+2,w
  8333     0413  044E               	iorwf	___fladd@b+1,w
  8334     0414  044D               	iorwf	___fladd@b,w
  8335     0415  1D03               	skipz
  8336     0416  2C18               	goto	u4281
  8337     0417  2C19               	goto	u4280
  8338     0418                     u4281:
  8339     0418  2C44               	goto	l3812
  8340     0419                     u4280:
  8341     0419                     l3792:
  8342     0419  0860               	movf	___fladd@grs,w
  8343     041A  1D03               	btfss	3,2
  8344     041B  2C1D               	goto	u4291
  8345     041C  2C1E               	goto	u4290
  8346     041D                     u4291:
  8347     041D  2C44               	goto	l3812
  8348     041E                     u4290:
  8349     041E                     l3794:
  8350     041E  3000               	movlw	0
  8351     041F  00D0               	movwf	?___fladd+3
  8352     0420  3000               	movlw	0
  8353     0421  00CF               	movwf	?___fladd+2
  8354     0422  3000               	movlw	0
  8355     0423  00CE               	movwf	?___fladd+1
  8356     0424  3000               	movlw	0
  8357     0425  00CD               	movwf	?___fladd
  8358     0426  2CB6               	goto	l1178
  8359     0427                     l3798:
  8360     0427  3001               	movlw	1
  8361     0428                     u4305:
  8362     0428  35CD               	lslf	___fladd@b,f
  8363     0429  0DCE               	rlf	___fladd@b+1,f
  8364     042A  0DCF               	rlf	___fladd@b+2,f
  8365     042B  0DD0               	rlf	___fladd@b+3,f
  8366     042C  0B89               	decfsz	9,f
  8367     042D  2C28               	goto	u4305
  8368     042E                     l3800:
  8369     042E  1FE0               	btfss	___fladd@grs,7
  8370     042F  2C31               	goto	u4311
  8371     0430  2C32               	goto	u4310
  8372     0431                     u4311:
  8373     0431  2C33               	goto	l1190
  8374     0432                     u4310:
  8375     0432                     l3802:
  8376     0432  144D               	bsf	___fladd@b,0
  8377     0433                     l1190:
  8378     0433  1C60               	btfss	___fladd@grs,0
  8379     0434  2C36               	goto	u4321
  8380     0435  2C37               	goto	u4320
  8381     0436                     u4321:
  8382     0436  2C3B               	goto	l3806
  8383     0437                     u4320:
  8384     0437                     l3804:
  8385     0437  1403               	setc
  8386     0438  0D60               	rlf	___fladd@grs,w
  8387     0439  00E0               	movwf	___fladd@grs
  8388     043A  2C3D               	goto	l3808
  8389     043B                     l3806:
  8390     043B  1003               	clrc
  8391     043C  0DE0               	rlf	___fladd@grs,f
  8392     043D                     l3808:
  8393     043D  085F               	movf	___fladd@bexp,w
  8394     043E  1903               	btfsc	3,2
  8395     043F  2C41               	goto	u4331
  8396     0440  2C42               	goto	u4330
  8397     0441                     u4331:
  8398     0441  2C44               	goto	l3812
  8399     0442                     u4330:
  8400     0442                     l3810:
  8401     0442  3001               	movlw	1
  8402     0443  02DF               	subwf	___fladd@bexp,f
  8403     0444                     l3812:
  8404     0444  1FCF               	btfss	___fladd@b+2,7
  8405     0445  2C47               	goto	u4341
  8406     0446  2C48               	goto	u4340
  8407     0447                     u4341:
  8408     0447  2C27               	goto	l3798
  8409     0448                     u4340:
  8410     0448                     l3814:
  8411     0448  01DE               	clrf	___fladd@aexp
  8412     0449                     l3816:
  8413     0449  1FE0               	btfss	___fladd@grs,7
  8414     044A  2C4C               	goto	u4351
  8415     044B  2C4D               	goto	u4350
  8416     044C                     u4351:
  8417     044C  2C5B               	goto	l3824
  8418     044D                     u4350:
  8419     044D                     l3818:
  8420     044D  0860               	movf	___fladd@grs,w
  8421     044E  397F               	andlw	127
  8422     044F  1903               	btfsc	3,2
  8423     0450  2C52               	goto	u4361
  8424     0451  2C53               	goto	u4360
  8425     0452                     u4361:
  8426     0452  2C56               	goto	l1196
  8427     0453                     u4360:
  8428     0453                     l3820:
  8429     0453  3001               	movlw	1
  8430     0454  00DE               	movwf	___fladd@aexp
  8431     0455  2C5B               	goto	l3824
  8432     0456                     l1196:
  8433     0456  1C4D               	btfss	___fladd@b,0
  8434     0457  2C59               	goto	u4371
  8435     0458  2C5A               	goto	u4370
  8436     0459                     u4371:
  8437     0459  2C5B               	goto	l3824
  8438     045A                     u4370:
  8439     045A  2C53               	goto	l3820
  8440     045B                     l3824:
  8441     045B  085E               	movf	___fladd@aexp,w
  8442     045C  1903               	btfsc	3,2
  8443     045D  2C5F               	goto	u4381
  8444     045E  2C60               	goto	u4380
  8445     045F                     u4381:
  8446     045F  2C89               	goto	l1199
  8447     0460                     u4380:
  8448     0460                     l3826:
  8449     0460  3001               	movlw	1
  8450     0461  07CD               	addwf	___fladd@b,f
  8451     0462  3000               	movlw	0
  8452     0463  3DCE               	addwfc	___fladd@b+1,f
  8453     0464  3DCF               	addwfc	___fladd@b+2,f
  8454     0465  3DD0               	addwfc	___fladd@b+3,f
  8455     0466                     l3828:
  8456     0466  1C50               	btfss	___fladd@b+3,0
  8457     0467  2C69               	goto	u4391
  8458     0468  2C6A               	goto	u4390
  8459     0469                     u4391:
  8460     0469  2C89               	goto	l1199
  8461     046A                     u4390:
  8462     046A                     l3830:
  8463     046A  084D               	movf	___fladd@b,w
  8464     046B  00D5               	movwf	??___fladd
  8465     046C  084E               	movf	___fladd@b+1,w
  8466     046D  00D6               	movwf	??___fladd+1
  8467     046E  084F               	movf	___fladd@b+2,w
  8468     046F  00D7               	movwf	??___fladd+2
  8469     0470  0850               	movf	___fladd@b+3,w
  8470     0471  00D8               	movwf	??___fladd+3
  8471     0472  3001               	movlw	1
  8472     0473  00D9               	movwf	??___fladd+4
  8473     0474                     u4405:
  8474     0474  37D8               	asrf	??___fladd+3,f
  8475     0475  0CD7               	rrf	??___fladd+2,f
  8476     0476  0CD6               	rrf	??___fladd+1,f
  8477     0477  0CD5               	rrf	??___fladd,f
  8478     0478                     u4400:
  8479     0478  0BD9               	decfsz	??___fladd+4,f
  8480     0479  2C74               	goto	u4405
  8481     047A  0858               	movf	??___fladd+3,w
  8482     047B  00D0               	movwf	___fladd@b+3
  8483     047C  0857               	movf	??___fladd+2,w
  8484     047D  00CF               	movwf	___fladd@b+2
  8485     047E  0856               	movf	??___fladd+1,w
  8486     047F  00CE               	movwf	___fladd@b+1
  8487     0480  0855               	movf	??___fladd,w
  8488     0481  00CD               	movwf	___fladd@b
  8489     0482  0A5F               	incf	___fladd@bexp,w
  8490     0483  1903               	btfsc	3,2
  8491     0484  2C86               	goto	u4411
  8492     0485  2C87               	goto	u4410
  8493     0486                     u4411:
  8494     0486  2C89               	goto	l1199
  8495     0487                     u4410:
  8496     0487                     l3832:
  8497     0487  3001               	movlw	1
  8498     0488  07DF               	addwf	___fladd@bexp,f
  8499     0489                     l1199:
  8500     0489  0A5F               	incf	___fladd@bexp,w
  8501     048A  1903               	btfsc	3,2
  8502     048B  2C8D               	goto	u4421
  8503     048C  2C8E               	goto	u4420
  8504     048D                     u4421:
  8505     048D  2C93               	goto	l3836
  8506     048E                     u4420:
  8507     048E                     l3834:
  8508     048E  085F               	movf	___fladd@bexp,w
  8509     048F  1D03               	btfss	3,2
  8510     0490  2C92               	goto	u4431
  8511     0491  2C93               	goto	u4430
  8512     0492                     u4431:
  8513     0492  2CA1               	goto	l3842
  8514     0493                     u4430:
  8515     0493                     l3836:
  8516     0493  3000               	movlw	0
  8517     0494  00D0               	movwf	___fladd@b+3
  8518     0495  3000               	movlw	0
  8519     0496  00CF               	movwf	___fladd@b+2
  8520     0497  3000               	movlw	0
  8521     0498  00CE               	movwf	___fladd@b+1
  8522     0499  3000               	movlw	0
  8523     049A  00CD               	movwf	___fladd@b
  8524     049B                     l3838:
  8525     049B  085F               	movf	___fladd@bexp,w
  8526     049C  1D03               	btfss	3,2
  8527     049D  2C9F               	goto	u4441
  8528     049E  2CA0               	goto	u4440
  8529     049F                     u4441:
  8530     049F  2CA1               	goto	l3842
  8531     04A0                     u4440:
  8532     04A0                     l3840:
  8533     04A0  01DD               	clrf	___fladd@signs
  8534     04A1                     l3842:
  8535     04A1  1C5F               	btfss	___fladd@bexp,0
  8536     04A2  2CA4               	goto	u4451
  8537     04A3  2CA5               	goto	u4450
  8538     04A4                     u4451:
  8539     04A4  2CA7               	goto	l3846
  8540     04A5                     u4450:
  8541     04A5                     l3844:
  8542     04A5  17CF               	bsf	___fladd@b+2,7
  8543     04A6  2CA9               	goto	l1207
  8544     04A7                     l3846:
  8545     04A7  307F               	movlw	127
  8546     04A8  05CF               	andwf	___fladd@b+2,f
  8547     04A9                     l1207:
  8548     04A9  085F               	movf	___fladd@bexp,w
  8549     04AA  00D5               	movwf	??___fladd
  8550     04AB  3001               	movlw	1
  8551     04AC                     u4465:
  8552     04AC  36D5               	lsrf	??___fladd,f
  8553     04AD  0B89               	decfsz	9,f
  8554     04AE  2CAC               	goto	u4465
  8555     04AF  0855               	movf	??___fladd,w
  8556     04B0  00D0               	movwf	___fladd@b+3
  8557     04B1                     l3848:
  8558     04B1  1FDD               	btfss	___fladd@signs,7
  8559     04B2  2CB4               	goto	u4471
  8560     04B3  2CB5               	goto	u4470
  8561     04B4                     u4471:
  8562     04B4  2CB6               	goto	l1208
  8563     04B5                     u4470:
  8564     04B5                     l3850:
  8565     04B5  17D0               	bsf	___fladd@b+3,7
  8566     04B6                     l1208:
  8567     04B6                     l1178:
  8568     04B6  0008               	return
  8569     04B7                     __end_of___fladd:
  8570                           
  8571                           	psect	text42
  8572     0070                     __ptext42:	
  8573 ;; *************** function ___flmul *****************
  8574 ;; Defined at:
  8575 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcmul.c"
  8576 ;; Parameters:    Size  Location     Type
  8577 ;;  b               4   19[BANK0 ] unsigned char 
  8578 ;;  a               4   23[BANK0 ] unsigned char 
  8579 ;; Auto vars:     Size  Location     Type
  8580 ;;  prod            4   39[BANK0 ] struct .
  8581 ;;  grs             4   34[BANK0 ] unsigned long 
  8582 ;;  temp            2   43[BANK0 ] struct .
  8583 ;;  bexp            1   38[BANK0 ] unsigned char 
  8584 ;;  aexp            1   33[BANK0 ] unsigned char 
  8585 ;;  sign            1   32[BANK0 ] unsigned char 
  8586 ;; Return value:  Size  Location     Type
  8587 ;;                  4   19[BANK0 ] unsigned char 
  8588 ;; Registers used:
  8589 ;;		wreg, status,2, status,0, pclath, cstack
  8590 ;; Tracked objects:
  8591 ;;		On entry : 0/0
  8592 ;;		On exit  : 0/0
  8593 ;;		Unchanged: 0/0
  8594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8595 ;;      Params:         0       8       0       0       0       0
  8596 ;;      Locals:         0      13       0       0       0       0
  8597 ;;      Temps:          0       5       0       0       0       0
  8598 ;;      Totals:         0      26       0       0       0       0
  8599 ;;Total ram usage:       26 bytes
  8600 ;; Hardware stack levels used: 1
  8601 ;; Hardware stack levels required when called: 5
  8602 ;; This function calls:
  8603 ;;		__Umul8_16
  8604 ;; This function is called by:
  8605 ;;		_calculateToF
  8606 ;;		_calculateHeight
  8607 ;;		_ControleAjuste
  8608 ;; This function uses a non-reentrant model
  8609 ;;
  8610                           
  8611     0070                     ___flmul:	
  8612                           ;psect for function ___flmul
  8613                           
  8614     0070                     l3954:	
  8615                           ;incstack = 0
  8616                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8617                           
  8618     0070  0020               	movlb	0	; select bank0
  8619     0071  0836               	movf	___flmul@b+3,w
  8620     0072  3980               	andlw	128
  8621     0073  00C0               	movwf	___flmul@sign
  8622     0074                     l3956:
  8623     0074  3536               	lslf	___flmul@b+3,w
  8624     0075  00C6               	movwf	___flmul@bexp
  8625     0076                     l3958:
  8626     0076  1FB5               	btfss	___flmul@b+2,7
  8627     0077  2879               	goto	u4701
  8628     0078  287A               	goto	u4700
  8629     0079                     u4701:
  8630     0079  287B               	goto	l3962
  8631     007A                     u4700:
  8632     007A                     l3960:
  8633     007A  1446               	bsf	___flmul@bexp,0
  8634     007B                     l3962:
  8635     007B  0846               	movf	___flmul@bexp,w
  8636     007C  1903               	btfsc	3,2
  8637     007D  287F               	goto	u4711
  8638     007E  2880               	goto	u4710
  8639     007F                     u4711:
  8640     007F  288F               	goto	l3970
  8641     0080                     u4710:
  8642     0080                     l3964:
  8643     0080  0A46               	incf	___flmul@bexp,w
  8644     0081  1D03               	btfss	3,2
  8645     0082  2884               	goto	u4721
  8646     0083  2885               	goto	u4720
  8647     0084                     u4721:
  8648     0084  288D               	goto	l3968
  8649     0085                     u4720:
  8650     0085                     l3966:
  8651     0085  3000               	movlw	0
  8652     0086  00B6               	movwf	___flmul@b+3
  8653     0087  3000               	movlw	0
  8654     0088  00B5               	movwf	___flmul@b+2
  8655     0089  3000               	movlw	0
  8656     008A  00B4               	movwf	___flmul@b+1
  8657     008B  3000               	movlw	0
  8658     008C  00B3               	movwf	___flmul@b
  8659     008D                     l3968:
  8660     008D  17B5               	bsf	___flmul@b+2,7
  8661     008E  2897               	goto	l3972
  8662     008F                     l3970:
  8663     008F  3000               	movlw	0
  8664     0090  00B6               	movwf	___flmul@b+3
  8665     0091  3000               	movlw	0
  8666     0092  00B5               	movwf	___flmul@b+2
  8667     0093  3000               	movlw	0
  8668     0094  00B4               	movwf	___flmul@b+1
  8669     0095  3000               	movlw	0
  8670     0096  00B3               	movwf	___flmul@b
  8671     0097                     l3972:
  8672     0097  083A               	movf	___flmul@a+3,w
  8673     0098  3980               	andlw	128
  8674     0099  06C0               	xorwf	___flmul@sign,f
  8675     009A                     l3974:
  8676     009A  353A               	lslf	___flmul@a+3,w
  8677     009B  00C1               	movwf	___flmul@aexp
  8678     009C                     l3976:
  8679     009C  1FB9               	btfss	___flmul@a+2,7
  8680     009D  289F               	goto	u4731
  8681     009E  28A0               	goto	u4730
  8682     009F                     u4731:
  8683     009F  28A1               	goto	l3980
  8684     00A0                     u4730:
  8685     00A0                     l3978:
  8686     00A0  1441               	bsf	___flmul@aexp,0
  8687     00A1                     l3980:
  8688     00A1  0841               	movf	___flmul@aexp,w
  8689     00A2  1903               	btfsc	3,2
  8690     00A3  28A5               	goto	u4741
  8691     00A4  28A6               	goto	u4740
  8692     00A5                     u4741:
  8693     00A5  28B5               	goto	l3988
  8694     00A6                     u4740:
  8695     00A6                     l3982:
  8696     00A6  0A41               	incf	___flmul@aexp,w
  8697     00A7  1D03               	btfss	3,2
  8698     00A8  28AA               	goto	u4751
  8699     00A9  28AB               	goto	u4750
  8700     00AA                     u4751:
  8701     00AA  28B3               	goto	l3986
  8702     00AB                     u4750:
  8703     00AB                     l3984:
  8704     00AB  3000               	movlw	0
  8705     00AC  00BA               	movwf	___flmul@a+3
  8706     00AD  3000               	movlw	0
  8707     00AE  00B9               	movwf	___flmul@a+2
  8708     00AF  3000               	movlw	0
  8709     00B0  00B8               	movwf	___flmul@a+1
  8710     00B1  3000               	movlw	0
  8711     00B2  00B7               	movwf	___flmul@a
  8712     00B3                     l3986:
  8713     00B3  17B9               	bsf	___flmul@a+2,7
  8714     00B4  28BD               	goto	l3990
  8715     00B5                     l3988:
  8716     00B5  3000               	movlw	0
  8717     00B6  00BA               	movwf	___flmul@a+3
  8718     00B7  3000               	movlw	0
  8719     00B8  00B9               	movwf	___flmul@a+2
  8720     00B9  3000               	movlw	0
  8721     00BA  00B8               	movwf	___flmul@a+1
  8722     00BB  3000               	movlw	0
  8723     00BC  00B7               	movwf	___flmul@a
  8724     00BD                     l3990:
  8725     00BD  0841               	movf	___flmul@aexp,w
  8726     00BE  1903               	btfsc	3,2
  8727     00BF  28C1               	goto	u4761
  8728     00C0  28C2               	goto	u4760
  8729     00C1                     u4761:
  8730     00C1  28C7               	goto	l3994
  8731     00C2                     u4760:
  8732     00C2                     l3992:
  8733     00C2  0846               	movf	___flmul@bexp,w
  8734     00C3  1D03               	btfss	3,2
  8735     00C4  28C6               	goto	u4771
  8736     00C5  28C7               	goto	u4770
  8737     00C6                     u4771:
  8738     00C6  28D0               	goto	l3998
  8739     00C7                     u4770:
  8740     00C7                     l3994:
  8741     00C7  3000               	movlw	0
  8742     00C8  00B6               	movwf	?___flmul+3
  8743     00C9  3000               	movlw	0
  8744     00CA  00B5               	movwf	?___flmul+2
  8745     00CB  3000               	movlw	0
  8746     00CC  00B4               	movwf	?___flmul+1
  8747     00CD  3000               	movlw	0
  8748     00CE  00B3               	movwf	?___flmul
  8749     00CF  2AAA               	goto	l1261
  8750     00D0                     l3998:
  8751     00D0  0833               	movf	___flmul@b,w
  8752     00D1  00F2               	movwf	__Umul8_16@multiplicand
  8753     00D2  0839               	movf	___flmul@a+2,w
  8754     00D3  318A  2280  3180   	fcall	__Umul8_16
  8755     00D6  0873               	movf	?__Umul8_16+1,w
  8756     00D7  0020               	movlb	0	; select bank0
  8757     00D8  00CC               	movwf	___flmul@temp+1
  8758     00D9  0872               	movf	?__Umul8_16,w
  8759     00DA  00CB               	movwf	___flmul@temp
  8760     00DB                     l4000:
  8761     00DB  084B               	movf	___flmul@temp,w
  8762     00DC  00BB               	movwf	??___flmul
  8763     00DD  01BC               	clrf	??___flmul+1
  8764     00DE  01BD               	clrf	??___flmul+2
  8765     00DF  01BE               	clrf	??___flmul+3
  8766     00E0  083E               	movf	??___flmul+3,w
  8767     00E1  00C5               	movwf	___flmul@grs+3
  8768     00E2  083D               	movf	??___flmul+2,w
  8769     00E3  00C4               	movwf	___flmul@grs+2
  8770     00E4  083C               	movf	??___flmul+1,w
  8771     00E5  00C3               	movwf	___flmul@grs+1
  8772     00E6  083B               	movf	??___flmul,w
  8773     00E7  00C2               	movwf	___flmul@grs
  8774     00E8                     l4002:
  8775     00E8  084C               	movf	___flmul@temp+1,w
  8776     00E9  00BB               	movwf	??___flmul
  8777     00EA  01BC               	clrf	??___flmul+1
  8778     00EB  01BD               	clrf	??___flmul+2
  8779     00EC  01BE               	clrf	??___flmul+3
  8780     00ED  083E               	movf	??___flmul+3,w
  8781     00EE  00CA               	movwf	___flmul@prod+3
  8782     00EF  083D               	movf	??___flmul+2,w
  8783     00F0  00C9               	movwf	___flmul@prod+2
  8784     00F1  083C               	movf	??___flmul+1,w
  8785     00F2  00C8               	movwf	___flmul@prod+1
  8786     00F3  083B               	movf	??___flmul,w
  8787     00F4  00C7               	movwf	___flmul@prod
  8788     00F5  0834               	movf	___flmul@b+1,w
  8789     00F6  00F2               	movwf	__Umul8_16@multiplicand
  8790     00F7  0838               	movf	___flmul@a+1,w
  8791     00F8  318A  2280  3180   	fcall	__Umul8_16
  8792     00FB  0873               	movf	?__Umul8_16+1,w
  8793     00FC  0020               	movlb	0	; select bank0
  8794     00FD  00CC               	movwf	___flmul@temp+1
  8795     00FE  0872               	movf	?__Umul8_16,w
  8796     00FF  00CB               	movwf	___flmul@temp
  8797     0100                     l4004:
  8798     0100  084B               	movf	___flmul@temp,w
  8799     0101  00BB               	movwf	??___flmul
  8800     0102  01BC               	clrf	??___flmul+1
  8801     0103  01BD               	clrf	??___flmul+2
  8802     0104  01BE               	clrf	??___flmul+3
  8803     0105  083B               	movf	??___flmul,w
  8804     0106  07C2               	addwf	___flmul@grs,f
  8805     0107  083C               	movf	??___flmul+1,w
  8806     0108  3DC3               	addwfc	___flmul@grs+1,f
  8807     0109  083D               	movf	??___flmul+2,w
  8808     010A  3DC4               	addwfc	___flmul@grs+2,f
  8809     010B  083E               	movf	??___flmul+3,w
  8810     010C  3DC5               	addwfc	___flmul@grs+3,f
  8811     010D                     l4006:
  8812     010D  084C               	movf	___flmul@temp+1,w
  8813     010E  00BB               	movwf	??___flmul
  8814     010F  01BC               	clrf	??___flmul+1
  8815     0110  01BD               	clrf	??___flmul+2
  8816     0111  01BE               	clrf	??___flmul+3
  8817     0112  083B               	movf	??___flmul,w
  8818     0113  07C7               	addwf	___flmul@prod,f
  8819     0114  083C               	movf	??___flmul+1,w
  8820     0115  3DC8               	addwfc	___flmul@prod+1,f
  8821     0116  083D               	movf	??___flmul+2,w
  8822     0117  3DC9               	addwfc	___flmul@prod+2,f
  8823     0118  083E               	movf	??___flmul+3,w
  8824     0119  3DCA               	addwfc	___flmul@prod+3,f
  8825     011A  0835               	movf	___flmul@b+2,w
  8826     011B  00F2               	movwf	__Umul8_16@multiplicand
  8827     011C  0837               	movf	___flmul@a,w
  8828     011D  318A  2280  3180   	fcall	__Umul8_16
  8829     0120  0873               	movf	?__Umul8_16+1,w
  8830     0121  0020               	movlb	0	; select bank0
  8831     0122  00CC               	movwf	___flmul@temp+1
  8832     0123  0872               	movf	?__Umul8_16,w
  8833     0124  00CB               	movwf	___flmul@temp
  8834     0125                     l4008:
  8835     0125  084B               	movf	___flmul@temp,w
  8836     0126  00BB               	movwf	??___flmul
  8837     0127  01BC               	clrf	??___flmul+1
  8838     0128  01BD               	clrf	??___flmul+2
  8839     0129  01BE               	clrf	??___flmul+3
  8840     012A  083B               	movf	??___flmul,w
  8841     012B  07C2               	addwf	___flmul@grs,f
  8842     012C  083C               	movf	??___flmul+1,w
  8843     012D  3DC3               	addwfc	___flmul@grs+1,f
  8844     012E  083D               	movf	??___flmul+2,w
  8845     012F  3DC4               	addwfc	___flmul@grs+2,f
  8846     0130  083E               	movf	??___flmul+3,w
  8847     0131  3DC5               	addwfc	___flmul@grs+3,f
  8848     0132                     l4010:
  8849     0132  084C               	movf	___flmul@temp+1,w
  8850     0133  00BB               	movwf	??___flmul
  8851     0134  01BC               	clrf	??___flmul+1
  8852     0135  01BD               	clrf	??___flmul+2
  8853     0136  01BE               	clrf	??___flmul+3
  8854     0137  083B               	movf	??___flmul,w
  8855     0138  07C7               	addwf	___flmul@prod,f
  8856     0139  083C               	movf	??___flmul+1,w
  8857     013A  3DC8               	addwfc	___flmul@prod+1,f
  8858     013B  083D               	movf	??___flmul+2,w
  8859     013C  3DC9               	addwfc	___flmul@prod+2,f
  8860     013D  083E               	movf	??___flmul+3,w
  8861     013E  3DCA               	addwfc	___flmul@prod+3,f
  8862     013F                     l4012:
  8863     013F  3008               	movlw	8
  8864     0140                     u4785:
  8865     0140  35C2               	lslf	___flmul@grs,f
  8866     0141  0DC3               	rlf	___flmul@grs+1,f
  8867     0142  0DC4               	rlf	___flmul@grs+2,f
  8868     0143  0DC5               	rlf	___flmul@grs+3,f
  8869     0144  0B89               	decfsz	9,f
  8870     0145  2940               	goto	u4785
  8871     0146                     l4014:
  8872     0146  0834               	movf	___flmul@b+1,w
  8873     0147  00F2               	movwf	__Umul8_16@multiplicand
  8874     0148  0837               	movf	___flmul@a,w
  8875     0149  318A  2280  3180   	fcall	__Umul8_16
  8876     014C  0873               	movf	?__Umul8_16+1,w
  8877     014D  0020               	movlb	0	; select bank0
  8878     014E  00CC               	movwf	___flmul@temp+1
  8879     014F  0872               	movf	?__Umul8_16,w
  8880     0150  00CB               	movwf	___flmul@temp
  8881     0151                     l4016:
  8882     0151  084B               	movf	___flmul@temp,w
  8883     0152  07C2               	addwf	___flmul@grs,f
  8884     0153  084C               	movf	___flmul@temp+1,w
  8885     0154  3DC3               	addwfc	___flmul@grs+1,f
  8886     0155  3000               	movlw	0
  8887     0156  3DC4               	addwfc	___flmul@grs+2,f
  8888     0157  3DC5               	addwfc	___flmul@grs+3,f
  8889     0158                     l4018:
  8890     0158  0833               	movf	___flmul@b,w
  8891     0159  00F2               	movwf	__Umul8_16@multiplicand
  8892     015A  0838               	movf	___flmul@a+1,w
  8893     015B  318A  2280  3180   	fcall	__Umul8_16
  8894     015E  0873               	movf	?__Umul8_16+1,w
  8895     015F  0020               	movlb	0	; select bank0
  8896     0160  00CC               	movwf	___flmul@temp+1
  8897     0161  0872               	movf	?__Umul8_16,w
  8898     0162  00CB               	movwf	___flmul@temp
  8899     0163                     l4020:
  8900     0163  084B               	movf	___flmul@temp,w
  8901     0164  07C2               	addwf	___flmul@grs,f
  8902     0165  084C               	movf	___flmul@temp+1,w
  8903     0166  3DC3               	addwfc	___flmul@grs+1,f
  8904     0167  3000               	movlw	0
  8905     0168  3DC4               	addwfc	___flmul@grs+2,f
  8906     0169  3DC5               	addwfc	___flmul@grs+3,f
  8907     016A                     l4022:
  8908     016A  3008               	movlw	8
  8909     016B                     u4795:
  8910     016B  35C2               	lslf	___flmul@grs,f
  8911     016C  0DC3               	rlf	___flmul@grs+1,f
  8912     016D  0DC4               	rlf	___flmul@grs+2,f
  8913     016E  0DC5               	rlf	___flmul@grs+3,f
  8914     016F  0B89               	decfsz	9,f
  8915     0170  296B               	goto	u4795
  8916     0171  0833               	movf	___flmul@b,w
  8917     0172  00F2               	movwf	__Umul8_16@multiplicand
  8918     0173  0837               	movf	___flmul@a,w
  8919     0174  318A  2280  3180   	fcall	__Umul8_16
  8920     0177  0873               	movf	?__Umul8_16+1,w
  8921     0178  0020               	movlb	0	; select bank0
  8922     0179  00CC               	movwf	___flmul@temp+1
  8923     017A  0872               	movf	?__Umul8_16,w
  8924     017B  00CB               	movwf	___flmul@temp
  8925     017C                     l4024:
  8926     017C  084B               	movf	___flmul@temp,w
  8927     017D  07C2               	addwf	___flmul@grs,f
  8928     017E  084C               	movf	___flmul@temp+1,w
  8929     017F  3DC3               	addwfc	___flmul@grs+1,f
  8930     0180  3000               	movlw	0
  8931     0181  3DC4               	addwfc	___flmul@grs+2,f
  8932     0182  3DC5               	addwfc	___flmul@grs+3,f
  8933     0183                     l4026:
  8934     0183  0834               	movf	___flmul@b+1,w
  8935     0184  00F2               	movwf	__Umul8_16@multiplicand
  8936     0185  0839               	movf	___flmul@a+2,w
  8937     0186  318A  2280  3180   	fcall	__Umul8_16
  8938     0189  0873               	movf	?__Umul8_16+1,w
  8939     018A  0020               	movlb	0	; select bank0
  8940     018B  00CC               	movwf	___flmul@temp+1
  8941     018C  0872               	movf	?__Umul8_16,w
  8942     018D  00CB               	movwf	___flmul@temp
  8943     018E  084B               	movf	___flmul@temp,w
  8944     018F  07C7               	addwf	___flmul@prod,f
  8945     0190  084C               	movf	___flmul@temp+1,w
  8946     0191  3DC8               	addwfc	___flmul@prod+1,f
  8947     0192  3000               	movlw	0
  8948     0193  3DC9               	addwfc	___flmul@prod+2,f
  8949     0194  3DCA               	addwfc	___flmul@prod+3,f
  8950     0195                     l4028:
  8951     0195  0835               	movf	___flmul@b+2,w
  8952     0196  00F2               	movwf	__Umul8_16@multiplicand
  8953     0197  0838               	movf	___flmul@a+1,w
  8954     0198  318A  2280  3180   	fcall	__Umul8_16
  8955     019B  0873               	movf	?__Umul8_16+1,w
  8956     019C  0020               	movlb	0	; select bank0
  8957     019D  00CC               	movwf	___flmul@temp+1
  8958     019E  0872               	movf	?__Umul8_16,w
  8959     019F  00CB               	movwf	___flmul@temp
  8960     01A0                     l4030:
  8961     01A0  084B               	movf	___flmul@temp,w
  8962     01A1  07C7               	addwf	___flmul@prod,f
  8963     01A2  084C               	movf	___flmul@temp+1,w
  8964     01A3  3DC8               	addwfc	___flmul@prod+1,f
  8965     01A4  3000               	movlw	0
  8966     01A5  3DC9               	addwfc	___flmul@prod+2,f
  8967     01A6  3DCA               	addwfc	___flmul@prod+3,f
  8968     01A7  0835               	movf	___flmul@b+2,w
  8969     01A8  00F2               	movwf	__Umul8_16@multiplicand
  8970     01A9  0839               	movf	___flmul@a+2,w
  8971     01AA  318A  2280  3180   	fcall	__Umul8_16
  8972     01AD  0873               	movf	?__Umul8_16+1,w
  8973     01AE  0020               	movlb	0	; select bank0
  8974     01AF  00CC               	movwf	___flmul@temp+1
  8975     01B0  0872               	movf	?__Umul8_16,w
  8976     01B1  00CB               	movwf	___flmul@temp
  8977     01B2                     l4032:
  8978     01B2  084B               	movf	___flmul@temp,w
  8979     01B3  00BB               	movwf	??___flmul
  8980     01B4  084C               	movf	___flmul@temp+1,w
  8981     01B5  00BC               	movwf	??___flmul+1
  8982     01B6  01BD               	clrf	??___flmul+2
  8983     01B7  01BE               	clrf	??___flmul+3
  8984     01B8  3008               	movlw	8
  8985     01B9                     u4805:
  8986     01B9  35BB               	lslf	??___flmul,f
  8987     01BA  0DBC               	rlf	??___flmul+1,f
  8988     01BB  0DBD               	rlf	??___flmul+2,f
  8989     01BC  0DBE               	rlf	??___flmul+3,f
  8990     01BD                     u4800:
  8991     01BD  0B89               	decfsz	9,f
  8992     01BE  29B9               	goto	u4805
  8993     01BF  083B               	movf	??___flmul,w
  8994     01C0  07C7               	addwf	___flmul@prod,f
  8995     01C1  083C               	movf	??___flmul+1,w
  8996     01C2  3DC8               	addwfc	___flmul@prod+1,f
  8997     01C3  083D               	movf	??___flmul+2,w
  8998     01C4  3DC9               	addwfc	___flmul@prod+2,f
  8999     01C5  083E               	movf	??___flmul+3,w
  9000     01C6  3DCA               	addwfc	___flmul@prod+3,f
  9001     01C7                     l4034:
  9002     01C7  0842               	movf	___flmul@grs,w
  9003     01C8  00BB               	movwf	??___flmul
  9004     01C9  0843               	movf	___flmul@grs+1,w
  9005     01CA  00BC               	movwf	??___flmul+1
  9006     01CB  0844               	movf	___flmul@grs+2,w
  9007     01CC  00BD               	movwf	??___flmul+2
  9008     01CD  0845               	movf	___flmul@grs+3,w
  9009     01CE  00BE               	movwf	??___flmul+3
  9010     01CF  3018               	movlw	24
  9011     01D0                     u4815:
  9012     01D0  36BE               	lsrf	??___flmul+3,f
  9013     01D1  0CBD               	rrf	??___flmul+2,f
  9014     01D2  0CBC               	rrf	??___flmul+1,f
  9015     01D3  0CBB               	rrf	??___flmul,f
  9016     01D4                     u4810:
  9017     01D4  0B89               	decfsz	9,f
  9018     01D5  29D0               	goto	u4815
  9019     01D6  083B               	movf	??___flmul,w
  9020     01D7  07C7               	addwf	___flmul@prod,f
  9021     01D8  083C               	movf	??___flmul+1,w
  9022     01D9  3DC8               	addwfc	___flmul@prod+1,f
  9023     01DA  083D               	movf	??___flmul+2,w
  9024     01DB  3DC9               	addwfc	___flmul@prod+2,f
  9025     01DC  083E               	movf	??___flmul+3,w
  9026     01DD  3DCA               	addwfc	___flmul@prod+3,f
  9027     01DE                     l4036:
  9028     01DE  3008               	movlw	8
  9029     01DF                     u4825:
  9030     01DF  35C2               	lslf	___flmul@grs,f
  9031     01E0  0DC3               	rlf	___flmul@grs+1,f
  9032     01E1  0DC4               	rlf	___flmul@grs+2,f
  9033     01E2  0DC5               	rlf	___flmul@grs+3,f
  9034     01E3  0B89               	decfsz	9,f
  9035     01E4  29DF               	goto	u4825
  9036     01E5                     l4038:
  9037     01E5  0846               	movf	___flmul@bexp,w
  9038     01E6  0741               	addwf	___flmul@aexp,w
  9039     01E7  00BB               	movwf	??___flmul
  9040     01E8  01BC               	clrf	??___flmul+1
  9041     01E9  0DBC               	rlf	??___flmul+1,f
  9042     01EA  083B               	movf	??___flmul,w
  9043     01EB  3E82               	addlw	130
  9044     01EC  00CB               	movwf	___flmul@temp
  9045     01ED  30FF               	movlw	255
  9046     01EE  3D3C               	addwfc	??___flmul+1,w
  9047     01EF  00CC               	movwf	___flmul@temp+1
  9048     01F0  2A08               	goto	l4050
  9049     01F1                     l4040:
  9050     01F1  3001               	movlw	1
  9051     01F2                     u4835:
  9052     01F2  35C7               	lslf	___flmul@prod,f
  9053     01F3  0DC8               	rlf	___flmul@prod+1,f
  9054     01F4  0DC9               	rlf	___flmul@prod+2,f
  9055     01F5  0DCA               	rlf	___flmul@prod+3,f
  9056     01F6  0B89               	decfsz	9,f
  9057     01F7  29F2               	goto	u4835
  9058     01F8                     l4042:
  9059     01F8  1FC5               	btfss	___flmul@grs+3,7
  9060     01F9  29FB               	goto	u4841
  9061     01FA  29FC               	goto	u4840
  9062     01FB                     u4841:
  9063     01FB  29FD               	goto	l4046
  9064     01FC                     u4840:
  9065     01FC                     l4044:
  9066     01FC  1447               	bsf	___flmul@prod,0
  9067     01FD                     l4046:
  9068     01FD  3001               	movlw	1
  9069     01FE                     u4855:
  9070     01FE  35C2               	lslf	___flmul@grs,f
  9071     01FF  0DC3               	rlf	___flmul@grs+1,f
  9072     0200  0DC4               	rlf	___flmul@grs+2,f
  9073     0201  0DC5               	rlf	___flmul@grs+3,f
  9074     0202  0B89               	decfsz	9,f
  9075     0203  29FE               	goto	u4855
  9076     0204                     l4048:
  9077     0204  30FF               	movlw	255
  9078     0205  07CB               	addwf	___flmul@temp,f
  9079     0206  30FF               	movlw	255
  9080     0207  3DCC               	addwfc	___flmul@temp+1,f
  9081     0208                     l4050:
  9082     0208  1FC9               	btfss	___flmul@prod+2,7
  9083     0209  2A0B               	goto	u4861
  9084     020A  2A0C               	goto	u4860
  9085     020B                     u4861:
  9086     020B  29F1               	goto	l4040
  9087     020C                     u4860:
  9088     020C                     l4052:
  9089     020C  01C1               	clrf	___flmul@aexp
  9090     020D                     l4054:
  9091     020D  1FC5               	btfss	___flmul@grs+3,7
  9092     020E  2A10               	goto	u4871
  9093     020F  2A11               	goto	u4870
  9094     0210                     u4871:
  9095     0210  2A2D               	goto	l4062
  9096     0211                     u4870:
  9097     0211                     l4056:
  9098     0211  30FF               	movlw	255
  9099     0212  0542               	andwf	___flmul@grs,w
  9100     0213  00BB               	movwf	??___flmul
  9101     0214  30FF               	movlw	255
  9102     0215  0543               	andwf	___flmul@grs+1,w
  9103     0216  00BC               	movwf	??___flmul+1
  9104     0217  30FF               	movlw	255
  9105     0218  0544               	andwf	___flmul@grs+2,w
  9106     0219  00BD               	movwf	??___flmul+2
  9107     021A  307F               	movlw	127
  9108     021B  0545               	andwf	___flmul@grs+3,w
  9109     021C  00BE               	movwf	??___flmul+3
  9110     021D  083E               	movf	??___flmul+3,w
  9111     021E  043D               	iorwf	??___flmul+2,w
  9112     021F  043C               	iorwf	??___flmul+1,w
  9113     0220  043B               	iorwf	??___flmul,w
  9114     0221  1903               	skipnz
  9115     0222  2A24               	goto	u4881
  9116     0223  2A25               	goto	u4880
  9117     0224                     u4881:
  9118     0224  2A28               	goto	l1267
  9119     0225                     u4880:
  9120     0225                     l4058:
  9121     0225  3001               	movlw	1
  9122     0226  00C1               	movwf	___flmul@aexp
  9123     0227  2A2D               	goto	l4062
  9124     0228                     l1267:
  9125     0228  1C47               	btfss	___flmul@prod,0
  9126     0229  2A2B               	goto	u4891
  9127     022A  2A2C               	goto	u4890
  9128     022B                     u4891:
  9129     022B  2A2D               	goto	l4062
  9130     022C                     u4890:
  9131     022C  2A25               	goto	l4058
  9132     022D                     l4062:
  9133     022D  0841               	movf	___flmul@aexp,w
  9134     022E  1903               	btfsc	3,2
  9135     022F  2A31               	goto	u4901
  9136     0230  2A32               	goto	u4900
  9137     0231                     u4901:
  9138     0231  2A58               	goto	l4072
  9139     0232                     u4900:
  9140     0232                     l4064:
  9141     0232  3001               	movlw	1
  9142     0233  07C7               	addwf	___flmul@prod,f
  9143     0234  3000               	movlw	0
  9144     0235  3DC8               	addwfc	___flmul@prod+1,f
  9145     0236  3DC9               	addwfc	___flmul@prod+2,f
  9146     0237  3DCA               	addwfc	___flmul@prod+3,f
  9147     0238                     l4066:
  9148     0238  1C4A               	btfss	___flmul@prod+3,0
  9149     0239  2A3B               	goto	u4911
  9150     023A  2A3C               	goto	u4910
  9151     023B                     u4911:
  9152     023B  2A58               	goto	l4072
  9153     023C                     u4910:
  9154     023C                     l4068:
  9155     023C  0847               	movf	___flmul@prod,w
  9156     023D  00BB               	movwf	??___flmul
  9157     023E  0848               	movf	___flmul@prod+1,w
  9158     023F  00BC               	movwf	??___flmul+1
  9159     0240  0849               	movf	___flmul@prod+2,w
  9160     0241  00BD               	movwf	??___flmul+2
  9161     0242  084A               	movf	___flmul@prod+3,w
  9162     0243  00BE               	movwf	??___flmul+3
  9163     0244  3001               	movlw	1
  9164     0245  00BF               	movwf	??___flmul+4
  9165     0246                     u4925:
  9166     0246  37BE               	asrf	??___flmul+3,f
  9167     0247  0CBD               	rrf	??___flmul+2,f
  9168     0248  0CBC               	rrf	??___flmul+1,f
  9169     0249  0CBB               	rrf	??___flmul,f
  9170     024A                     u4920:
  9171     024A  0BBF               	decfsz	??___flmul+4,f
  9172     024B  2A46               	goto	u4925
  9173     024C  083E               	movf	??___flmul+3,w
  9174     024D  00CA               	movwf	___flmul@prod+3
  9175     024E  083D               	movf	??___flmul+2,w
  9176     024F  00C9               	movwf	___flmul@prod+2
  9177     0250  083C               	movf	??___flmul+1,w
  9178     0251  00C8               	movwf	___flmul@prod+1
  9179     0252  083B               	movf	??___flmul,w
  9180     0253  00C7               	movwf	___flmul@prod
  9181     0254                     l4070:
  9182     0254  3001               	movlw	1
  9183     0255  07CB               	addwf	___flmul@temp,f
  9184     0256  3000               	movlw	0
  9185     0257  3DCC               	addwfc	___flmul@temp+1,f
  9186     0258                     l4072:
  9187     0258  084C               	movf	___flmul@temp+1,w
  9188     0259  3A80               	xorlw	128
  9189     025A  00BB               	movwf	??___flmul
  9190     025B  3080               	movlw	128
  9191     025C  023B               	subwf	??___flmul,w
  9192     025D  1D03               	skipz
  9193     025E  2A61               	goto	u4935
  9194     025F  30FF               	movlw	255
  9195     0260  024B               	subwf	___flmul@temp,w
  9196     0261                     u4935:
  9197     0261  1C03               	skipc
  9198     0262  2A64               	goto	u4931
  9199     0263  2A65               	goto	u4930
  9200     0264                     u4931:
  9201     0264  2A6F               	goto	l4076
  9202     0265                     u4930:
  9203     0265                     l4074:
  9204     0265  307F               	movlw	127
  9205     0266  0020               	movlb	0	; select bank0
  9206     0267  00CA               	movwf	___flmul@prod+3
  9207     0268  3080               	movlw	128
  9208     0269  00C9               	movwf	___flmul@prod+2
  9209     026A  3000               	movlw	0
  9210     026B  00C8               	movwf	___flmul@prod+1
  9211     026C  3000               	movlw	0
  9212     026D  00C7               	movwf	___flmul@prod
  9213     026E  2AA0               	goto	l1273
  9214     026F                     l4076:
  9215     026F  0020               	movlb	0	; select bank0
  9216     0270  084C               	movf	___flmul@temp+1,w
  9217     0271  3A80               	xorlw	128
  9218     0272  00BB               	movwf	??___flmul
  9219     0273  3080               	movlw	128
  9220     0274  023B               	subwf	??___flmul,w
  9221     0275  1D03               	skipz
  9222     0276  2A79               	goto	u4945
  9223     0277  3001               	movlw	1
  9224     0278  024B               	subwf	___flmul@temp,w
  9225     0279                     u4945:
  9226     0279  1803               	skipnc
  9227     027A  2A7C               	goto	u4941
  9228     027B  2A7D               	goto	u4940
  9229     027C                     u4941:
  9230     027C  2A88               	goto	l4082
  9231     027D                     u4940:
  9232     027D                     l4078:
  9233     027D  3000               	movlw	0
  9234     027E  0020               	movlb	0	; select bank0
  9235     027F  00CA               	movwf	___flmul@prod+3
  9236     0280  3000               	movlw	0
  9237     0281  00C9               	movwf	___flmul@prod+2
  9238     0282  3000               	movlw	0
  9239     0283  00C8               	movwf	___flmul@prod+1
  9240     0284  3000               	movlw	0
  9241     0285  00C7               	movwf	___flmul@prod
  9242     0286                     l4080:
  9243     0286  01C0               	clrf	___flmul@sign
  9244     0287  2AA0               	goto	l1273
  9245     0288                     l4082:
  9246     0288  0020               	movlb	0	; select bank0
  9247     0289  084B               	movf	___flmul@temp,w
  9248     028A  00C6               	movwf	___flmul@bexp
  9249     028B  30FF               	movlw	255
  9250     028C  05C7               	andwf	___flmul@prod,f
  9251     028D  30FF               	movlw	255
  9252     028E  05C8               	andwf	___flmul@prod+1,f
  9253     028F  307F               	movlw	127
  9254     0290  05C9               	andwf	___flmul@prod+2,f
  9255     0291  3000               	movlw	0
  9256     0292  05CA               	andwf	___flmul@prod+3,f
  9257     0293                     l4084:
  9258     0293  1C46               	btfss	___flmul@bexp,0
  9259     0294  2A96               	goto	u4951
  9260     0295  2A97               	goto	u4950
  9261     0296                     u4951:
  9262     0296  2A98               	goto	l4088
  9263     0297                     u4950:
  9264     0297                     l4086:
  9265     0297  17C9               	bsf	___flmul@prod+2,7
  9266     0298                     l4088:
  9267     0298  0846               	movf	___flmul@bexp,w
  9268     0299  00BB               	movwf	??___flmul
  9269     029A  3001               	movlw	1
  9270     029B                     u4965:
  9271     029B  36BB               	lsrf	??___flmul,f
  9272     029C  0B89               	decfsz	9,f
  9273     029D  2A9B               	goto	u4965
  9274     029E  083B               	movf	??___flmul,w
  9275     029F  00CA               	movwf	___flmul@prod+3
  9276     02A0                     l1273:
  9277     02A0  0840               	movf	___flmul@sign,w
  9278     02A1  04CA               	iorwf	___flmul@prod+3,f
  9279     02A2                     l4090:
  9280     02A2  084A               	movf	___flmul@prod+3,w
  9281     02A3  00B6               	movwf	?___flmul+3
  9282     02A4  0849               	movf	___flmul@prod+2,w
  9283     02A5  00B5               	movwf	?___flmul+2
  9284     02A6  0848               	movf	___flmul@prod+1,w
  9285     02A7  00B4               	movwf	?___flmul+1
  9286     02A8  0847               	movf	___flmul@prod,w
  9287     02A9  00B3               	movwf	?___flmul
  9288     02AA                     l1261:
  9289     02AA  0008               	return
  9290     02AB                     __end_of___flmul:
  9291                           
  9292                           	psect	text43
  9293     0A80                     __ptext43:	
  9294 ;; *************** function __Umul8_16 *****************
  9295 ;; Defined at:
  9296 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul8_16.c"
  9297 ;; Parameters:    Size  Location     Type
  9298 ;;  multiplier      1    wreg     unsigned char 
  9299 ;;  multiplicand    1    2[COMMON] unsigned char 
  9300 ;; Auto vars:     Size  Location     Type
  9301 ;;  multiplier      1    4[BANK0 ] unsigned char 
  9302 ;;  word_mpld       2    2[BANK0 ] unsigned short 
  9303 ;;  product         2    0[BANK0 ] unsigned short 
  9304 ;; Return value:  Size  Location     Type
  9305 ;;                  2    2[COMMON] unsigned int 
  9306 ;; Registers used:
  9307 ;;		wreg, status,2, status,0
  9308 ;; Tracked objects:
  9309 ;;		On entry : 0/0
  9310 ;;		On exit  : 0/0
  9311 ;;		Unchanged: 0/0
  9312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9313 ;;      Params:         2       0       0       0       0       0
  9314 ;;      Locals:         0       5       0       0       0       0
  9315 ;;      Temps:          2       0       0       0       0       0
  9316 ;;      Totals:         4       5       0       0       0       0
  9317 ;;Total ram usage:        9 bytes
  9318 ;; Hardware stack levels used: 1
  9319 ;; Hardware stack levels required when called: 4
  9320 ;; This function calls:
  9321 ;;		Nothing
  9322 ;; This function is called by:
  9323 ;;		___flmul
  9324 ;; This function uses a non-reentrant model
  9325 ;;
  9326                           
  9327     0A80                     __Umul8_16:	
  9328                           ;psect for function __Umul8_16
  9329                           
  9330                           
  9331                           ;incstack = 0
  9332                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9333                           ;__Umul8_16@multiplier stored from wreg
  9334     0A80  0020               	movlb	0	; select bank0
  9335     0A81  00A4               	movwf	__Umul8_16@multiplier
  9336     0A82                     l3852:
  9337     0A82  01A0               	clrf	__Umul8_16@product
  9338     0A83  01A1               	clrf	__Umul8_16@product+1
  9339     0A84                     l3854:
  9340     0A84  0872               	movf	__Umul8_16@multiplicand,w
  9341     0A85  00F4               	movwf	??__Umul8_16
  9342     0A86  01F5               	clrf	??__Umul8_16+1
  9343     0A87  0874               	movf	??__Umul8_16,w
  9344     0A88  00A2               	movwf	__Umul8_16@word_mpld
  9345     0A89  0875               	movf	??__Umul8_16+1,w
  9346     0A8A  00A3               	movwf	__Umul8_16@word_mpld+1
  9347     0A8B                     l3856:
  9348     0A8B  1C24               	btfss	__Umul8_16@multiplier,0
  9349     0A8C  2A8E               	goto	u4481
  9350     0A8D  2A8F               	goto	u4480
  9351     0A8E                     u4481:
  9352     0A8E  2A93               	goto	l1280
  9353     0A8F                     u4480:
  9354     0A8F                     l3858:
  9355     0A8F  0822               	movf	__Umul8_16@word_mpld,w
  9356     0A90  07A0               	addwf	__Umul8_16@product,f
  9357     0A91  0823               	movf	__Umul8_16@word_mpld+1,w
  9358     0A92  3DA1               	addwfc	__Umul8_16@product+1,f
  9359     0A93                     l1280:
  9360     0A93  3001               	movlw	1
  9361     0A94                     u4495:
  9362     0A94  35A2               	lslf	__Umul8_16@word_mpld,f
  9363     0A95  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  9364     0A96  0B89               	decfsz	9,f
  9365     0A97  2A94               	goto	u4495
  9366     0A98  1003               	clrc
  9367     0A99  0CA4               	rrf	__Umul8_16@multiplier,f
  9368     0A9A                     l3860:
  9369     0A9A  0824               	movf	__Umul8_16@multiplier,w
  9370     0A9B  1D03               	btfss	3,2
  9371     0A9C  2A9E               	goto	u4501
  9372     0A9D  2A9F               	goto	u4500
  9373     0A9E                     u4501:
  9374     0A9E  2A8B               	goto	l3856
  9375     0A9F                     u4500:
  9376     0A9F                     l3862:
  9377     0A9F  0821               	movf	__Umul8_16@product+1,w
  9378     0AA0  00F3               	movwf	?__Umul8_16+1
  9379     0AA1  0820               	movf	__Umul8_16@product,w
  9380     0AA2  00F2               	movwf	?__Umul8_16
  9381     0AA3                     l1282:
  9382     0AA3  0008               	return
  9383     0AA4                     __end_of__Umul8_16:
  9384                           
  9385                           	psect	text44
  9386     099E                     __ptext44:	
  9387 ;; *************** function _AbreValvula *****************
  9388 ;; Defined at:
  9389 ;;		line 256 in file "main.c"
  9390 ;; Parameters:    Size  Location     Type
  9391 ;;		None
  9392 ;; Auto vars:     Size  Location     Type
  9393 ;;		None
  9394 ;; Return value:  Size  Location     Type
  9395 ;;                  1    wreg      void 
  9396 ;; Registers used:
  9397 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9398 ;; Tracked objects:
  9399 ;;		On entry : 0/0
  9400 ;;		On exit  : 0/0
  9401 ;;		Unchanged: 0/0
  9402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9403 ;;      Params:         0       0       0       0       0       0
  9404 ;;      Locals:         0       0       0       0       0       0
  9405 ;;      Temps:          0       0       0       0       0       0
  9406 ;;      Totals:         0       0       0       0       0       0
  9407 ;;Total ram usage:        0 bytes
  9408 ;; Hardware stack levels used: 1
  9409 ;; Hardware stack levels required when called: 6
  9410 ;; This function calls:
  9411 ;;		_LeituraValvula
  9412 ;;		_MoveValvula
  9413 ;; This function is called by:
  9414 ;;		_main
  9415 ;; This function uses a non-reentrant model
  9416 ;;
  9417                           
  9418     099E                     _AbreValvula:	
  9419                           ;psect for function _AbreValvula
  9420                           
  9421     099E                     l4260:	
  9422                           ;incstack = 0
  9423                           ; Regs used in _AbreValvula: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9424                           
  9425                           
  9426                           ;main.c: 257:     while (passo_atual < 420 && !LeituraValvula(0)) {
  9427     099E  29A3               	goto	l4264
  9428     099F                     l4262:
  9429                           
  9430                           ;main.c: 258:         MoveValvula(1);
  9431     099F  3001               	movlw	1
  9432     09A0  318C  24A3  3189   	fcall	_MoveValvula
  9433     09A3                     l4264:
  9434                           
  9435                           ;main.c: 257:     while (passo_atual < 420 && !LeituraValvula(0)) {
  9436     09A3  3001               	movlw	1
  9437     09A4  0021               	movlb	1	; select bank1
  9438     09A5  0245               	subwf	(_passo_atual+1)^(0+128),w
  9439     09A6  30A4               	movlw	164
  9440     09A7  1903               	skipnz
  9441     09A8  0244               	subwf	_passo_atual^(0+128),w
  9442     09A9  1803               	skipnc
  9443     09AA  29AC               	goto	u5321
  9444     09AB  29AD               	goto	u5320
  9445     09AC                     u5321:
  9446     09AC  29B6               	goto	l707
  9447     09AD                     u5320:
  9448     09AD                     l4266:
  9449     09AD  3000               	movlw	0
  9450     09AE  318B  2381  3189   	fcall	_LeituraValvula
  9451     09B1  3A00               	xorlw	0
  9452     09B2  1903               	skipnz
  9453     09B3  29B5               	goto	u5331
  9454     09B4  29B6               	goto	u5330
  9455     09B5                     u5331:
  9456     09B5  299F               	goto	l4262
  9457     09B6                     u5330:
  9458     09B6                     l707:
  9459                           
  9460                           ;main.c: 260:     valvula_aberta = 1;
  9461     09B6  3001               	movlw	1
  9462     09B7  0021               	movlb	1	; select bank1
  9463     09B8  00D1               	movwf	_valvula_aberta^(0+128)
  9464     09B9                     l708:
  9465     09B9  0008               	return
  9466     09BA                     __end_of_AbreValvula:
  9467                           
  9468                           	psect	text45
  9469     0B81                     __ptext45:	
  9470 ;; *************** function _LeituraValvula *****************
  9471 ;; Defined at:
  9472 ;;		line 209 in file "main.c"
  9473 ;; Parameters:    Size  Location     Type
  9474 ;;  forcar_calib    1    wreg     _Bool 
  9475 ;; Auto vars:     Size  Location     Type
  9476 ;;  forcar_calib    1    0[BANK0 ] _Bool 
  9477 ;;  valor_sensor    2    1[BANK0 ] unsigned short 
  9478 ;; Return value:  Size  Location     Type
  9479 ;;                  1    wreg      _Bool 
  9480 ;; Registers used:
  9481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9482 ;; Tracked objects:
  9483 ;;		On entry : 0/0
  9484 ;;		On exit  : 0/0
  9485 ;;		Unchanged: 0/0
  9486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9487 ;;      Params:         0       0       0       0       0       0
  9488 ;;      Locals:         0       3       0       0       0       0
  9489 ;;      Temps:          1       0       0       0       0       0
  9490 ;;      Totals:         1       3       0       0       0       0
  9491 ;;Total ram usage:        4 bytes
  9492 ;; Hardware stack levels used: 1
  9493 ;; Hardware stack levels required when called: 5
  9494 ;; This function calls:
  9495 ;;		_ADC_GetConversion
  9496 ;;		_MoveValvula
  9497 ;; This function is called by:
  9498 ;;		_main
  9499 ;;		_AbreValvula
  9500 ;; This function uses a non-reentrant model
  9501 ;;
  9502                           
  9503     0B81                     _LeituraValvula:	
  9504                           ;psect for function _LeituraValvula
  9505                           
  9506                           
  9507                           ;incstack = 0
  9508                           ; Regs used in _LeituraValvula: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9509                           ;LeituraValvula@forcar_calibracao stored from wreg
  9510     0B81  0020               	movlb	0	; select bank0
  9511     0B82  00A0               	movwf	LeituraValvula@forcar_calibracao
  9512     0B83                     l4134:
  9513                           
  9514                           ;main.c: 210:     uint16_t valor_sensor = ADC_GetConversion(Lim);
  9515     0B83  3000               	movlw	0
  9516     0B84  3189  2168  318B   	fcall	_ADC_GetConversion
  9517     0B87  0873               	movf	?_ADC_GetConversion+1,w
  9518     0B88  0020               	movlb	0	; select bank0
  9519     0B89  00A2               	movwf	LeituraValvula@valor_sensor+1
  9520     0B8A  0872               	movf	?_ADC_GetConversion,w
  9521     0B8B  00A1               	movwf	LeituraValvula@valor_sensor
  9522     0B8C                     l4136:
  9523                           
  9524                           ;main.c: 212:     if (forcar_calibracao || (!calibracao&& valor_sensor < 500)) {
  9525     0B8C  0820               	movf	LeituraValvula@forcar_calibracao,w
  9526     0B8D  1D03               	btfss	3,2
  9527     0B8E  2B90               	goto	u5111
  9528     0B8F  2B91               	goto	u5110
  9529     0B90                     u5111:
  9530     0B90  2BB6               	goto	l4148
  9531     0B91                     u5110:
  9532     0B91                     l4138:
  9533     0B91  0021               	movlb	1	; select bank1
  9534     0B92  0850               	movf	_calibracao^(0+128),w
  9535     0B93  1D03               	btfss	3,2
  9536     0B94  2B96               	goto	u5121
  9537     0B95  2B97               	goto	u5120
  9538     0B96                     u5121:
  9539     0B96  2BCE               	goto	l4156
  9540     0B97                     u5120:
  9541     0B97                     l4140:
  9542     0B97  3001               	movlw	1
  9543     0B98  0020               	movlb	0	; select bank0
  9544     0B99  0222               	subwf	LeituraValvula@valor_sensor+1,w
  9545     0B9A  30F4               	movlw	244
  9546     0B9B  1903               	skipnz
  9547     0B9C  0221               	subwf	LeituraValvula@valor_sensor,w
  9548     0B9D  1803               	skipnc
  9549     0B9E  2BA0               	goto	u5131
  9550     0B9F  2BA1               	goto	u5130
  9551     0BA0                     u5131:
  9552     0BA0  2BCE               	goto	l4156
  9553     0BA1                     u5130:
  9554     0BA1  2BB6               	goto	l4148
  9555     0BA2                     l4142:
  9556                           
  9557                           ;main.c: 216:             MoveValvula(1);
  9558     0BA2  3001               	movlw	1
  9559     0BA3  318C  24A3  318B   	fcall	_MoveValvula
  9560     0BA6                     l4144:
  9561                           
  9562                           ;main.c: 217:             _delay((unsigned long)((6)*(16000000/4000.0)));
  9563     0BA6  3020               	movlw	32
  9564     0BA7  00F6               	movwf	??_LeituraValvula
  9565     0BA8  302A               	movlw	42
  9566     0BA9                     u5467:
  9567     0BA9  0B89               	decfsz	9,f
  9568     0BAA  2BA9               	goto	u5467
  9569     0BAB  0BF6               	decfsz	??_LeituraValvula,f
  9570     0BAC  2BA9               	goto	u5467
  9571     0BAD                     l4146:
  9572                           
  9573                           ;main.c: 218:             valor_sensor = ADC_GetConversion(Lim);
  9574     0BAD  3000               	movlw	0
  9575     0BAE  3189  2168  318B   	fcall	_ADC_GetConversion
  9576     0BB1  0873               	movf	?_ADC_GetConversion+1,w
  9577     0BB2  0020               	movlb	0	; select bank0
  9578     0BB3  00A2               	movwf	LeituraValvula@valor_sensor+1
  9579     0BB4  0872               	movf	?_ADC_GetConversion,w
  9580     0BB5  00A1               	movwf	LeituraValvula@valor_sensor
  9581     0BB6                     l4148:
  9582                           
  9583                           ;main.c: 215:         while (valor_sensor < 500 && passo_atual < 420) {
  9584     0BB6  3001               	movlw	1
  9585     0BB7  0222               	subwf	LeituraValvula@valor_sensor+1,w
  9586     0BB8  30F4               	movlw	244
  9587     0BB9  1903               	skipnz
  9588     0BBA  0221               	subwf	LeituraValvula@valor_sensor,w
  9589     0BBB  1803               	skipnc
  9590     0BBC  2BBE               	goto	u5141
  9591     0BBD  2BBF               	goto	u5140
  9592     0BBE                     u5141:
  9593     0BBE  2BC9               	goto	l4152
  9594     0BBF                     u5140:
  9595     0BBF                     l4150:
  9596     0BBF  3001               	movlw	1
  9597     0BC0  0021               	movlb	1	; select bank1
  9598     0BC1  0245               	subwf	(_passo_atual+1)^(0+128),w
  9599     0BC2  30A4               	movlw	164
  9600     0BC3  1903               	skipnz
  9601     0BC4  0244               	subwf	_passo_atual^(0+128),w
  9602     0BC5  1C03               	skipc
  9603     0BC6  2BC8               	goto	u5151
  9604     0BC7  2BC9               	goto	u5150
  9605     0BC8                     u5151:
  9606     0BC8  2BA2               	goto	l4142
  9607     0BC9                     u5150:
  9608     0BC9                     l4152:
  9609                           
  9610                           ;main.c: 221:         passo_atual = 0;
  9611     0BC9  0021               	movlb	1	; select bank1
  9612     0BCA  01C4               	clrf	_passo_atual^(0+128)
  9613     0BCB  01C5               	clrf	(_passo_atual+1)^(0+128)
  9614     0BCC                     l4154:
  9615                           
  9616                           ;main.c: 222:         calibracao= 1;
  9617     0BCC  3001               	movlw	1
  9618     0BCD  00D0               	movwf	_calibracao^(0+128)
  9619     0BCE                     l4156:
  9620                           
  9621                           ;main.c: 225:     return passo_atual;
  9622     0BCE  0021               	movlb	1	; select bank1
  9623     0BCF  0844               	movf	_passo_atual^(0+128),w
  9624     0BD0  0445               	iorwf	(_passo_atual+1)^(0+128),w
  9625     0BD1  1D03               	btfss	3,2
  9626     0BD2  2BD4               	goto	u5161
  9627     0BD3  2BD6               	goto	u5160
  9628     0BD4                     u5161:
  9629     0BD4  3001               	movlw	1
  9630     0BD5  2BD7               	goto	u5170
  9631     0BD6                     u5160:
  9632     0BD6  3000               	movlw	0
  9633     0BD7                     u5170:
  9634     0BD7                     l647:
  9635     0BD7  0008               	return
  9636     0BD8                     __end_of_LeituraValvula:
  9637                           
  9638                           	psect	text46
  9639     0CA3                     __ptext46:	
  9640 ;; *************** function _MoveValvula *****************
  9641 ;; Defined at:
  9642 ;;		line 229 in file "main.c"
  9643 ;; Parameters:    Size  Location     Type
  9644 ;;  direcao         1    wreg     _Bool 
  9645 ;; Auto vars:     Size  Location     Type
  9646 ;;  direcao         1    3[COMMON] _Bool 
  9647 ;; Return value:  Size  Location     Type
  9648 ;;                  1    wreg      void 
  9649 ;; Registers used:
  9650 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9651 ;; Tracked objects:
  9652 ;;		On entry : 0/0
  9653 ;;		On exit  : 0/0
  9654 ;;		Unchanged: 0/0
  9655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9656 ;;      Params:         0       0       0       0       0       0
  9657 ;;      Locals:         1       0       0       0       0       0
  9658 ;;      Temps:          1       0       0       0       0       0
  9659 ;;      Totals:         2       0       0       0       0       0
  9660 ;;Total ram usage:        2 bytes
  9661 ;; Hardware stack levels used: 1
  9662 ;; Hardware stack levels required when called: 4
  9663 ;; This function calls:
  9664 ;;		Nothing
  9665 ;; This function is called by:
  9666 ;;		_LeituraValvula
  9667 ;;		_AbreValvula
  9668 ;;		_FechaValvula
  9669 ;; This function uses a non-reentrant model
  9670 ;;
  9671                           
  9672     0CA3                     _MoveValvula:	
  9673                           ;psect for function _MoveValvula
  9674                           
  9675                           
  9676                           ;incstack = 0
  9677                           ; Regs used in _MoveValvula: [wreg-fsr0h+status,2+status,0]
  9678                           ;MoveValvula@direcao stored from wreg
  9679     0CA3  00F3               	movwf	MoveValvula@direcao
  9680     0CA4                     l3880:
  9681                           
  9682                           ;main.c: 230:     static uint8_t passos = 0;;main.c: 232:     if ((direcao && passo_atua
      +                          l >= 420) || (!direcao && passo_atual == 0)) {
  9683     0CA4  0873               	movf	MoveValvula@direcao,w
  9684     0CA5  1903               	btfsc	3,2
  9685     0CA6  2CA8               	goto	u4531
  9686     0CA7  2CA9               	goto	u4530
  9687     0CA8                     u4531:
  9688     0CA8  2CB3               	goto	l3884
  9689     0CA9                     u4530:
  9690     0CA9                     l3882:
  9691     0CA9  3001               	movlw	1
  9692     0CAA  0021               	movlb	1	; select bank1
  9693     0CAB  0245               	subwf	(_passo_atual+1)^(0+128),w
  9694     0CAC  30A4               	movlw	164
  9695     0CAD  1903               	skipnz
  9696     0CAE  0244               	subwf	_passo_atual^(0+128),w
  9697     0CAF  1803               	skipnc
  9698     0CB0  2CB2               	goto	u4541
  9699     0CB1  2CB3               	goto	u4540
  9700     0CB2                     u4541:
  9701     0CB2  2D12               	goto	l657
  9702     0CB3                     u4540:
  9703     0CB3                     l3884:
  9704     0CB3  0873               	movf	MoveValvula@direcao,w
  9705     0CB4  1D03               	btfss	3,2
  9706     0CB5  2CB7               	goto	u4551
  9707     0CB6  2CB8               	goto	u4550
  9708     0CB7                     u4551:
  9709     0CB7  2CC0               	goto	l3888
  9710     0CB8                     u4550:
  9711     0CB8                     l3886:
  9712     0CB8  0021               	movlb	1	; select bank1
  9713     0CB9  0844               	movf	_passo_atual^(0+128),w
  9714     0CBA  0445               	iorwf	(_passo_atual+1)^(0+128),w
  9715     0CBB  1D03               	btfss	3,2
  9716     0CBC  2CBE               	goto	u4561
  9717     0CBD  2CBF               	goto	u4560
  9718     0CBE                     u4561:
  9719     0CBE  2CC0               	goto	l3888
  9720     0CBF                     u4560:
  9721     0CBF  2D12               	goto	l657
  9722     0CC0                     l3888:
  9723                           
  9724                           ;main.c: 236:     if (direcao) {
  9725     0CC0  0873               	movf	MoveValvula@direcao,w
  9726     0CC1  1903               	btfsc	3,2
  9727     0CC2  2CC4               	goto	u4571
  9728     0CC3  2CC5               	goto	u4570
  9729     0CC4                     u4571:
  9730     0CC4  2CD4               	goto	l3898
  9731     0CC5                     u4570:
  9732     0CC5                     l3890:
  9733                           
  9734                           ;main.c: 237:         passo_atual++;
  9735     0CC5  3001               	movlw	1
  9736     0CC6  0021               	movlb	1	; select bank1
  9737     0CC7  07C4               	addwf	_passo_atual^(0+128),f
  9738     0CC8  3000               	movlw	0
  9739     0CC9  3DC5               	addwfc	(_passo_atual+1)^(0+128),f
  9740     0CCA                     l3892:
  9741                           
  9742                           ;main.c: 238:         passos++;
  9743     0CCA  3001               	movlw	1
  9744     0CCB  07CE               	addwf	MoveValvula@passos^(0+128),f
  9745     0CCC                     l3894:
  9746                           
  9747                           ;main.c: 239:         if (passos > 3) passos = 0;
  9748     0CCC  3004               	movlw	4
  9749     0CCD  024E               	subwf	MoveValvula@passos^(0+128),w
  9750     0CCE  1C03               	skipc
  9751     0CCF  2CD1               	goto	u4581
  9752     0CD0  2CD2               	goto	u4580
  9753     0CD1                     u4581:
  9754     0CD1  2CFC               	goto	l3908
  9755     0CD2                     u4580:
  9756     0CD2                     l3896:
  9757     0CD2  01CE               	clrf	MoveValvula@passos^(0+128)
  9758     0CD3  2CFC               	goto	l3908
  9759     0CD4                     l3898:
  9760                           
  9761                           ;main.c: 241:         passo_atual--;
  9762     0CD4  3001               	movlw	1
  9763     0CD5  0021               	movlb	1	; select bank1
  9764     0CD6  02C4               	subwf	_passo_atual^(0+128),f
  9765     0CD7  3000               	movlw	0
  9766     0CD8  3BC5               	subwfb	(_passo_atual+1)^(0+128),f
  9767     0CD9                     l3900:
  9768                           
  9769                           ;main.c: 242:         if (passos == 0) passos = 3;
  9770     0CD9  084E               	movf	MoveValvula@passos^(0+128),w
  9771     0CDA  1D03               	btfss	3,2
  9772     0CDB  2CDD               	goto	u4591
  9773     0CDC  2CDE               	goto	u4590
  9774     0CDD                     u4591:
  9775     0CDD  2CE1               	goto	l3904
  9776     0CDE                     u4590:
  9777     0CDE                     l3902:
  9778     0CDE  3003               	movlw	3
  9779     0CDF  00CE               	movwf	MoveValvula@passos^(0+128)
  9780     0CE0  2CFC               	goto	l3908
  9781     0CE1                     l3904:
  9782     0CE1  3001               	movlw	1
  9783     0CE2  02CE               	subwf	MoveValvula@passos^(0+128),f
  9784     0CE3  2CFC               	goto	l3908
  9785     0CE4                     l665:
  9786     0CE4  0022               	movlb	2	; select bank2
  9787     0CE5  148C               	bsf	12,1	;volatile
  9788     0CE6                     l667:
  9789     0CE6  150C               	bsf	12,2	;volatile
  9790     0CE7                     l669:
  9791     0CE7  118C               	bcf	12,3	;volatile
  9792     0CE8                     l671:
  9793     0CE8  120C               	bcf	12,4	;volatile
  9794     0CE9  2D0A               	goto	l3910
  9795     0CEA                     l675:
  9796     0CEA  0022               	movlb	2	; select bank2
  9797     0CEB  108C               	bcf	12,1	;volatile
  9798     0CEC                     l677:
  9799     0CEC  150C               	bsf	12,2	;volatile
  9800     0CED                     l679:
  9801     0CED  158C               	bsf	12,3	;volatile
  9802     0CEE                     l681:
  9803     0CEE  120C               	bcf	12,4	;volatile
  9804     0CEF  2D0A               	goto	l3910
  9805     0CF0                     l684:
  9806     0CF0  0022               	movlb	2	; select bank2
  9807     0CF1  108C               	bcf	12,1	;volatile
  9808     0CF2                     l686:
  9809     0CF2  110C               	bcf	12,2	;volatile
  9810     0CF3                     l688:
  9811     0CF3  158C               	bsf	12,3	;volatile
  9812     0CF4                     l690:
  9813     0CF4  160C               	bsf	12,4	;volatile
  9814     0CF5  2D0A               	goto	l3910
  9815     0CF6                     l693:
  9816     0CF6  0022               	movlb	2	; select bank2
  9817     0CF7  148C               	bsf	12,1	;volatile
  9818     0CF8                     l695:
  9819     0CF8  110C               	bcf	12,2	;volatile
  9820     0CF9                     l697:
  9821     0CF9  118C               	bcf	12,3	;volatile
  9822     0CFA                     l699:
  9823     0CFA  160C               	bsf	12,4	;volatile
  9824     0CFB  2D0A               	goto	l3910
  9825     0CFC                     l3908:
  9826     0CFC  084E               	movf	MoveValvula@passos^(0+128),w
  9827                           
  9828                           ; Switch size 1, requested type "simple"
  9829                           ; Number of cases is 4, Range of values is 0 to 3
  9830                           ; switch strategies available:
  9831                           ; Name         Instructions Cycles
  9832                           ; simple_byte           13     7 (average)
  9833                           ; direct_byte           14     6 (fixed)
  9834                           ; jumptable            260     6 (fixed)
  9835                           ;	Chosen strategy is simple_byte
  9836     0CFD  3A00               	xorlw	0	; case 0
  9837     0CFE  1903               	skipnz
  9838     0CFF  2CE4               	goto	l665
  9839     0D00  3A01               	xorlw	1	; case 1
  9840     0D01  1903               	skipnz
  9841     0D02  2CEA               	goto	l675
  9842     0D03  3A03               	xorlw	3	; case 2
  9843     0D04  1903               	skipnz
  9844     0D05  2CF0               	goto	l684
  9845     0D06  3A01               	xorlw	1	; case 3
  9846     0D07  1903               	skipnz
  9847     0D08  2CF6               	goto	l693
  9848     0D09  2D0A               	goto	l3910
  9849     0D0A                     l3910:
  9850                           
  9851                           ;main.c: 253:     _delay((unsigned long)((3)*(16000000/4000.0)));
  9852     0D0A  3010               	movlw	16
  9853     0D0B  00F2               	movwf	??_MoveValvula
  9854     0D0C  3094               	movlw	148
  9855     0D0D                     u5477:
  9856     0D0D  0B89               	decfsz	9,f
  9857     0D0E  2D0D               	goto	u5477
  9858     0D0F  0BF2               	decfsz	??_MoveValvula,f
  9859     0D10  2D0D               	goto	u5477
  9860     0D11  3200               	nop2
  9861     0D12                     l657:
  9862     0D12  0008               	return
  9863     0D13                     __end_of_MoveValvula:
  9864                           
  9865                           	psect	text47
  9866     0968                     __ptext47:	
  9867 ;; *************** function _ADC_GetConversion *****************
  9868 ;; Defined at:
  9869 ;;		line 112 in file "mcc_generated_files/adc.c"
  9870 ;; Parameters:    Size  Location     Type
  9871 ;;  channel         1    wreg     enum E2495
  9872 ;; Auto vars:     Size  Location     Type
  9873 ;;  channel         1    5[COMMON] enum E2495
  9874 ;; Return value:  Size  Location     Type
  9875 ;;                  2    2[COMMON] unsigned short 
  9876 ;; Registers used:
  9877 ;;		wreg, status,2, status,0
  9878 ;; Tracked objects:
  9879 ;;		On entry : 0/0
  9880 ;;		On exit  : 0/0
  9881 ;;		Unchanged: 0/0
  9882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9883 ;;      Params:         2       0       0       0       0       0
  9884 ;;      Locals:         1       0       0       0       0       0
  9885 ;;      Temps:          1       0       0       0       0       0
  9886 ;;      Totals:         4       0       0       0       0       0
  9887 ;;Total ram usage:        4 bytes
  9888 ;; Hardware stack levels used: 1
  9889 ;; Hardware stack levels required when called: 4
  9890 ;; This function calls:
  9891 ;;		Nothing
  9892 ;; This function is called by:
  9893 ;;		_calculateHeight
  9894 ;;		_LeituraValvula
  9895 ;; This function uses a non-reentrant model
  9896 ;;
  9897                           
  9898     0968                     _ADC_GetConversion:	
  9899                           ;psect for function _ADC_GetConversion
  9900                           
  9901                           
  9902                           ;incstack = 0
  9903                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  9904                           ;ADC_GetConversion@channel stored from wreg
  9905     0968  00F5               	movwf	ADC_GetConversion@channel
  9906     0969                     l3866:
  9907                           
  9908                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  9909     0969  0875               	movf	ADC_GetConversion@channel,w
  9910     096A  00F4               	movwf	??_ADC_GetConversion
  9911     096B  0DF4               	rlf	??_ADC_GetConversion,f
  9912     096C  0DF4               	rlf	??_ADC_GetConversion,f
  9913     096D  0021               	movlb	1	; select bank1
  9914     096E  081D               	movf	29,w	;volatile
  9915     096F  0674               	xorwf	??_ADC_GetConversion,w
  9916     0970  3983               	andlw	-125
  9917     0971  0674               	xorwf	??_ADC_GetConversion,w
  9918     0972  009D               	movwf	29	;volatile
  9919     0973                     l3868:
  9920                           
  9921                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  9922     0973  141D               	bsf	29,0	;volatile
  9923     0974                     l3870:
  9924                           
  9925                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  9926     0974  3006               	movlw	6
  9927     0975                     u5487:
  9928     0975  0B89               	decfsz	9,f
  9929     0976  2975               	goto	u5487
  9930     0977  3200               	nop2
  9931     0978                     l3872:
  9932                           
  9933                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  9934     0978  0021               	movlb	1	; select bank1
  9935     0979  149D               	bsf	29,1	;volatile
  9936     097A                     l32:	
  9937                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  9938                           
  9939                           
  9940                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  9941     097A  189D               	btfsc	29,1	;volatile
  9942     097B  297D               	goto	u4511
  9943     097C  297E               	goto	u4510
  9944     097D                     u4511:
  9945     097D  297A               	goto	l32
  9946     097E                     u4510:
  9947     097E                     l3874:
  9948                           
  9949                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  9950     097E  081C               	movf	28,w	;volatile
  9951     097F  00F3               	movwf	?_ADC_GetConversion+1
  9952     0980  081B               	movf	27,w	;volatile
  9953     0981  00F2               	movwf	?_ADC_GetConversion
  9954     0982                     l35:
  9955     0982  0008               	return
  9956     0983                     __end_of_ADC_GetConversion:
  9957                           
  9958                           	psect	intentry
  9959     0004                     __pintentry:	
  9960 ;; *************** function _INTERRUPT_InterruptManager *****************
  9961 ;; Defined at:
  9962 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  9963 ;; Parameters:    Size  Location     Type
  9964 ;;		None
  9965 ;; Auto vars:     Size  Location     Type
  9966 ;;		None
  9967 ;; Return value:  Size  Location     Type
  9968 ;;                  1    wreg      void 
  9969 ;; Registers used:
  9970 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9971 ;; Tracked objects:
  9972 ;;		On entry : 0/0
  9973 ;;		On exit  : 0/0
  9974 ;;		Unchanged: 0/0
  9975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9976 ;;      Params:         0       0       0       0       0       0
  9977 ;;      Locals:         0       0       0       0       0       0
  9978 ;;      Temps:          0       0       0       0       0       0
  9979 ;;      Totals:         0       0       0       0       0       0
  9980 ;;Total ram usage:        0 bytes
  9981 ;; Hardware stack levels used: 1
  9982 ;; Hardware stack levels required when called: 3
  9983 ;; This function calls:
  9984 ;;		NULL
  9985 ;;		_EUSART_Receive_ISR
  9986 ;;		_EUSART_Transmit_ISR
  9987 ;;		_INT_ISR
  9988 ;;		_TMR1_ISR
  9989 ;;		_TMR4_ISR
  9990 ;; This function is called by:
  9991 ;;		Interrupt level 1
  9992 ;; This function uses a non-reentrant model
  9993 ;;
  9994                           
  9995     0004                     _INTERRUPT_InterruptManager:
  9996                           
  9997                           ;incstack = 0
  9998     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  9999                           
 10000                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 10001     0005  3180               	pagesel	$
 10002     0006                     i1l3570:
 10003                           
 10004                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.INTE == 1 && INTCONbits.
      +                          INTF == 1)
 10005     0006  1E0B               	btfss	11,4	;volatile
 10006     0007  2809               	goto	u384_21
 10007     0008  280A               	goto	u384_20
 10008     0009                     u384_21:
 10009     0009  2812               	goto	i1l128
 10010     000A                     u384_20:
 10011     000A                     i1l3572:
 10012     000A  1C8B               	btfss	11,1	;volatile
 10013     000B  280D               	goto	u385_21
 10014     000C  280E               	goto	u385_20
 10015     000D                     u385_21:
 10016     000D  2812               	goto	i1l128
 10017     000E                     u385_20:
 10018     000E                     i1l3574:
 10019                           
 10020                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         INT_ISR();
 10021     000E  3180  2008  3180   	fcall	_INT_ISR
 10022                           
 10023                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 10024     0011  2854               	goto	i1l140
 10025     0012                     i1l128:	
 10026                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 10027                           
 10028     0012  1F0B               	btfss	11,6	;volatile
 10029     0013  2815               	goto	u386_21
 10030     0014  2816               	goto	u386_20
 10031     0015                     u386_21:
 10032     0015  2854               	goto	i1l140
 10033     0016                     u386_20:
 10034     0016                     i1l3576:
 10035                           
 10036                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 10037     0016  0021               	movlb	1	; select bank1
 10038     0017  1E11               	btfss	17,4	;volatile
 10039     0018  281A               	goto	u387_21
 10040     0019  281B               	goto	u387_20
 10041     001A                     u387_21:
 10042     001A  2827               	goto	i1l131
 10043     001B                     u387_20:
 10044     001B                     i1l3578:
 10045     001B  0020               	movlb	0	; select bank0
 10046     001C  1E11               	btfss	17,4	;volatile
 10047     001D  281F               	goto	u388_21
 10048     001E  2820               	goto	u388_20
 10049     001F                     u388_21:
 10050     001F  2827               	goto	i1l131
 10051     0020                     u388_20:
 10052     0020                     i1l3580:
 10053                           
 10054                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_TxDefaultInterruptHandler();
 10055     0020  0022               	movlb	2	; select bank2
 10056     0021  0851               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+256),w
 10057     0022  008A               	movwf	10
 10058     0023  0850               	movf	_EUSART_TxDefaultInterruptHandler^(0+256),w
 10059     0024  000A               	callw
 10060     0025  3180               	pagesel	$
 10061                           
 10062                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 10063     0026  2854               	goto	i1l140
 10064     0027                     i1l131:	
 10065                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
 10066                           
 10067     0027  0021               	movlb	1	; select bank1
 10068     0028  1E91               	btfss	17,5	;volatile
 10069     0029  282B               	goto	u389_21
 10070     002A  282C               	goto	u389_20
 10071     002B                     u389_21:
 10072     002B  2838               	goto	i1l133
 10073     002C                     u389_20:
 10074     002C                     i1l3582:
 10075     002C  0020               	movlb	0	; select bank0
 10076     002D  1E91               	btfss	17,5	;volatile
 10077     002E  2830               	goto	u390_21
 10078     002F  2831               	goto	u390_20
 10079     0030                     u390_21:
 10080     0030  2838               	goto	i1l133
 10081     0031                     u390_20:
 10082     0031                     i1l3584:
 10083                           
 10084                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART_RxDefaultInterruptHandler();
 10085     0031  0022               	movlb	2	; select bank2
 10086     0032  084F               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+256),w
 10087     0033  008A               	movwf	10
 10088     0034  084E               	movf	_EUSART_RxDefaultInterruptHandler^(0+256),w
 10089     0035  000A               	callw
 10090     0036  3180               	pagesel	$
 10091                           
 10092                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 10093     0037  2854               	goto	i1l140
 10094     0038                     i1l133:	
 10095                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.TMR4IE == 1 && PI
      +                          R3bits.TMR4IF == 1)
 10096                           
 10097     0038  0021               	movlb	1	; select bank1
 10098     0039  1C93               	btfss	19,1	;volatile
 10099     003A  283C               	goto	u391_21
 10100     003B  283D               	goto	u391_20
 10101     003C                     u391_21:
 10102     003C  2846               	goto	i1l135
 10103     003D                     u391_20:
 10104     003D                     i1l3586:
 10105     003D  0020               	movlb	0	; select bank0
 10106     003E  1C93               	btfss	19,1	;volatile
 10107     003F  2841               	goto	u392_21
 10108     0040  2842               	goto	u392_20
 10109     0041                     u392_21:
 10110     0041  2846               	goto	i1l135
 10111     0042                     u392_20:
 10112     0042                     i1l3588:
 10113                           
 10114                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             TMR4_ISR();
 10115     0042  3188  20B1  3180   	fcall	_TMR4_ISR
 10116                           
 10117                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 10118     0045  2854               	goto	i1l140
 10119     0046                     i1l135:	
 10120                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE1bits.TMR1IE == 1 && PI
      +                          R1bits.TMR1IF == 1)
 10121                           
 10122     0046  0021               	movlb	1	; select bank1
 10123     0047  1C11               	btfss	17,0	;volatile
 10124     0048  284A               	goto	u393_21
 10125     0049  284B               	goto	u393_20
 10126     004A                     u393_21:
 10127     004A  2854               	goto	i1l134
 10128     004B                     u393_20:
 10129     004B                     i1l3590:
 10130     004B  0020               	movlb	0	; select bank0
 10131     004C  1C11               	btfss	17,0	;volatile
 10132     004D  284F               	goto	u394_21
 10133     004E  2850               	goto	u394_20
 10134     004F                     u394_21:
 10135     004F  2854               	goto	i1l134
 10136     0050                     u394_20:
 10137     0050                     i1l3592:
 10138                           
 10139                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             TMR1_ISR();
 10140     0050  3189  210A  3180   	fcall	_TMR1_ISR
 10141                           
 10142                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 10143     0053  2854               	goto	i1l140
 10144     0054                     i1l134:
 10145     0054                     i1l140:
 10146     0054  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10147     0055  0009               	retfie
 10148     0056                     __end_of_INTERRUPT_InterruptManager:
 10149                           
 10150                           	psect	text49
 10151     08B1                     __ptext49:	
 10152 ;; *************** function _TMR4_ISR *****************
 10153 ;; Defined at:
 10154 ;;		line 119 in file "mcc_generated_files/tmr4.c"
 10155 ;; Parameters:    Size  Location     Type
 10156 ;;		None
 10157 ;; Auto vars:     Size  Location     Type
 10158 ;;		None
 10159 ;; Return value:  Size  Location     Type
 10160 ;;                  1    wreg      void 
 10161 ;; Registers used:
 10162 ;;		wreg, status,2, status,0, pclath, cstack
 10163 ;; Tracked objects:
 10164 ;;		On entry : 0/0
 10165 ;;		On exit  : 0/0
 10166 ;;		Unchanged: 0/0
 10167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10168 ;;      Params:         0       0       0       0       0       0
 10169 ;;      Locals:         0       0       0       0       0       0
 10170 ;;      Temps:          0       0       0       0       0       0
 10171 ;;      Totals:         0       0       0       0       0       0
 10172 ;;Total ram usage:        0 bytes
 10173 ;; Hardware stack levels used: 1
 10174 ;; Hardware stack levels required when called: 1
 10175 ;; This function calls:
 10176 ;;		NULL
 10177 ;;		_TMR4_DefaultInterruptHandler
 10178 ;; This function is called by:
 10179 ;;		_INTERRUPT_InterruptManager
 10180 ;; This function uses a non-reentrant model
 10181 ;;
 10182                           
 10183     08B1                     _TMR4_ISR:	
 10184                           ;psect for function _TMR4_ISR
 10185                           
 10186     08B1                     i1l3430:	
 10187                           ;incstack = 0
 10188                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
 10189                           
 10190                           
 10191                           ;mcc_generated_files/tmr4.c: 123:     PIR3bits.TMR4IF = 0;
 10192     08B1  0020               	movlb	0	; select bank0
 10193     08B2  1093               	bcf	19,1	;volatile
 10194     08B3                     i1l3432:
 10195                           
 10196                           ;mcc_generated_files/tmr4.c: 125:     if(TMR4_InterruptHandler)
 10197     08B3  0021               	movlb	1	; select bank1
 10198     08B4  086B               	movf	_TMR4_InterruptHandler^(0+128),w
 10199     08B5  046C               	iorwf	(_TMR4_InterruptHandler+1)^(0+128),w
 10200     08B6  1903               	btfsc	3,2
 10201     08B7  28B9               	goto	u363_21
 10202     08B8  28BA               	goto	u363_20
 10203     08B9                     u363_21:
 10204     08B9  28BF               	goto	i1l436
 10205     08BA                     u363_20:
 10206     08BA                     i1l3434:
 10207                           
 10208                           ;mcc_generated_files/tmr4.c: 126:     {;mcc_generated_files/tmr4.c: 127:         TMR4_In
      +                          terruptHandler();
 10209     08BA  086C               	movf	(_TMR4_InterruptHandler+1)^(0+128),w
 10210     08BB  008A               	movwf	10
 10211     08BC  086B               	movf	_TMR4_InterruptHandler^(0+128),w
 10212     08BD  000A               	callw
 10213     08BE  3188               	pagesel	$
 10214     08BF                     i1l436:
 10215     08BF  0008               	return
 10216     08C0                     __end_of_TMR4_ISR:
 10217                           
 10218                           	psect	text50
 10219     0003                     __ptext50:	
 10220 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 10221 ;; Defined at:
 10222 ;;		line 136 in file "mcc_generated_files/tmr4.c"
 10223 ;; Parameters:    Size  Location     Type
 10224 ;;		None
 10225 ;; Auto vars:     Size  Location     Type
 10226 ;;		None
 10227 ;; Return value:  Size  Location     Type
 10228 ;;                  1    wreg      void 
 10229 ;; Registers used:
 10230 ;;		None
 10231 ;; Tracked objects:
 10232 ;;		On entry : 0/0
 10233 ;;		On exit  : 0/0
 10234 ;;		Unchanged: 0/0
 10235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10236 ;;      Params:         0       0       0       0       0       0
 10237 ;;      Locals:         0       0       0       0       0       0
 10238 ;;      Temps:          0       0       0       0       0       0
 10239 ;;      Totals:         0       0       0       0       0       0
 10240 ;;Total ram usage:        0 bytes
 10241 ;; Hardware stack levels used: 1
 10242 ;; This function calls:
 10243 ;;		Nothing
 10244 ;; This function is called by:
 10245 ;;		_TMR4_Initialize
 10246 ;;		_TMR4_ISR
 10247 ;; This function uses a non-reentrant model
 10248 ;;
 10249                           
 10250     0003                     _TMR4_DefaultInterruptHandler:	
 10251                           ;psect for function _TMR4_DefaultInterruptHandler
 10252                           
 10253     0003                     i1l442:	
 10254                           ;incstack = 0
 10255                           ; Regs used in _TMR4_DefaultInterruptHandler: []
 10256                           
 10257     0003  0008               	return
 10258     0004                     __end_of_TMR4_DefaultInterruptHandler:
 10259                           
 10260                           	psect	text51
 10261     090A                     __ptext51:	
 10262 ;; *************** function _TMR1_ISR *****************
 10263 ;; Defined at:
 10264 ;;		line 157 in file "mcc_generated_files/tmr1.c"
 10265 ;; Parameters:    Size  Location     Type
 10266 ;;		None
 10267 ;; Auto vars:     Size  Location     Type
 10268 ;;		None
 10269 ;; Return value:  Size  Location     Type
 10270 ;;                  1    wreg      void 
 10271 ;; Registers used:
 10272 ;;		wreg, status,2, status,0, pclath, cstack
 10273 ;; Tracked objects:
 10274 ;;		On entry : 0/0
 10275 ;;		On exit  : 0/0
 10276 ;;		Unchanged: 0/0
 10277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10278 ;;      Params:         0       0       0       0       0       0
 10279 ;;      Locals:         0       0       0       0       0       0
 10280 ;;      Temps:          0       0       0       0       0       0
 10281 ;;      Totals:         0       0       0       0       0       0
 10282 ;;Total ram usage:        0 bytes
 10283 ;; Hardware stack levels used: 1
 10284 ;; Hardware stack levels required when called: 1
 10285 ;; This function calls:
 10286 ;;		NULL
 10287 ;;		_TMR1_DefaultInterruptHandler
 10288 ;;		i1_TMR1_WriteTimer
 10289 ;; This function is called by:
 10290 ;;		_INTERRUPT_InterruptManager
 10291 ;; This function uses a non-reentrant model
 10292 ;;
 10293                           
 10294     090A                     _TMR1_ISR:	
 10295                           ;psect for function _TMR1_ISR
 10296                           
 10297     090A                     i1l3436:	
 10298                           ;incstack = 0
 10299                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 10300                           
 10301                           
 10302                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
 10303     090A  0020               	movlb	0	; select bank0
 10304     090B  1011               	bcf	17,0	;volatile
 10305     090C                     i1l3438:
 10306                           
 10307                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
 10308     090C  0021               	movlb	1	; select bank1
 10309     090D  084B               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 10310     090E  00F1               	movwf	i1TMR1_WriteTimer@timerVal+1
 10311     090F  084A               	movf	_timer1ReloadVal^(0+128),w	;volatile
 10312     0910  00F0               	movwf	i1TMR1_WriteTimer@timerVal
 10313     0911  3188  20C0  3189   	fcall	i1_TMR1_WriteTimer
 10314     0914                     i1l3440:
 10315                           
 10316                           ;mcc_generated_files/tmr1.c: 164:     if(TMR1_InterruptHandler)
 10317     0914  0021               	movlb	1	; select bank1
 10318     0915  086D               	movf	_TMR1_InterruptHandler^(0+128),w
 10319     0916  046E               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 10320     0917  1903               	btfsc	3,2
 10321     0918  291A               	goto	u364_21
 10322     0919  291B               	goto	u364_20
 10323     091A                     u364_21:
 10324     091A  2920               	goto	i1l214
 10325     091B                     u364_20:
 10326     091B                     i1l3442:
 10327                           
 10328                           ;mcc_generated_files/tmr1.c: 165:     {;mcc_generated_files/tmr1.c: 166:         TMR1_In
      +                          terruptHandler();
 10329     091B  086E               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 10330     091C  008A               	movwf	10
 10331     091D  086D               	movf	_TMR1_InterruptHandler^(0+128),w
 10332     091E  000A               	callw
 10333     091F  3189               	pagesel	$
 10334     0920                     i1l214:
 10335     0920  0008               	return
 10336     0921                     __end_of_TMR1_ISR:
 10337                           
 10338                           	psect	text52
 10339     08C0                     __ptext52:	
 10340 ;; *************** function i1_TMR1_WriteTimer *****************
 10341 ;; Defined at:
 10342 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 10343 ;; Parameters:    Size  Location     Type
 10344 ;;  timerVal        2    0[COMMON] unsigned short 
 10345 ;; Auto vars:     Size  Location     Type
 10346 ;;		None
 10347 ;; Return value:  Size  Location     Type
 10348 ;;                  1    wreg      void 
 10349 ;; Registers used:
 10350 ;;		wreg, status,2
 10351 ;; Tracked objects:
 10352 ;;		On entry : 0/0
 10353 ;;		On exit  : 0/0
 10354 ;;		Unchanged: 0/0
 10355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10356 ;;      Params:         2       0       0       0       0       0
 10357 ;;      Locals:         0       0       0       0       0       0
 10358 ;;      Temps:          0       0       0       0       0       0
 10359 ;;      Totals:         2       0       0       0       0       0
 10360 ;;Total ram usage:        2 bytes
 10361 ;; Hardware stack levels used: 1
 10362 ;; This function calls:
 10363 ;;		Nothing
 10364 ;; This function is called by:
 10365 ;;		_TMR1_ISR
 10366 ;; This function uses a non-reentrant model
 10367 ;;
 10368                           
 10369     08C0                     i1_TMR1_WriteTimer:	
 10370                           ;psect for function i1_TMR1_WriteTimer
 10371                           
 10372     08C0                     i1l3400:	
 10373                           ;incstack = 0
 10374                           ; Regs used in i1_TMR1_WriteTimer: [wreg+status,2]
 10375                           
 10376                           
 10377                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
 10378     08C0  0020               	movlb	0	; select bank0
 10379     08C1  1D18               	btfss	24,2	;volatile
 10380     08C2  28C4               	goto	u362_21
 10381     08C3  28C5               	goto	u362_20
 10382     08C4                     u362_21:
 10383     08C4  28CC               	goto	i1l3410
 10384     08C5                     u362_20:
 10385     08C5                     i1l3402:
 10386                           
 10387                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
 10388     08C5  1018               	bcf	24,0	;volatile
 10389     08C6                     i1l3404:
 10390                           
 10391                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
 10392     08C6  0871               	movf	i1TMR1_WriteTimer@timerVal+1,w
 10393     08C7  0097               	movwf	23	;volatile
 10394     08C8                     i1l3406:
 10395                           
 10396                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
 10397     08C8  0870               	movf	i1TMR1_WriteTimer@timerVal,w
 10398     08C9  0096               	movwf	22	;volatile
 10399     08CA                     i1l3408:
 10400                           
 10401                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
 10402     08CA  1418               	bsf	24,0	;volatile
 10403                           
 10404                           ;mcc_generated_files/tmr1.c: 133:     }
 10405     08CB  28D0               	goto	i1l201
 10406     08CC                     i1l3410:
 10407                           
 10408                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 10409     08CC  0871               	movf	i1TMR1_WriteTimer@timerVal+1,w
 10410     08CD  0097               	movwf	23	;volatile
 10411     08CE                     i1l3412:
 10412                           
 10413                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 10414     08CE  0870               	movf	i1TMR1_WriteTimer@timerVal,w
 10415     08CF  0096               	movwf	22	;volatile
 10416     08D0                     i1l201:
 10417     08D0  0008               	return
 10418     08D1                     __end_ofi1_TMR1_WriteTimer:
 10419                           
 10420                           	psect	text53
 10421     0002                     __ptext53:	
 10422 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 10423 ;; Defined at:
 10424 ;;		line 175 in file "mcc_generated_files/tmr1.c"
 10425 ;; Parameters:    Size  Location     Type
 10426 ;;		None
 10427 ;; Auto vars:     Size  Location     Type
 10428 ;;		None
 10429 ;; Return value:  Size  Location     Type
 10430 ;;                  1    wreg      void 
 10431 ;; Registers used:
 10432 ;;		None
 10433 ;; Tracked objects:
 10434 ;;		On entry : 0/0
 10435 ;;		On exit  : 0/0
 10436 ;;		Unchanged: 0/0
 10437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10438 ;;      Params:         0       0       0       0       0       0
 10439 ;;      Locals:         0       0       0       0       0       0
 10440 ;;      Temps:          0       0       0       0       0       0
 10441 ;;      Totals:         0       0       0       0       0       0
 10442 ;;Total ram usage:        0 bytes
 10443 ;; Hardware stack levels used: 1
 10444 ;; This function calls:
 10445 ;;		Nothing
 10446 ;; This function is called by:
 10447 ;;		_TMR1_Initialize
 10448 ;;		_TMR1_ISR
 10449 ;; This function uses a non-reentrant model
 10450 ;;
 10451                           
 10452     0002                     _TMR1_DefaultInterruptHandler:	
 10453                           ;psect for function _TMR1_DefaultInterruptHandler
 10454                           
 10455     0002                     i1l220:	
 10456                           ;incstack = 0
 10457                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 10458                           
 10459     0002  0008               	return
 10460     0003                     __end_of_TMR1_DefaultInterruptHandler:
 10461                           
 10462                           	psect	text54
 10463     0008                     __ptext54:	
 10464 ;; *************** function _INT_ISR *****************
 10465 ;; Defined at:
 10466 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 10467 ;; Parameters:    Size  Location     Type
 10468 ;;		None
 10469 ;; Auto vars:     Size  Location     Type
 10470 ;;		None
 10471 ;; Return value:  Size  Location     Type
 10472 ;;                  1    wreg      void 
 10473 ;; Registers used:
 10474 ;;		wreg, status,2, status,0, pclath, cstack
 10475 ;; Tracked objects:
 10476 ;;		On entry : 0/0
 10477 ;;		On exit  : 0/0
 10478 ;;		Unchanged: 0/0
 10479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10480 ;;      Params:         0       0       0       0       0       0
 10481 ;;      Locals:         0       0       0       0       0       0
 10482 ;;      Temps:          0       0       0       0       0       0
 10483 ;;      Totals:         0       0       0       0       0       0
 10484 ;;Total ram usage:        0 bytes
 10485 ;; Hardware stack levels used: 1
 10486 ;; Hardware stack levels required when called: 2
 10487 ;; This function calls:
 10488 ;;		_INT_CallBack
 10489 ;; This function is called by:
 10490 ;;		_INTERRUPT_InterruptManager
 10491 ;; This function uses a non-reentrant model
 10492 ;;
 10493                           
 10494     0008                     _INT_ISR:	
 10495                           ;psect for function _INT_ISR
 10496                           
 10497     0008                     i1l3426:	
 10498                           ;incstack = 0
 10499                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 10500                           
 10501                           
 10502                           ;mcc_generated_files/ext_int.c: 34:     (INTCONbits.INTF = 0);
 10503     0008  108B               	bcf	11,1	;volatile
 10504     0009                     i1l3428:
 10505                           
 10506                           ;mcc_generated_files/ext_int.c: 37:     INT_CallBack();
 10507     0009  3188  2088  3180   	fcall	_INT_CallBack
 10508     000C                     i1l453:
 10509     000C  0008               	return
 10510     000D                     __end_of_INT_ISR:
 10511                           
 10512                           	psect	text55
 10513     0888                     __ptext55:	
 10514 ;; *************** function _INT_CallBack *****************
 10515 ;; Defined at:
 10516 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 10517 ;; Parameters:    Size  Location     Type
 10518 ;;		None
 10519 ;; Auto vars:     Size  Location     Type
 10520 ;;		None
 10521 ;; Return value:  Size  Location     Type
 10522 ;;                  1    wreg      void 
 10523 ;; Registers used:
 10524 ;;		wreg, status,2, status,0, pclath, cstack
 10525 ;; Tracked objects:
 10526 ;;		On entry : 0/0
 10527 ;;		On exit  : 0/0
 10528 ;;		Unchanged: 0/0
 10529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10530 ;;      Params:         0       0       0       0       0       0
 10531 ;;      Locals:         0       0       0       0       0       0
 10532 ;;      Temps:          0       0       0       0       0       0
 10533 ;;      Totals:         0       0       0       0       0       0
 10534 ;;Total ram usage:        0 bytes
 10535 ;; Hardware stack levels used: 1
 10536 ;; Hardware stack levels required when called: 1
 10537 ;; This function calls:
 10538 ;;		NULL
 10539 ;;		_INT_DefaultInterruptHandler
 10540 ;; This function is called by:
 10541 ;;		_INT_ISR
 10542 ;; This function uses a non-reentrant model
 10543 ;;
 10544                           
 10545     0888                     _INT_CallBack:	
 10546                           ;psect for function _INT_CallBack
 10547                           
 10548     0888                     i1l3170:	
 10549                           ;incstack = 0
 10550                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 10551                           
 10552                           
 10553                           ;mcc_generated_files/ext_int.c: 44:     if(INT_InterruptHandler)
 10554     0888  0021               	movlb	1	; select bank1
 10555     0889  0869               	movf	_INT_InterruptHandler^(0+128),w
 10556     088A  046A               	iorwf	(_INT_InterruptHandler+1)^(0+128),w
 10557     088B  1903               	btfsc	3,2
 10558     088C  288E               	goto	u315_21
 10559     088D  288F               	goto	u315_20
 10560     088E                     u315_21:
 10561     088E  2894               	goto	i1l457
 10562     088F                     u315_20:
 10563     088F                     i1l3172:
 10564                           
 10565                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          _InterruptHandler();
 10566     088F  086A               	movf	(_INT_InterruptHandler+1)^(0+128),w
 10567     0890  008A               	movwf	10
 10568     0891  0869               	movf	_INT_InterruptHandler^(0+128),w
 10569     0892  000A               	callw
 10570     0893  3188               	pagesel	$
 10571     0894                     i1l457:
 10572     0894  0008               	return
 10573     0895                     __end_of_INT_CallBack:
 10574                           
 10575                           	psect	text56
 10576     087B                     __ptext56:	
 10577 ;; *************** function _INT_DefaultInterruptHandler *****************
 10578 ;; Defined at:
 10579 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 10580 ;; Parameters:    Size  Location     Type
 10581 ;;		None
 10582 ;; Auto vars:     Size  Location     Type
 10583 ;;		None
 10584 ;; Return value:  Size  Location     Type
 10585 ;;                  1    wreg      void 
 10586 ;; Registers used:
 10587 ;;		None
 10588 ;; Tracked objects:
 10589 ;;		On entry : 0/0
 10590 ;;		On exit  : 0/0
 10591 ;;		Unchanged: 0/0
 10592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10593 ;;      Params:         0       0       0       0       0       0
 10594 ;;      Locals:         0       0       0       0       0       0
 10595 ;;      Temps:          0       0       0       0       0       0
 10596 ;;      Totals:         0       0       0       0       0       0
 10597 ;;Total ram usage:        0 bytes
 10598 ;; Hardware stack levels used: 1
 10599 ;; This function calls:
 10600 ;;		Nothing
 10601 ;; This function is called by:
 10602 ;;		_EXT_INT_Initialize
 10603 ;;		_INT_CallBack
 10604 ;; This function uses a non-reentrant model
 10605 ;;
 10606                           
 10607     087B                     _INT_DefaultInterruptHandler:	
 10608                           ;psect for function _INT_DefaultInterruptHandler
 10609                           
 10610     087B                     i1l463:	
 10611                           ;incstack = 0
 10612                           ; Regs used in _INT_DefaultInterruptHandler: []
 10613                           
 10614     087B  0008               	return
 10615     087C                     __end_of_INT_DefaultInterruptHandler:
 10616                           
 10617                           	psect	text57
 10618     09BA                     __ptext57:	
 10619 ;; *************** function _EUSART_Transmit_ISR *****************
 10620 ;; Defined at:
 10621 ;;		line 197 in file "mcc_generated_files/eusart.c"
 10622 ;; Parameters:    Size  Location     Type
 10623 ;;		None
 10624 ;; Auto vars:     Size  Location     Type
 10625 ;;		None
 10626 ;; Return value:  Size  Location     Type
 10627 ;;                  1    wreg      void 
 10628 ;; Registers used:
 10629 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10630 ;; Tracked objects:
 10631 ;;		On entry : 0/0
 10632 ;;		On exit  : 0/0
 10633 ;;		Unchanged: 0/0
 10634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10635 ;;      Params:         0       0       0       0       0       0
 10636 ;;      Locals:         0       0       0       0       0       0
 10637 ;;      Temps:          0       0       0       0       0       0
 10638 ;;      Totals:         0       0       0       0       0       0
 10639 ;;Total ram usage:        0 bytes
 10640 ;; Hardware stack levels used: 1
 10641 ;; This function calls:
 10642 ;;		Nothing
 10643 ;; This function is called by:
 10644 ;;		_EUSART_Initialize
 10645 ;;		_INTERRUPT_InterruptManager
 10646 ;; This function uses a non-reentrant model
 10647 ;;
 10648                           
 10649     09BA                     _EUSART_Transmit_ISR:	
 10650                           ;psect for function _EUSART_Transmit_ISR
 10651                           
 10652     09BA                     i1l3466:	
 10653                           ;incstack = 0
 10654                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 10655                           
 10656                           
 10657                           ;mcc_generated_files/eusart.c: 201:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 10658     09BA  3008               	movlw	8
 10659     09BB  0021               	movlb	1	; select bank1
 10660     09BC  0255               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
 10661     09BD  1803               	skipnc
 10662     09BE  29C0               	goto	u370_21
 10663     09BF  29C1               	goto	u370_20
 10664     09C0                     u370_21:
 10665     09C0  29D6               	goto	i1l358
 10666     09C1                     u370_20:
 10667     09C1                     i1l3468:
 10668                           
 10669                           ;mcc_generated_files/eusart.c: 202:     {;mcc_generated_files/eusart.c: 203:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
 10670     09C1  0856               	movf	_eusartTxTail^(0+128),w
 10671     09C2  3E30               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 10672     09C3  0086               	movwf	6
 10673     09C4  3001               	movlw	1	; select bank2/3
 10674     09C5  0087               	movwf	7
 10675     09C6  0801               	movf	1,w
 10676     09C7  0023               	movlb	3	; select bank3
 10677     09C8  009A               	movwf	26	;volatile
 10678     09C9                     i1l3470:
 10679     09C9  3001               	movlw	1
 10680     09CA  0021               	movlb	1	; select bank1
 10681     09CB  07D6               	addwf	_eusartTxTail^(0+128),f	;volatile
 10682     09CC                     i1l3472:
 10683                           
 10684                           ;mcc_generated_files/eusart.c: 204:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 10685     09CC  3008               	movlw	8
 10686     09CD  0256               	subwf	_eusartTxTail^(0+128),w	;volatile
 10687     09CE  1C03               	skipc
 10688     09CF  29D1               	goto	u371_21
 10689     09D0  29D2               	goto	u371_20
 10690     09D1                     u371_21:
 10691     09D1  29D3               	goto	i1l3476
 10692     09D2                     u371_20:
 10693     09D2                     i1l3474:
 10694                           
 10695                           ;mcc_generated_files/eusart.c: 205:         {;mcc_generated_files/eusart.c: 206:        
      +                               eusartTxTail = 0;
 10696     09D2  01D6               	clrf	_eusartTxTail^(0+128)	;volatile
 10697     09D3                     i1l3476:
 10698                           
 10699                           ;mcc_generated_files/eusart.c: 208:         eusartTxBufferRemaining++;
 10700     09D3  3001               	movlw	1
 10701     09D4  07D5               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 10702                           
 10703                           ;mcc_generated_files/eusart.c: 209:     }
 10704     09D5  29D7               	goto	i1l361
 10705     09D6                     i1l358:	
 10706                           ;mcc_generated_files/eusart.c: 210:     else
 10707                           
 10708                           
 10709                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         PIE
      +                          1bits.TXIE = 0;
 10710     09D6  1211               	bcf	17,4	;volatile
 10711     09D7                     i1l361:
 10712     09D7  0008               	return
 10713     09D8                     __end_of_EUSART_Transmit_ISR:
 10714                           
 10715                           	psect	text58
 10716     0B44                     __ptext58:	
 10717 ;; *************** function _EUSART_Receive_ISR *****************
 10718 ;; Defined at:
 10719 ;;		line 216 in file "mcc_generated_files/eusart.c"
 10720 ;; Parameters:    Size  Location     Type
 10721 ;;		None
 10722 ;; Auto vars:     Size  Location     Type
 10723 ;;		None
 10724 ;; Return value:  Size  Location     Type
 10725 ;;                  1    wreg      void 
 10726 ;; Registers used:
 10727 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10728 ;; Tracked objects:
 10729 ;;		On entry : 0/0
 10730 ;;		On exit  : 0/0
 10731 ;;		Unchanged: 0/0
 10732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10733 ;;      Params:         0       0       0       0       0       0
 10734 ;;      Locals:         0       0       0       0       0       0
 10735 ;;      Temps:          0       0       0       0       0       0
 10736 ;;      Totals:         0       0       0       0       0       0
 10737 ;;Total ram usage:        0 bytes
 10738 ;; Hardware stack levels used: 1
 10739 ;; Hardware stack levels required when called: 2
 10740 ;; This function calls:
 10741 ;;		NULL
 10742 ;;		_EUSART_DefaultErrorHandler
 10743 ;;		_EUSART_DefaultFramingErrorHandler
 10744 ;;		_EUSART_DefaultOverrunErrorHandler
 10745 ;;		_EUSART_RxDataHandler
 10746 ;; This function is called by:
 10747 ;;		_EUSART_Initialize
 10748 ;;		_INTERRUPT_InterruptManager
 10749 ;; This function uses a non-reentrant model
 10750 ;;
 10751                           
 10752     0B44                     _EUSART_Receive_ISR:	
 10753                           ;psect for function _EUSART_Receive_ISR
 10754                           
 10755     0B44                     i1l3478:	
 10756                           ;incstack = 0
 10757                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10758                           
 10759                           
 10760                           ;mcc_generated_files/eusart.c: 219:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 10761     0B44  087A               	movf	_eusartRxHead,w	;volatile
 10762     0B45  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 10763     0B46  0086               	movwf	6
 10764     0B47  3001               	movlw	1	; select bank2/3
 10765     0B48  0087               	movwf	7
 10766     0B49  0181               	clrf	1
 10767     0B4A                     i1l3480:
 10768                           
 10769                           ;mcc_generated_files/eusart.c: 221:     if(RCSTAbits.FERR){
 10770     0B4A  0023               	movlb	3	; select bank3
 10771     0B4B  1D1D               	btfss	29,2	;volatile
 10772     0B4C  2B4E               	goto	u372_21
 10773     0B4D  2B4F               	goto	u372_20
 10774     0B4E                     u372_21:
 10775     0B4E  2B5B               	goto	i1l3486
 10776     0B4F                     u372_20:
 10777     0B4F                     i1l3482:
 10778                           
 10779                           ;mcc_generated_files/eusart.c: 222:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 10780     0B4F  087A               	movf	_eusartRxHead,w	;volatile
 10781     0B50  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 10782     0B51  0086               	movwf	6
 10783     0B52  3001               	movlw	1	; select bank2/3
 10784     0B53  0087               	movwf	7
 10785     0B54  1481               	bsf	1,1
 10786     0B55                     i1l3484:
 10787                           
 10788                           ;mcc_generated_files/eusart.c: 223:         EUSART_FramingErrorHandler();
 10789     0B55  0022               	movlb	2	; select bank2
 10790     0B56  084D               	movf	(_EUSART_FramingErrorHandler+1)^(0+256),w
 10791     0B57  008A               	movwf	10
 10792     0B58  084C               	movf	_EUSART_FramingErrorHandler^(0+256),w
 10793     0B59  000A               	callw
 10794     0B5A  318B               	pagesel	$
 10795     0B5B                     i1l3486:
 10796                           
 10797                           ;mcc_generated_files/eusart.c: 226:     if(RCSTAbits.OERR){
 10798     0B5B  0023               	movlb	3	; select bank3
 10799     0B5C  1C9D               	btfss	29,1	;volatile
 10800     0B5D  2B5F               	goto	u373_21
 10801     0B5E  2B60               	goto	u373_20
 10802     0B5F                     u373_21:
 10803     0B5F  2B6C               	goto	i1l3492
 10804     0B60                     u373_20:
 10805     0B60                     i1l3488:
 10806                           
 10807                           ;mcc_generated_files/eusart.c: 227:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 10808     0B60  087A               	movf	_eusartRxHead,w	;volatile
 10809     0B61  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 10810     0B62  0086               	movwf	6
 10811     0B63  3001               	movlw	1	; select bank2/3
 10812     0B64  0087               	movwf	7
 10813     0B65  1501               	bsf	1,2
 10814     0B66                     i1l3490:
 10815                           
 10816                           ;mcc_generated_files/eusart.c: 228:         EUSART_OverrunErrorHandler();
 10817     0B66  0022               	movlb	2	; select bank2
 10818     0B67  084B               	movf	(_EUSART_OverrunErrorHandler+1)^(0+256),w
 10819     0B68  008A               	movwf	10
 10820     0B69  084A               	movf	_EUSART_OverrunErrorHandler^(0+256),w
 10821     0B6A  000A               	callw
 10822     0B6B  318B               	pagesel	$
 10823     0B6C                     i1l3492:
 10824                           
 10825                           ;mcc_generated_files/eusart.c: 231:     if(eusartRxStatusBuffer[eusartRxHead].status){
 10826     0B6C  087A               	movf	_eusartRxHead,w	;volatile
 10827     0B6D  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 10828     0B6E  0086               	movwf	6
 10829     0B6F  3001               	movlw	1	; select bank2/3
 10830     0B70  0087               	movwf	7
 10831     0B71  0801               	movf	1,w
 10832     0B72  1903               	btfsc	3,2
 10833     0B73  2B75               	goto	u374_21
 10834     0B74  2B76               	goto	u374_20
 10835     0B75                     u374_21:
 10836     0B75  2B7D               	goto	i1l3496
 10837     0B76                     u374_20:
 10838     0B76                     i1l3494:
 10839                           
 10840                           ;mcc_generated_files/eusart.c: 232:         EUSART_ErrorHandler();
 10841     0B76  0022               	movlb	2	; select bank2
 10842     0B77  0849               	movf	(_EUSART_ErrorHandler+1)^(0+256),w
 10843     0B78  008A               	movwf	10
 10844     0B79  0848               	movf	_EUSART_ErrorHandler^(0+256),w
 10845     0B7A  000A               	callw
 10846     0B7B  318B               	pagesel	$
 10847                           
 10848                           ;mcc_generated_files/eusart.c: 233:     } else {
 10849     0B7C  2B80               	goto	i1l368
 10850     0B7D                     i1l3496:
 10851                           
 10852                           ;mcc_generated_files/eusart.c: 234:         EUSART_RxDataHandler();
 10853     0B7D  3188  20F5  318B   	fcall	_EUSART_RxDataHandler
 10854     0B80                     i1l368:
 10855     0B80  0008               	return
 10856     0B81                     __end_of_EUSART_Receive_ISR:
 10857                           
 10858                           	psect	text59
 10859     0004                     __ptext59:	
 10860 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 10861 ;; Defined at:
 10862 ;;		line 252 in file "mcc_generated_files/eusart.c"
 10863 ;; Parameters:    Size  Location     Type
 10864 ;;		None
 10865 ;; Auto vars:     Size  Location     Type
 10866 ;;		None
 10867 ;; Return value:  Size  Location     Type
 10868 ;;                  1    wreg      void 
 10869 ;; Registers used:
 10870 ;;		None
 10871 ;; Tracked objects:
 10872 ;;		On entry : 0/0
 10873 ;;		On exit  : 0/0
 10874 ;;		Unchanged: 0/0
 10875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10876 ;;      Params:         0       0       0       0       0       0
 10877 ;;      Locals:         0       0       0       0       0       0
 10878 ;;      Temps:          0       0       0       0       0       0
 10879 ;;      Totals:         0       0       0       0       0       0
 10880 ;;Total ram usage:        0 bytes
 10881 ;; Hardware stack levels used: 1
 10882 ;; This function calls:
 10883 ;;		Nothing
 10884 ;; This function is called by:
 10885 ;;		_EUSART_Initialize
 10886 ;;		_EUSART_Receive_ISR
 10887 ;; This function uses a non-reentrant model
 10888 ;;
 10889                           
 10890     0004                     _EUSART_DefaultOverrunErrorHandler:	
 10891                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 10892                           
 10893     0004                     i1l3166:	
 10894                           ;incstack = 0
 10895                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 10896                           
 10897                           
 10898                           ;mcc_generated_files/eusart.c: 255:     RCSTAbits.CREN = 0;
 10899     0004  0023               	movlb	3	; select bank3
 10900     0005  121D               	bcf	29,4	;volatile
 10901                           
 10902                           ;mcc_generated_files/eusart.c: 256:     RCSTAbits.CREN = 1;
 10903     0006  161D               	bsf	29,4	;volatile
 10904     0007                     i1l378:
 10905     0007  0008               	return
 10906     0008                     __end_of_EUSART_DefaultOverrunErrorHandler:
 10907                           
 10908                           	psect	text60
 10909     087A                     __ptext60:	
 10910 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 10911 ;; Defined at:
 10912 ;;		line 250 in file "mcc_generated_files/eusart.c"
 10913 ;; Parameters:    Size  Location     Type
 10914 ;;		None
 10915 ;; Auto vars:     Size  Location     Type
 10916 ;;		None
 10917 ;; Return value:  Size  Location     Type
 10918 ;;                  1    wreg      void 
 10919 ;; Registers used:
 10920 ;;		None
 10921 ;; Tracked objects:
 10922 ;;		On entry : 0/0
 10923 ;;		On exit  : 0/0
 10924 ;;		Unchanged: 0/0
 10925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10926 ;;      Params:         0       0       0       0       0       0
 10927 ;;      Locals:         0       0       0       0       0       0
 10928 ;;      Temps:          0       0       0       0       0       0
 10929 ;;      Totals:         0       0       0       0       0       0
 10930 ;;Total ram usage:        0 bytes
 10931 ;; Hardware stack levels used: 1
 10932 ;; This function calls:
 10933 ;;		Nothing
 10934 ;; This function is called by:
 10935 ;;		_EUSART_Initialize
 10936 ;;		_EUSART_Receive_ISR
 10937 ;; This function uses a non-reentrant model
 10938 ;;
 10939                           
 10940     087A                     _EUSART_DefaultFramingErrorHandler:	
 10941                           ;psect for function _EUSART_DefaultFramingErrorHandler
 10942                           
 10943     087A                     i1l375:	
 10944                           ;incstack = 0
 10945                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 10946                           
 10947     087A  0008               	return
 10948     087B                     __end_of_EUSART_DefaultFramingErrorHandler:
 10949                           
 10950                           	psect	text61
 10951     0000                     __ptext61:	
 10952 ;; *************** function _EUSART_DefaultErrorHandler *****************
 10953 ;; Defined at:
 10954 ;;		line 260 in file "mcc_generated_files/eusart.c"
 10955 ;; Parameters:    Size  Location     Type
 10956 ;;		None
 10957 ;; Auto vars:     Size  Location     Type
 10958 ;;		None
 10959 ;; Return value:  Size  Location     Type
 10960 ;;                  1    wreg      void 
 10961 ;; Registers used:
 10962 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10963 ;; Tracked objects:
 10964 ;;		On entry : 0/0
 10965 ;;		On exit  : 0/0
 10966 ;;		Unchanged: 0/0
 10967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10968 ;;      Params:         0       0       0       0       0       0
 10969 ;;      Locals:         0       0       0       0       0       0
 10970 ;;      Temps:          0       0       0       0       0       0
 10971 ;;      Totals:         0       0       0       0       0       0
 10972 ;;Total ram usage:        0 bytes
 10973 ;; Hardware stack levels used: 1
 10974 ;; Hardware stack levels required when called: 1
 10975 ;; This function calls:
 10976 ;;		_EUSART_RxDataHandler
 10977 ;; This function is called by:
 10978 ;;		_EUSART_Initialize
 10979 ;;		_EUSART_Receive_ISR
 10980 ;; This function uses a non-reentrant model
 10981 ;;
 10982                           
 10983     0000                     _EUSART_DefaultErrorHandler:	
 10984                           ;psect for function _EUSART_DefaultErrorHandler
 10985                           
 10986     0000                     i1l3168:	
 10987                           ;incstack = 0
 10988                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 10989                           
 10990                           
 10991                           ;mcc_generated_files/eusart.c: 261:     EUSART_RxDataHandler();
 10992     0000  3188  20F5  3180   	fcall	_EUSART_RxDataHandler
 10993     0003                     i1l381:
 10994     0003  0008               	return
 10995     0004                     __end_of_EUSART_DefaultErrorHandler:
 10996                           
 10997                           	psect	text62
 10998     08F5                     __ptext62:	
 10999 ;; *************** function _EUSART_RxDataHandler *****************
 11000 ;; Defined at:
 11001 ;;		line 240 in file "mcc_generated_files/eusart.c"
 11002 ;; Parameters:    Size  Location     Type
 11003 ;;		None
 11004 ;; Auto vars:     Size  Location     Type
 11005 ;;		None
 11006 ;; Return value:  Size  Location     Type
 11007 ;;                  1    wreg      void 
 11008 ;; Registers used:
 11009 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11010 ;; Tracked objects:
 11011 ;;		On entry : 0/0
 11012 ;;		On exit  : 0/0
 11013 ;;		Unchanged: 0/0
 11014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11015 ;;      Params:         0       0       0       0       0       0
 11016 ;;      Locals:         0       0       0       0       0       0
 11017 ;;      Temps:          0       0       0       0       0       0
 11018 ;;      Totals:         0       0       0       0       0       0
 11019 ;;Total ram usage:        0 bytes
 11020 ;; Hardware stack levels used: 1
 11021 ;; This function calls:
 11022 ;;		Nothing
 11023 ;; This function is called by:
 11024 ;;		_EUSART_Receive_ISR
 11025 ;;		_EUSART_DefaultErrorHandler
 11026 ;; This function uses a non-reentrant model
 11027 ;;
 11028                           
 11029     08F5                     _EUSART_RxDataHandler:	
 11030                           ;psect for function _EUSART_RxDataHandler
 11031                           
 11032     08F5                     i1l2754:	
 11033                           ;incstack = 0
 11034                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 11035                           
 11036                           
 11037                           ;mcc_generated_files/eusart.c: 242:     eusartRxBuffer[eusartRxHead++] = RCREG;
 11038     08F5  087A               	movf	_eusartRxHead,w
 11039     08F6  3E28               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 11040     08F7  0086               	movwf	6
 11041     08F8  3001               	movlw	1	; select bank2/3
 11042     08F9  0087               	movwf	7
 11043     08FA  0023               	movlb	3	; select bank3
 11044     08FB  0819               	movf	25,w	;volatile
 11045     08FC  0081               	movwf	1
 11046     08FD                     i1l2756:
 11047     08FD  3001               	movlw	1
 11048     08FE  07FA               	addwf	_eusartRxHead,f	;volatile
 11049     08FF                     i1l2758:
 11050                           
 11051                           ;mcc_generated_files/eusart.c: 243:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 11052     08FF  3008               	movlw	8
 11053     0900  027A               	subwf	_eusartRxHead,w	;volatile
 11054     0901  1C03               	skipc
 11055     0902  2904               	goto	u253_21
 11056     0903  2905               	goto	u253_20
 11057     0904                     u253_21:
 11058     0904  2906               	goto	i1l2762
 11059     0905                     u253_20:
 11060     0905                     i1l2760:
 11061                           
 11062                           ;mcc_generated_files/eusart.c: 244:     {;mcc_generated_files/eusart.c: 245:         eus
      +                          artRxHead = 0;
 11063     0905  01FA               	clrf	_eusartRxHead	;volatile
 11064     0906                     i1l2762:
 11065                           
 11066                           ;mcc_generated_files/eusart.c: 247:     eusartRxCount++;
 11067     0906  3001               	movlw	1
 11068     0907  0021               	movlb	1	; select bank1
 11069     0908  07D4               	addwf	_eusartRxCount^(0+128),f	;volatile
 11070     0909                     i1l372:
 11071     0909  0008               	return
 11072     090A                     __end_of_EUSART_RxDataHandler:
 11073     0001                     ___latbits      equ	1
 11074     007E                     btemp           set	126	;btemp
 11075     007E                     int$flags       set	126
 11076     007E                     wtemp0          set	126
 11077                           
 11078                           	psect	config
 11079                           
 11080                           ;Config register CONFIG1 @ 0x8007
 11081                           ;	Oscillator Selection
 11082                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 11083                           ;	Watchdog Timer Enable
 11084                           ;	WDTE = OFF, WDT disabled
 11085                           ;	Power-up Timer Enable
 11086                           ;	PWRTE = OFF, PWRT disabled
 11087                           ;	MCLR Pin Function Select
 11088                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 11089                           ;	Flash Program Memory Code Protection
 11090                           ;	CP = OFF, Program memory code protection is disabled
 11091                           ;	Data Memory Code Protection
 11092                           ;	CPD = OFF, Data memory code protection is disabled
 11093                           ;	Brown-out Reset Enable
 11094                           ;	BOREN = ON, Brown-out Reset enabled
 11095                           ;	Clock Out Enable
 11096                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 11097                           ;	Internal/External Switchover
 11098                           ;	IESO = ON, Internal/External Switchover mode is enabled
 11099                           ;	Fail-Safe Clock Monitor Enable
 11100                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 11101     8007                     	org	32775
 11102     8007  3FE4               	dw	16356
 11103                           
 11104                           ;Config register CONFIG2 @ 0x8008
 11105                           ;	Flash Memory Self-Write Protection
 11106                           ;	WRT = OFF, Write protection off
 11107                           ;	PLL Enable
 11108                           ;	PLLEN = OFF, 4x PLL disabled
 11109                           ;	Stack Overflow/Underflow Reset Enable
 11110                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 11111                           ;	Brown-out Reset Voltage Selection
 11112                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 11113                           ;	In-Circuit Debugger Mode
 11114                           ;	DEBUG = 0x1, unprogrammed default
 11115                           ;	Low-Voltage Programming Enable
 11116                           ;	LVP = ON, Low-voltage programming enabled
 11117     8008                     	org	32776
 11118     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    204
    Data        0
    BSS         102
    Persistent  48
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80     79      79
    BANK1            80     14      79
    BANK2            80      4      54
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), NULL(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), NULL(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), NULL(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_ajustaPwm
    _processaRecepcaoUSART->_EUSART_Read
    _calculateToF->_TMR1_ReadTimer
    _calculateHeight->___fltol
    _atualizaDadosRecebidos->_EPWM1_LoadDutyValue
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _FechaValvula->_MoveValvula
    _Controle->_ajustaPwm
    _Controle->_ajustaValvula
    _ajustaPwm->_EPWM1_LoadDutyValue
    _ControleAjuste->___fltol
    ___xxtofl->_ADC_GetConversion
    ___xxtofl->__Umul8_16
    ___flmul->__Umul8_16
    _AbreValvula->_LeituraValvula
    _LeituraValvula->_ADC_GetConversion

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->i1_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _calculateToF->___fltol
    _calculateHeight->___fltol
    ___fldiv->___flmul
    _ControleAjuste->___fltol
    ___xxtofl->__Umul8_16
    ___fltol->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    _AbreValvula->_LeituraValvula

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _Controle->_ControleAjuste

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_Controle

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   19842
                                              2 BANK2      2     2      0
                        _AbreValvula
                           _Controle
                 _EUSART_is_rx_ready
                       _FechaValvula
                     _LeituraValvula
                  _SYSTEM_Initialize
                          _ajustaPwm
             _atualizaDadosRecebidos
                    _calculateHeight
                       _calculateToF
              _processaRecepcaoUSART
 ---------------------------------------------------------------------------------
 (1) _processaRecepcaoUSART                                3     3      0      92
                                              3 COMMON     3     3      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          1     1      0      24
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calculateToF                                         0     0      0    3498
                     _TMR1_ReadTimer
                    _TMR1_StartTimer
                     _TMR1_StopTimer
                    _TMR1_WriteTimer
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _TMR1_WriteTimer                                      2     0      2      90
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_ReadTimer                                      11     9      2      69
                                              2 COMMON     7     5      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _calculateHeight                                      6     6      0    4787
                                              0 BANK1      6     6      0
                  _ADC_GetConversion
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     278
                                              2 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1123
                                             45 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _atualizaDadosRecebidos                               0     0      0      68
                _EPWM1_LoadDutyValue
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     184
                     _ADC_Initialize
                   _EPWM1_Initialize
                  _EUSART_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0      23
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR4_SetInterruptHandler                             2     0      2      23
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0      23
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      23
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      23
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      23
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     115
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      23
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      23
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      23
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      23
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      23
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FechaValvula                                         0     0      0     141
                        _MoveValvula
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Controle                                             2     2      0   10050
                                              0 BANK2      2     2      0
                     _ControleAjuste
                          _ajustaPwm
                      _ajustaValvula
 ---------------------------------------------------------------------------------
 (2) _ajustaValvula                                        7     5      2     173
                                              2 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (1) _ajustaPwm                                            7     5      2     275
                                              6 COMMON     3     1      2
                                              0 BANK0      4     4      0
                _EPWM1_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _EPWM1_LoadDutyValue                                  4     2      2      68
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ControleAjuste                                      14    12      2    9537
                                              0 BANK1     14    12      2
                            ___fladd
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     523
                                              5 BANK0     14    10      4
                  _ADC_GetConversion (ARG)
                          __Umul8_16 (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     355
                                              6 COMMON     2     2      0
                                             71 BANK0      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3037
                                             65 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2966
                                             45 BANK0     20    12      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2461
                                             19 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     232
                                              2 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _AbreValvula                                          0     0      0     444
                     _LeituraValvula
                        _MoveValvula
 ---------------------------------------------------------------------------------
 (1) _LeituraValvula                                       4     4      0     303
                                              6 COMMON     1     1      0
                                              0 BANK0      3     3      0
                  _ADC_GetConversion
                        _MoveValvula
 ---------------------------------------------------------------------------------
 (2) _MoveValvula                                          2     2      0     141
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    4     2      2      47
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0      89
                                NULL *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                            _INT_ISR
                           _TMR1_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR4_ISR                                             0     0      0       0
                                NULL *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0      89
                                NULL *
       _TMR1_DefaultInterruptHandler *
                  i1_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) i1_TMR1_WriteTimer                                    2     0      2      89
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT_ISR                                              0     0      0       0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (7) _INT_CallBack                                         0     0      0       0
                                NULL *
        _INT_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Receive_ISR                                   0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (7) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (7) _EUSART_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AbreValvula
     _LeituraValvula
       _ADC_GetConversion
       _MoveValvula
     _MoveValvula
   _Controle
     _ControleAjuste
       ___fladd
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
             _ADC_GetConversion (ARG)
             __Umul8_16 (ARG)
       ___flmul
       ___flsub
         ___fladd
       ___fltol
         ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _ajustaPwm
       _EPWM1_LoadDutyValue
     _ajustaValvula
   _EUSART_is_rx_ready
   _FechaValvula
     _MoveValvula
   _LeituraValvula
   _SYSTEM_Initialize
     _ADC_Initialize
     _EPWM1_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _WDT_Initialize
   _ajustaPwm
   _atualizaDadosRecebidos
     _EPWM1_LoadDutyValue
   _calculateHeight
     _ADC_GetConversion
     ___fldiv
     ___flge
     ___flmul
     ___fltol
     ___xxtofl
   _calculateToF
     _TMR1_ReadTimer
     _TMR1_StartTimer
     _TMR1_StopTimer
     _TMR1_WriteTimer
     ___flmul
     ___fltol
     ___xxtofl
   _processaRecepcaoUSART
     _EUSART_Read

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _INT_ISR *
     _INT_CallBack
       NULL(Fake) *
       _INT_DefaultInterruptHandler *
   _TMR1_ISR *
     NULL(Fake) *
     _TMR1_DefaultInterruptHandler *
     i1_TMR1_WriteTimer *
   _TMR4_ISR *
     NULL(Fake) *
     _TMR4_DefaultInterruptHandler *

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            48      0       0      0.0%
BIGRAM             368      0       0      0.0%
COMMON              14      9      12     85.7%
BANK0               80     79      79     98.8%
BANK1               80     14      79     98.8%
BANK2               80      4      54     67.5%
BANK3               80      0       0      0.0%
BANK4               48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     223      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Feb 14 16:32:31 2025

                ?_EUSART_SetRxInterruptHandler 0072                                   ___fldiv@aexp 0066  
                                 ___fldiv@bexp 0065                                   ___fldiv@sign 005E  
                                           l32 097A                                             l17 001D  
                                           l35 0982                                             l63 094E  
                                           l97 09F6                            __Umul8_16@word_mpld 0022  
                                          l100 0048                                            l103 0060  
                                          l201 08E1                                            l160 0937  
                                          l217 004E                                            l233 0056  
                                          l333 0015                                            l157 08B0  
                                          l190 006E                                            l327 0B43  
                                          l417 08F4                                            l193 0071  
                                          l601 0C33                                            l346 0A7F  
                                          l187 099D                                            l460 0041  
                                          l196 0967                                            l614 0A5C  
                                          l390 0023                                            l606 07AD  
                                          l439 005C                                            l624 0AF9  
                                          l384 0029                                            l609 0FFF  
                                          l625 0B07                                            l393 003B  
                                          l714 08A2                                            l466 0887  
                                          l707 09B6                                            l635 0A38  
                                          l387 002F                                            l708 09B9  
                                          l636 0A39                                            l396 0035  
                                          l580 006B                                            l671 0CE8  
                                          l647 0BD7                                            l591 0BD8  
                                          l681 0CEE                                            l665 0CE4  
                                          l657 0D12                                            l577 0AD2  
                                          l690 0CF4                                            l675 0CEA  
                                          l667 0CE6                                            l595 0BE0  
                                          l684 0CF0                                            l693 0CF6  
                                          l677 0CEC                                            l669 0CE7  
                                          l686 0CF2                                            l598 0BEE  
                                          l695 0CF8                                            l679 0CED  
                                          l688 0CF3                                            l697 0CF9  
                                          l699 0CFA                                            _PR2 001B  
                                          _PR4 0416                                _timer1ReloadVal 00CA  
                       ??_EUSART_RxDataHandler 0070                                            _pwm 00C6  
               ?_EUSART_SetFramingErrorHandler 0072                                _TMR2_Initialize 004F  
                                          wreg 0009                                   ___flmul@aexp 0041  
                                 ___flmul@bexp 0046                                   ___flmul@sign 0040  
                                 ___flmul@temp 004B                                   ___flmul@prod 0047  
                                 ?_EUSART_Read 0070                                ajustaPwm@ajuste 0076  
                                 ___fltol@exp1 0077                                           l1050 0E21  
                                         l1042 0DB4                                           l1211 0A16  
                                         l1221 0506                                           l1045 0E08  
                                         l1207 04A9                                           l1223 065A  
                                         l1208 04B6                                           l1065 0C8D  
                                         l1305 0E45                                           l1058 0CA2  
                                         l1306 0E56                                           l1242 062A  
                                         l1171 035A                                           l1307 0EC6  
                                         l1243 0644                                           l1068 0CA2  
                                         l3100 0B11                                           l1261 02AA  
                                         l1165 0301                                           l1245 064F  
                                         l1237 05E0                                           l1190 0433  
                                         l1318 0E92                                           l3022 0016  
                                         l3110 0B23                                           l3102 0B1A  
                                         l3030 093B                                           l1319 0E9E  
                                         l1280 0A93                                           l4000 00DB  
                                         l3024 0019                                           l3120 0B42  
                                         l3112 0B24                                           l3104 0B1D  
                                         l3040 0949                                           l3032 093E  
                                         l1273 02A0                                           l1169 0380  
                                         l1282 0AA3                                           l4010 0132  
                                         l4002 00E8                                           l1186 0411  
                                         l1178 04B6                                           l3026 001B  
                                         l3050 08A6                                           l3114 0B2B  
                                         l3106 0B1F                                           l3042 0042  
                                         l3034 0940                                           l3122 006C  
                                         l3130 08D1                                           l1267 0228  
                                         l4020 0163                                           l4012 013F  
                                         l4004 0100                                           l1196 0456  
                                         l4100 0E3D                                           l3052 08A7  
                                         l3116 0B32                                           l3108 0B21  
                                         l3044 0045                                           l3036 0943  
                                         l3028 0938                                           l3060 08E2  
                                         l3300 050E                                           l3124 006F  
                                         l3132 08D6                                           l3140 08DD  
                                         l4030 01A0                                           l4022 016A  
                                         l4014 0146                                           l4006 010D  
                                         l4110 0E69                                           l4102 0E4D  
                                         l3054 08A9                                           l3118 0B3D  
                                         l3038 0945                                           l3070 08F1  
                                         l3062 08E5                                           l3046 005D  
                                         l3310 052A                                           l3302 051A  
                                         l3126 094F                                           l3142 08DF  
                                         l3134 08D7                                           l3150 0A71  
                                         l1199 0489                                           l4040 01F1  
                                         l4032 01B2                                           l4024 017C  
                                         l4016 0151                                           l4008 0125  
                                         l4120 0E96                                           l4112 0E78  
                                         l3056 08AC                                           l3048 08A3  
                                         l3080 0983                                           l3072 004F  
                                         l3064 08E6                                           l3320 0553  
                                         l3304 051C                                           l4200 0D97  
                                         l3136 08D9                                           l3160 0A7D  
                                         l3152 0A73                                           l3144 0A5D  
                                         l4042 01F8                                           l4050 0208  
                                         l4034 01C7                                           l4026 0183  
                                         l4018 0158                                           l4130 0EBE  
                                         l4122 0EA0                                           l4114 0E7F  
                                         l4106 0E59                                           l3058 08AE  
                                         l3090 087C                                           l3082 098B  
                                         l3074 0052                                           l3066 08E8  
                                         l3330 0574                                           l3322 055B  
                                         l3314 0533                                           l4210 0DEC  
                                         l4202 0DAC                                           l3138 08DB  
                                         l3162 0A7E                                           l3154 0A79  
                                         l3146 0A5D                                           l4140 0B97  
                                         l4052 020C                                           l4044 01FC  
                                         l4036 01DE                                           l4028 0195  
                                         l4124 0EB4                                           l4116 0E88  
                                         l4108 0E62                                           l3092 087F  
                                         l3084 0992                                           l3076 0053  
                                         l3068 08EA                                           l3420 09ED  
                                         l3340 0597                                           l3332 0575  
                                         l3324 055D                                           l3316 0543  
                                         l3308 0525                                           l3260 04B7  
                                         l4212 0DF0                                           l4204 0DC8  
                                         l4220 065B                                           l3156 0A7A  
                                         l3148 0A63                                           l4300 0D4F  
                                         l4150 0BBF                                           l4142 0BA2  
                                         l4134 0B83                                           l4070 0254  
                                         l4062 022D                                           l4054 020D  
                                         l4046 01FD                                           l4038 01E5  
                                         l4126 0EB9                                           l4118 0E8C  
                                         l3094 0886                                           l3086 0993  
                                         l3078 0054                                           l3422 09F0  
                                         l3414 09D8                                           l3350 05B0  
                                         l3326 0562                                           l3334 057C  
                                         l3342 0599                                           l3318 054B  
                                         l3270 04C7                                           l3262 04BB  
                                         l4214 0E1E                                           l4206 0DD0  
                                         l4230 0734                                           l4222 06EB  
                                         l3158 0A7B                                           l4310 0D60  
                                         l4302 0D53                                           l4152 0BC9  
                                         l4144 0BA6                                           l4136 0B8C  
                                         l4080 0286                                           l4064 0232  
                                         l4072 0258                                           l4056 0211  
                                         l4048 0204                                           l4128 0EBD  
                                         l4160 0AD3                                           l3096 0B08  
                                         l3088 099A                                           l3424 09F3  
                                         l3416 09E4                                           l3360 05C4  
                                         l3352 05B4                                           l3344 059F  
                                         l3336 058E                                           l3328 0570  
                                         l3280 04DF                                           l3272 04CC  
                                         l3264 04BD                                           l4216 0E20  
                                         l4208 0DD4                                           l4232 0764  
                                         l4224 06F4                                           l4240 0BEB  
                                         l4320 0D87                                           l4312 0D67  
                                         l4154 0BCC                                           l4146 0BAD  
                                         l4138 0B91                                           l4090 02A2  
                                         l4082 0288                                           l4074 0265  
                                         l4066 0238                                           l4058 0225  
                                         l4170 0AFE                                           l4162 0ADD  
                                         l3098 0B0A                                           l3418 09E7  
                                         l4250 0069                                           l3370 05E5  
                                         l3362 05C5                                           l3354 05B5  
                                         l3346 05A7                                           l3338 058F  
                                         l3290 04EE                                           l3282 04E2  
                                         l3274 04D4                                           l3266 04C1  
                                         l4226 0714                                           l4242 0BF3  
                                         l4234 0BDA                                           l4314 0D74  
                                         l4306 0D59                                           l4156 0BCE  
                                         l4148 0BB6                                           l4260 099E  
                                         l4084 0293                                           l4076 026F  
                                         l4068 023C                                           l3700 0307  
                                         l4180 0F53                                           l4172 0B00  
                                         l4164 0AE1                                           l4252 0A3A  
                                         l3444 000D                                           l3372 05EA  
                                         l3380 0610                                           l3364 05C9  
                                         l3356 05BC                                           l3348 05A9  
                                         l3292 04F3                                           l3284 04E4  
                                         l3276 04D5                                           l3268 04C2  
                                         l4228 071D                                           l4244 0BF6  
                                         l4236 0BDE                                           l3540 0AD0  
                                         l3532 0AA6                                           l4316 0D77  
                                         l4308 0D5F                                           l4262 099F  
                                         l4086 0297                                           l4078 027D  
                                         l3710 0313                                           l3702 030B  
                                         l4094 0E24                                           l4182 0F5B  
                                         l4174 0EC7                                           l4166 0AEE  
                                         l4190 0A1E                                           l4254 0A45  
                                         l4270 0896                                           l2750 002A  
                                         l2742 0049                                           l3390 0647  
                                         l3382 061D                                           l3374 05F0  
                                         l3366 05DD                                           l3358 05C0  
                                         l3294 04FB                                           l3286 04E8  
                                         l3278 04D7                                           l4246 0BFE  
                                         l4238 0BE5                                           l3534 0AB0  
                                         l3526 0AA4                                           l4318 0D84  
                                         l4264 09A3                                           l4088 0298  
                                         l3800 042E                                           l3720 031D  
                                         l3712 0315                                           l3704 030D  
                                         l4096 0E29                                           l4184 0FB5  
                                         l4176 0EEF                                           l4168 0AF4  
                                         l4192 0A22                                           l4256 0A4B  
                                         l4272 089A                                           l2752 001E  
                                         l2744 0030                                           l4248 0061  
                                         l3392 064B                                           l3384 0638  
                                         l3376 05F4                                           l3296 04FC  
                                         l3288 04E9                                           l3536 0AB4  
                                         l4280 0D1A                                           l4266 09AD  
                                         l3810 0442                                           l3802 0432  
                                         l3730 0327                                           l3722 031F  
                                         l3714 0317                                           l3706 030F  
                                         l4098 0E2D                                           l4178 0F21  
                                         l4194 0A2F                                           l4258 0A54  
                                         l4274 08A1                                           l2746 0036  
                                         l3394 064D                                           l3386 063B  
                                         l3378 060C                                           l3298 04FE  
                                         l3538 0AC1                                           l4290 0D36  
                                         l4282 0D1B                                           l3900 0CD9  
                                         l3820 0453                                           l3804 0437  
                                         l3812 0444                                           l3740 035E  
                                         l3732 0329                                           l3724 0321  
                                         l3716 0319                                           l3708 0311  
                                         l3660 02B1                                           l4196 0A34  
                                         l4188 0A17                                           l4268 0895  
                                         l2748 0024                                           l2764 0057  
                                         l3388 0643                                           l4292 0D3A  
                                         l4284 0D1C                                           l4276 0D13  
                                         l3910 0D0A                                           l3902 0CDE  
                                         l3830 046A                                           l3806 043B  
                                         l3814 0448                                           l3750 0377  
                                         l3742 0368                                           l3726 0323  
                                         l3718 031B                                           l3734 032B  
                                         l3670 02C8                                           l3662 02B5  
                                         l4198 0A39                                           l2766 003C  
                                         l4294 0D40                                           l4286 0D22  
                                         l4278 0D16                                    _AbreValvula 099E  
                                         l3904 0CE1                                           l3840 04A0  
                                         l3832 0487                                           l3824 045B  
                                         l3816 0449                                           l3808 043D  
                                         l3760 0392                                           l3744 036A  
                                         l3752 0379                                           l3736 032C  
                                         l3728 0325                                           l3680 02DC  
                                         l3672 02C9                                           l3664 02B6  
                                         l3656 02AB                                           l3920 0C58  
                                         l3912 0C34                                           l4296 0D43  
                                         l4288 0D2E                                           l3850 04B5  
                                         l3842 04A1                                           l3834 048E  
                                         l3826 0460                                           l3818 044D  
                                         l3770 03AE                                           l3762 039A  
                                         l3754 0384                                           l3746 036E  
                                         l3738 0343                                           l3690 02E9  
                                         l3682 02DD                                           l3666 02BB  
                                         l3674 02CB                                           l3658 02AF  
                                         l3922 0C59                                           l3914 0C3E  
                                         l4298 0D49                                           l3908 0CFC  
                                         l3860 0A9A                                           l3852 0A82  
                                         l3844 04A5                                           l3836 0493  
                                         l3828 0466                                           l3780 03D4  
                                         l3772 03B2                                           l3764 039E  
                                         l3756 0389                                           l3748 036F  
                                         l3692 02EE                                           l3684 02DF  
                                         l3676 02D3                                           l3668 02C0  
                                         l3924 0C61                                           l3870 0974  
                                         l3862 0A9F                                           l3854 0A84  
                                         l3846 04A7                                           l3838 049B  
                                         l3782 03F8                                           l3790 0409  
                                         l3774 03B3                                           l3766 03A2  
                                         l3694 02F6                                           l3686 02E3  
                                         l3678 02D6                                           l3950 09FA  
                                         l3942 0C84                                           l3934 0C6F  
                                         l3926 0C63                                           l3918 0C47  
                                         l3872 0978                                           l3880 0CA4  
                                         l3856 0A8B                                           l3960 007A  
                                         l3848 04B1                                           l3792 0419  
                                         l3784 03FA                                           l3776 03BB  
                                         l3768 03AC                                           l3696 02F7  
                                         l3688 02E4                                           l3944 0C92  
                                         l3928 0C67                                           l3936 0C7D  
                                         l3874 097E                                           l3866 0969  
                                         l3890 0CC5                                           l3882 0CA9  
                                         l3858 0A8F                                           l3970 008F  
                                         l3962 007B                                           l3954 0070  
                                         l3794 041E                                           l3786 03FD  
                                         l3778 03BE                                           l3698 02F9  
                                         l3946 0C97                                           l3868 0973  
                                         l3892 0CCA                                           l3884 0CB3  
                                         l3980 00A1                                           l3972 0097  
                                         l3964 0080                                           l3956 0074  
                                         l3788 0402                                           l3948 09F7  
                                         l3894 0CCC                                           l3886 0CB8  
                                         l3990 00BD                                           l3982 00A6  
                                         l3974 009A                                           l3966 0085  
                                         l3958 0076                                           l3798 0427  
                                         l3878 0921                                           l3896 0CD2  
                                         l3888 0CC0                                           l3992 00C2  
                                         l3984 00AB                                           l3976 009C  
                                         l3968 008D                                           l3898 0CD4  
                                         l3994 00C7                                           l3986 00B3  
                                         l3978 00A0                                           l3988 00B5  
                                         l3998 00D0                                           _LATA 010C  
                                         _LATB 010D                                __end_of_INT_ISR 000D  
                                         u3120 08D6                                           u3121 08D5  
                                         u3130 0A63                                           u3131 0A62  
                                         u4100 030B                                           u4020 02B5  
                                         u3140 0A79                                           u4101 030A  
                                         u4021 02B4                                           u3141 0A78  
                                         u4110 0343                                           u4030 02BB  
                                         u4111 0342                                           u4031 02BA  
                                         u4200 0389                                           u4120 034D  
                                         u4040 02C0                                           u3400 0562  
                                         u3320 04C1                                           u4201 0388  
                                         u4121 034B                                           u4041 02BF  
                                         u3401 0561                                           u3321 04C0  
                                         u4210 039E                                           u4130 034E  
                                         u4050 02DC                                           u5010 0E68  
                                         u3330 04C7                                           u4211 039D  
                                         u4115 033F                                           u4051 02DB  
                                         u5011 0E67                                           u3331 04C6  
                                         u4220 03A2                                           u4140 035E  
                                         u4060 02E3                                           u5100 0EBD  
                                         u3340 04CC                                           u4221 03A1  
                                         u4141 035D                                           u4061 02E2  
                                         u5101 0EBC                                           u5005 0E5C  
                                         u3341 04CB                                           u5110 0B91  
                                         u4310 0432                                           u4070 02E9  
                                         u5030 0E7E                                           u3510 05C4  
                                         u3430 0574                                           u3350 04E8  
                                         u5111 0B90                                           u4311 0431  
                                         u4071 02E8                                           u5031 0E7D  
                                         u3511 05C3                                           u3431 0573  
                                         u3415 0563                                           u3351 04E7  
                                         u5120 0B97                                           u4400 0478  
                                         u4320 0437                                           u4240 03B2  
                                         u4160 036E                                           u4080 02EE  
                                         u5200 0A22                                           u3600 064B  
                                         u3520 05C9                                           u3360 04EE  
                                         u5121 0B96                                           u4321 0436  
                                         u4305 0428                                           u4241 03B1  
                                         u4161 036D                                           u4081 02ED  
                                         u5025 0E72                                           u5201 0A21  
                                         u3601 064A                                           u3521 05C8  
                                         u3505 05B6                                           u3425 056A  
                                         u3361 04ED                                           u5130 0BA1  
                                         u4410 0487                                           u4330 0442  
                                         u4090 0307                                           u5050 0E8C  
                                         u5210 0A2F                                           u3530 05DD  
                                         u3450 058E                                           u3370 04F3  
                                         u5131 0BA0                                           u4411 0486  
                                         u4331 0441                                           u4235 03A5  
                                         u4155 0361                                           u4091 0306  
                                         u5051 0E8B                                           u5211 0A2E  
                                         u3531 05DC                                           u3451 058D  
                                         u3371 04F2                                           u5140 0BBF  
                                         u4500 0A9F                                           u4420 048E  
                                         u4340 0448                                           u4260 03D4  
                                         u4180 0380                                           u5060 0E92  
                                         u3540 05E4                                           u3460 059F  
                                         u3380 050E                                           u5220 0DAC  
                                         u5300 0BF3                                           u5141 0BBE  
                                         u4501 0A9E                                           u4421 048D  
                                         u4405 0474                                           u4341 0447  
                                         u4261 03D3                                           u4181 037F  
                                         u5061 0E91                                           u5045 0E82  
                                         u3541 05E3                                           u3461 059E  
                                         u3445 0576                                           u3381 050D  
                                         u5221 0DAB                                           u5301 0BF2  
                                         u4510 097E                                           u5150 0BC9  
                                         u4430 0493                                           u4350 044D  
                                         u4270 0402                                           u4190 0384  
                                         u5070 0E96                                           u5310 0A4B  
                                         u3550 05EA                                           u3470 05A7  
                                         u3390 052A                                           u5230 0DC8  
                                         u4511 097D                                           u5151 0BC8  
                                         u4431 0492                                           u4351 044C  
                                         u4271 0401                                           u4263 03D0  
                                         u4255 03B5                                           u4191 0383  
                                         u4175 0371                                           u5071 0E95  
                                         u5215 0A2B                                           u5311 0A4A  
                                         u3615 0652                                           u3551 05E9  
                                         u3471 05A6                                           u3455 058A  
                                         u3391 0529                                           u5231 0DC7  
                                         u5160 0BD6                                           u5320 09AD  
                                         u4440 04A0                                           u4360 0453  
                                         u4280 0419                                           u4600 0C3E  
                                         u5080 0EAA                                           u3560 05F4  
                                         u5240 0DD4                                           u5400 0D5F  
                                         u5161 0BD4                                           u5321 09AC  
                                         u4441 049F                                           u4361 0452  
                                         u4281 0418                                           u4601 0C3D  
                                         u3561 05F3                                           u5241 0DD3  
                                         u5401 0D5E                                           u4530 0CA9  
                                         u5170 0BD7                                           u5330 09B6  
                                         u4450 04A5                                           u4370 045A  
                                         u4290 041E                                           u4610 0C54  
                                         u5090 0EB9                                           u3650 0014  
                                         u3570 0602                                           u3490 05B4  
                                         u5250 0DF0                                           u4531 0CA8  
                                         u5331 09B5                                           u4451 04A4  
                                         u4371 0459                                           u4291 041D  
                                         u5091 0EB8                                           u3651 0012  
                                         u3491 05B3                                           u5251 0DEF  
                                         u4540 0CB3                                           u4700 007A  
                                         u4380 0460                                           u4620 0C67  
                                         u5180 0AE1                                           u3660 0015  
                                         u5340 08A1                                           u3580 061D  
                                         u5260 0E1E                                           u4541 0CB2  
                                         u4701 0079                                           u4381 045F  
                                         u4621 0C66                                           u5085 0EA6  
                                         u4525 0930                                           u5181 0AE0  
                                         u5341 08A0                                           u3581 061C  
                                         u3485 05AA                                           u5261 0E1D  
                                         u4550 0CB8                                           u4710 0080  
                                         u4470 04B5                                           u4390 046A  
                                         u4630 0C6E                                           u5190 0AEE  
                                         u3590 0638                                           u5270 06EB  
                                         u5350 0D36                                           u4551 0CB7  
                                         u4711 007F                                           u4471 04B4  
                                         u4391 0469                                           u4631 0C6D  
                                         u4615 0C50                                           u5191 0AED  
                                         u3591 0637                                           u3575 05FE  
                                         u5271 06EA                                           u5351 0D35  
                                         u4560 0CBF                                           u4480 0A8F  
                                         u4800 01BD                                           u4720 0085  
                                         u5280 0714                                           u5360 0D40  
                                         u4561 0CBE                                           u4481 0A8E  
                                         u4721 0084                                           u4465 04AC  
                                         u3585 0619                                           u5265 0E1A  
                                         u5281 0713                                           u5361 0D3F  
                                         u5417 0D28                                           u4570 0CC5  
                                         u4810 01D4                                           u4730 00A0  
                                         u4650 0C7C                                           u5290 0BE5  
                                         u5370 0D49                                           u4571 0CC4  
                                         u4731 009F                                           u4651 0C7B  
                                         u5195 0AEA                                           u3595 0634  
                                         u5291 0BE4                                           u5427 0D6D  
                                         u5371 0D48                                           u4580 0CD2  
                                         u4900 0232                                           u4740 00A6  
                                         u4660 0C83                                           u5380 0D4F  
                                         u4581 0CD1                                           u4901 0231  
                                         u4805 01B9                                           u4741 00A5  
                                         u4661 0C82                                           u4645 0C70  
                                         u5437 0D7D                                           u5381 0D4E  
                                         u4590 0CDE                                           u4910 023C  
                                         u4750 00AB                                           u3790 0AC1  
                                         u5390 0D58                                           u4591 0CDD  
                                         u4495 0A94                                           u4911 023B  
                                         u4815 01D0                                           u4751 00AA  
                                         u3791 0AC0                                           u5447 0D8D  
                                         u5391 0D57                                           u4920 024A  
                                         u4840 01FC                                           u4760 00C2  
                                         u4680 0C92                                           u4841 01FB  
                                         u4825 01DF                                           u4761 00C1  
                                         u4681 0C91                                           u5457 0BDB  
                                         u4930 0265                                           u4770 00C7  
                                         u4690 0C97                                           u5467 0BA9  
                                         u4931 0264                                           u4835 01F2  
                                         u4771 00C6                                           u4691 0C96  
                                         u4675 0C85                                           u3795 0ABD  
                                         u4940 027D                                           u4860 020C  
                                         u5477 0D0D                                           u4941 027C  
                                         u4925 0246                                           u4861 020B  
                                         u4950 0297                                           u4870 0211  
                                         u5487 0975                                           u4951 0296  
                                         u4935 0261                                           u4871 0210  
                                         u4855 01FE                                           u4880 0225  
                                         u4945 0279                                           u4881 0224  
                                         u4785 0140                                           u4890 022C  
                                         u4970 0E29                                           u4891 022B  
                                         u4795 016B                                           u4971 0E28  
                                         u4980 0E2D                                           u4965 029B  
                                         u4981 0E2C                                           u4990 0E4D  
                                         u4991 0E4C                                           _TMR2 001A  
                                         _TMR4 0415                                           _WPUA 020C  
                                         _WPUB 020D                                           _main 0D13  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E            __end_of_INT_DefaultInterruptHandler 087C  
                  _INT_DefaultInterruptHandler 087B                                           start 0056  
                              ??_ajustaValvula 0074                                ___fldiv@new_exp 005F  
              __end_of_INT_SetInterruptHandler 0042                          ??_EPWM1_LoadDutyValue 0074  
                   ??_TMR1_SetInterruptHandler 0074                     ??_TMR4_SetInterruptHandler 0074  
                            MoveValvula@passos 00CE                               ?_calculateHeight 0070  
                __end_of_OSCILLATOR_Initialize 0049                                  ___fltol@sign1 0076  
                              __end_of___fladd 04B7                                          ?_main 0070  
                              __end_of___fldiv 065B                                __end_of___flmul 02AB  
                              __end_of___flsub 0A17                                __end_of___fltol 0CA3  
                              _TMR1_StartTimer 006C                                          _T1CON 0018  
                                        _T2CON 001C                                          _T4CON 0417  
                                        i1l201 08D0                                          i1l131 0027  
                                        i1l220 0002                                          i1l140 0054  
                                        i1l133 0038                                          i1l214 0920  
                                        i1l134 0054                                          i1l135 0046  
                                        i1l128 0012                                          i1l361 09D7  
                                        i1l442 0003                                          i1l372 0909  
                                        i1l436 08BF                                          i1l381 0003  
                                        i1l453 000C                                          i1l358 09D6  
                                        i1l375 087A                                          i1l463 087B  
                                        i1l368 0B80                                          i1l457 0894  
                                        i1l378 0007                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TMR1H 0017  
                                        _TMR1L 0016                                          _TRISA 008C  
                                        _TRISB 008D                                          _TXREG 019A  
                                        _TXSTA 019E                                _TMR4_Initialize 08E2  
                             __end_of_TMR1_ISR 0921                               __end_of_TMR4_ISR 08C0  
                                        _dados 00A0                                 _WDT_Initialize 005D  
                                 _soundspeed_t 00C8                        __end_of_TMR1_Initialize 099E  
                                        pclath 000A                                          status 0003  
                                        wtemp0 007E                                _TMR1_WriteTimer 08D1  
                           MoveValvula@direcao 0073                                __initialization 0059  
                                 __end_of_main 0D97                        ??_processaRecepcaoUSART 0073  
                             __end_of_Controle 0A5D                        __end_of_TMR2_Initialize 0057  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 0074  
                                       ??_main 0154                                  _erroAcumulado 00BA  
                       __end_of_WDT_Initialize 0061                                      ??_INT_ISR 0070  
                             _valvula_desejada 0138                                  ??_MoveValvula 0072  
    __end_of_EUSART_DefaultFramingErrorHandler 087B            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 087A  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 014A                                         _ADRESH 009C  
                                       _ADRESL 009B                                         _CCPR1H 0292  
                                       _CCPR1L 0291                                         _ANSELA 018C  
                                       _ANSELB 018D                     __end_of_EUSART_is_rx_ready 0016  
                                       _BORCON 0116                                         _T1GCON 0019  
                      TMR1_WriteTimer@timerVal 0072                                         i1l3400 08C0  
                            _temperature_index 00D2                                         i1l3170 0888  
                                       i1l3402 08C5                                         i1l3410 08CC  
                                       i1l3172 088F                                         i1l3412 08CE  
                                       i1l3404 08C6                                         i1l3166 0004  
                                       i1l3406 08C8                                         i1l3430 08B1  
                                       i1l3168 0000                                         i1l3408 08CA  
                                       i1l3440 0914                                         i1l3432 08B3  
                                       i1l3426 0008                                         i1l3442 091B  
                                       i1l3434 08BA                                         i1l3428 0009  
                                       i1l3436 090A                                         i1l3470 09C9  
                                       i1l3438 090C                                         i1l2760 0905  
                                       i1l3480 0B4A                                         i1l3472 09CC  
                                       i1l2762 0906                                         i1l2754 08F5  
                                       i1l3490 0B66                                         i1l3482 0B4F  
                                       i1l3474 09D2                                         i1l3466 09BA  
                                       i1l3570 0006                                         i1l2756 08FD  
                                       i1l3492 0B6C                                         i1l3484 0B55  
                                       i1l3476 09D3                                         i1l3468 09C1  
                                       i1l3580 0020                                         i1l3572 000A  
                                       i1l2758 08FF                                         i1l3494 0B76  
                                       i1l3486 0B5B                                         i1l3478 0B44  
                                       i1l3590 004B                                         i1l3582 002C  
                                       i1l3574 000E                                         i1l3496 0B7D  
                                       i1l3488 0B60                                         i1l3592 0050  
                                       i1l3584 0031                                         i1l3576 0016  
                                       i1l3586 003D                                         i1l3578 001B  
                                       i1l3588 0042                                         u315_20 088F  
                                       u315_21 088E                                         u253_20 0905  
                                       u253_21 0904                       ajustaValvula@novaPosicao 0077  
                                       u370_20 09C1                                         u362_20 08C5  
                                       u370_21 09C0                                         u362_21 08C4  
                                       u371_20 09D2                                         u363_20 08BA  
                                       u371_21 09D1                                         u363_21 08B9  
                                       u372_20 0B4F                                         u364_20 091B  
                                       u372_21 0B4E                                         u364_21 091A  
                                       u373_20 0B60                                         u373_21 0B5F  
                                       u374_20 0B76                                         u390_20 0031  
                                       u374_21 0B75                                         u390_21 0030  
                                       u391_20 003D                                         u391_21 003C  
                                       u392_20 0042                                         u384_20 000A  
                                       u392_21 0041                                         u384_21 0009  
                                       u393_20 004B                                         u385_20 000E  
                                       u393_21 004A                                         u385_21 000D  
                                       u394_20 0050                                         u386_20 0016  
                                       _OSCCON 0099                                         u394_21 004F  
                                       u386_21 0015                                         u387_20 001B  
                                       u387_21 001A                                         u388_20 0020  
                                       u388_21 001F                                         u389_20 002C  
                                       u389_21 002B                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                             __end_of___xxtofl 0EC7                              ajustaPwm@sinalPWM 0022  
                                 _FechaValvula 0895           __end_of_TMR1_DefaultInterruptHandler 0003  
                 _TMR1_DefaultInterruptHandler 0002                                   _CCPTMRS0bits 029E  
                                       ___flge 0D97                      i1TMR1_WriteTimer@timerVal 0070  
                      __end_of_TMR1_StartTimer 006F                                      ??___fladd 0055  
                                    ??___fldiv 0055                                      ??___flmul 003B  
                                    ??___flsub 0076                                      ??___fltol 006B  
                          _EUSART_Transmit_ISR 09BA                        __end_of_TMR4_Initialize 08F5  
                                ?_INT_CallBack 0070           __end_of_TMR4_DefaultInterruptHandler 0004  
                 _TMR4_DefaultInterruptHandler 0003                                   _calculateToF 0BD8  
                                _LUTsoundspeed 07AE                                ?_WDT_Initialize 0070  
                     ADC_GetConversion@channel 0075        INT_SetInterruptHandler@InterruptHandler 0072  
     TMR4_SetInterruptHandler@InterruptHandler 0072       TMR1_SetInterruptHandler@InterruptHandler 0072  
                      __end_of_TMR1_WriteTimer 08E2                           ?_EUSART_Transmit_ISR 0070  
                                   ___flge@ff1 0020                                     ___flge@ff2 0024  
                             ?_TMR1_Initialize 0070                               ??_ControleAjuste 0078  
                                 ___xxtofl@arg 002F                                   ___xxtofl@exp 002E  
                            _SYSTEM_Initialize 09D8                                   ___xxtofl@val 0025  
                      __end_of__initialization 006C                            __end_of_MoveValvula 0D13  
                           ?_SYSTEM_Initialize 0070                                 _LeituraValvula 0B81  
                                   ___fltol@f1 0067           __end_of_EUSART_SetTxInterruptHandler 003C  
                 _EUSART_SetTxInterruptHandler 0036                              ?_EPWM1_Initialize 0070  
                               __pcstackCOMMON 0070                                 Controle@ajuste 0152  
                          ??_SYSTEM_Initialize 0074                                      ?_TMR1_ISR 0070  
                ?_TMR1_DefaultInterruptHandler 0070                                      ?_TMR4_ISR 0070  
                           ??_EPWM1_Initialize 0072                               ?_TMR2_Initialize 0070  
                               ??_INT_CallBack 0070                                 _OPTION_REGbits 0095  
                         _eusartRxStatusBuffer 0120                  ?_TMR4_DefaultInterruptHandler 0070  
              ??_EUSART_SetOverrunErrorHandler 0074                         processaRecepcaoUSART@i 0074  
                                   _calibracao 00D0                      __end_of_SYSTEM_Initialize 09F7  
                        ??_EUSART_Transmit_ISR 0070                                   ?_AbreValvula 0070  
                                   __pbssBANK1 00A0                                     __pbssBANK2 0120  
                                    ?_Controle 0070                         __end_of_LeituraValvula 0BD8  
                        _TMR4_InterruptHandler 00EB                              __end_of__Umul8_16 0AA4  
                                   __pmaintext 0D13                                        ?___flge 0020  
                ?_EUSART_SetTxInterruptHandler 0072               _EUSART_TxDefaultInterruptHandler 0150  
                             ?_TMR1_StartTimer 0070                                     ??_TMR1_ISR 0072  
                                   ??_TMR4_ISR 0070                                     __pintentry 0004  
                                      _CCP1CON 0293                                        _ECCP1AS 0295  
                                      _BAUDCON 019F                               ?_TMR4_Initialize 0070  
                                      _APFCON0 011D                                        _APFCON1 011E  
                 ??_EUSART_DefaultErrorHandler 0070                                  _eusartRxCount 00D4  
                           _temperature_kelvin 00BE                                      ?___xxtofl 0025  
                                      _INT_ISR 0008                                        _OSCTUNE 0098  
                                      _PWM1CON 0294                       ??_EUSART_SetErrorHandler 0074  
                                  _MoveValvula 0CA3                               ?_TMR1_WriteTimer 0072  
                                   ??_Controle 0079                    __end_of_EPWM1_LoadDutyValue 0938  
                              ?_LeituraValvula 0070                        ControleAjuste@deltaErro 00DD  
                     ??_atualizaDadosRecebidos 0076                           _ADC_InterruptHandler 00CC  
                            __end_of_ajustaPwm 0B08                          __end_of_ajustaValvula 0A3A  
                                      ___fladd 02AB                                        ___fldiv 04B7  
                                      ___flmul 0070                                        ___flsub 09F7  
                                      ___fltol 0C34                  __end_of_processaRecepcaoUSART 0AD3  
                     TMR1_ReadTimer@readValLow 0023                                        __ptext1 0AA4  
                                      __ptext2 0A5D                                        __ptext3 0BD8  
                                      __ptext4 08D1                                        __ptext5 006F  
                                      __ptext6 006C                                        __ptext7 094F  
                                      __ptext8 065B                                        __ptext9 0D97  
               ??_TMR1_DefaultInterruptHandler 0070                      TMR1_ReadTimer@readValHigh 0022  
                                    _T1CONbits 0018                          _OSCILLATOR_Initialize 0042  
                                    _T2CONbits 001C                        ControleAjuste@erroAtual 00E5  
                                   ??___xxtofl 0029                                      _T4CONbits 0417  
                     ??_PIN_MANAGER_Initialize 0072                      ?_TMR1_SetInterruptHandler 0072  
                      _INT_SetInterruptHandler 003C                      ?_TMR4_SetInterruptHandler 0072  
                                      _posicao 00C2                                        _valvula 013C  
                                      clrloop0 0073                           end_of_initialization 006C  
               ??_TMR4_DefaultInterruptHandler 0070          __end_of_EUSART_SetOverrunErrorHandler 0030  
                _EUSART_SetOverrunErrorHandler 002A                           __end_of_INT_CallBack 0895  
                            _EUSART_Initialize 0B08                     LeituraValvula@valor_sensor 0021  
                           ?_EUSART_Initialize 0070                                      _RCSTAbits 019D  
                           _EUSART_is_rx_ready 000D                LeituraValvula@forcar_calibracao 0020  
                          ??_EUSART_Initialize 0074                               ??_WDT_Initialize 0072  
               ??_EUSART_SetTxInterruptHandler 0074                                      _PORTBbits 000D  
                          ?_EUSART_is_rx_ready 0070                                    ___fladd@grs 0060  
                               _TMR1_ReadTimer 094F                                  ___xxtofl@sign 002D  
                        _novosDadosCadastrados 00CF                                    ___fldiv@grs 0061  
                                  ___fldiv@rem 005A                                    ___flmul@grs 0042  
                    __end_of_EUSART_Initialize 0B44                           ??_EUSART_is_rx_ready 0072  
                                    _TXSTAbits 019E                                     _soundspeed 0140  
                               __end_of___flge 0E22             __end_of_EUSART_DefaultErrorHandler 0004  
                   _EUSART_DefaultErrorHandler 0000                                 _ADC_Initialize 0016  
                               _TMR1_StopTimer 006F                         ?_OSCILLATOR_Initialize 0070  
                       __end_of_TMR1_ReadTimer 0968                      ??_INT_SetInterruptHandler 0074  
                          start_initialization 0059                                  ??_EUSART_Read 0072  
 EUSART_SetRxInterruptHandler@interruptHandler 0072   EUSART_SetTxInterruptHandler@interruptHandler 0072  
                 EPWM1_LoadDutyValue@dutyValue 0072                              ??_calculateHeight 00DB  
                                 _erroAnterior 00B6                   ?_INT_DefaultInterruptHandler 0070  
               ?_EUSART_SetOverrunErrorHandler 0072                     _EUSART_FramingErrorHandler 014C  
                                     ??___flge 0072                         _EUSART_SetErrorHandler 001E  
                       __end_of_ADC_Initialize 001E                                      __Umul8_16 0A80  
                       __end_of_TMR1_StopTimer 0072                     __end_of_EXT_INT_Initialize 0888  
                              ?_TMR1_ReadTimer 0072                                      ___fladd@a 0051  
                                    ___fladd@b 004D                                      ___fldiv@a 004D  
                                    ___fldiv@b 0051                    __end_of_EUSART_Transmit_ISR 09D8  
                                    ___flmul@a 0037                         _atualizaDadosRecebidos 0061  
                                    ___flmul@b 0033                                    __pbssCOMMON 0079  
                                    ___flsub@a 0061                                      ___flsub@b 0065  
                                    ___latbits 0001                                       ?_INT_ISR 0070  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00DB  
                                __pcstackBANK2 0152                               ??_LeituraValvula 0076  
                                 ?_MoveValvula 0070                     __end_of_EUSART_Receive_ISR 0B81  
                               _time_of_flight 0144               _EUSART_RxDefaultInterruptHandler 014E  
                          __end_of_EUSART_Read 0A80                                      __pnvBANK1 00E9  
                                    __pnvBANK2 0148                   __end_of_EUSART_RxDataHandler 090A  
                       _PIN_MANAGER_Initialize 0938                  ??_INT_DefaultInterruptHandler 0070  
                         EUSART_Read@readValue 0072               __end_of_TMR1_SetInterruptHandler 004F  
                                     ?___fladd 004D               __end_of_TMR4_SetInterruptHandler 005D  
                                     ?___fldiv 004D                                       ?___flmul 0033  
                                     ?___flsub 0061                                       ?___fltol 0067  
                                   ?__Umul8_16 0072                                ?_ADC_Initialize 0070  
                                 _eusartRxHead 007A                                ?_TMR1_StopTimer 0070  
                                 _eusartTxHead 007B                                      _ajustaPwm 0AD3  
                                 _eusartRxTail 0079                                   _eusartTxTail 00D6  
                 ??_INTERRUPT_InterruptManager 0072                        _eusartTxBufferRemaining 00D5  
                                 _INT_CallBack 0888                                 _eusartRxBuffer 0128  
                            i1_TMR1_WriteTimer 08C0                                 _eusartTxBuffer 0130  
                               _ajustaPwm$1172 0020                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 0072                             ?i1_TMR1_WriteTimer 0070  
                                    clear_ram0 0072                                       _PIE1bits 0091  
                                     _PIE3bits 0093                              _eusartRxLastError 00D3  
                                ?_FechaValvula 0070                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0074                                       _PIR3bits 0013  
                          ??i1_TMR1_WriteTimer 0072      __end_of_EUSART_DefaultOverrunErrorHandler 0008  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 0004                                       _TMR1_ISR 090A  
                                     _TMR4_ISR 08B1                                       _PSTR1CON 0296  
                                   ?_ajustaPwm 0076                              ??_TMR1_Initialize 0074  
                                   _ADCON0bits 009D                          _processaRecepcaoUSART 0AA4  
                        __end_of_LUTsoundspeed 087A                                  ?_calculateToF 0070  
                             _EPWM1_Initialize 08A3                                    _EUSART_Read 0A5D  
                    __end_ofi1_TMR1_WriteTimer 08D1                                       _Controle 0A3A  
                            ??_TMR2_Initialize 0072                            _ControleAjuste$1897 00E1  
                               _valvula_aberta 00D1                                 ??_FechaValvula 0074  
                            _ADC_GetConversion 0968                          TMR1_ReadTimer@readVal 0020  
                      ??_OSCILLATOR_Initialize 0072                                    ??__Umul8_16 0074  
                          _EUSART_ErrorHandler 0148                             ?_ADC_GetConversion 0072  
                  ?_EUSART_DefaultErrorHandler 0070                       _TMR1_SetInterruptHandler 0049  
                     _TMR4_SetInterruptHandler 0057                                 ??_calculateToF 0079  
                              _calculateHeight 065B                          _TMR1_InterruptHandler 00ED  
                          ??_ADC_GetConversion 0074                                       ___xxtofl 0E22  
                         _EUSART_RxDataHandler 08F5                                       __ptext10 04B7  
                                     __ptext11 0061                                       __ptext20 0042  
                                     __ptext12 09D8                                       __ptext21 087C  
                                     __ptext13 005D                                     _T1GCONbits 0019  
                                     __ptext30 0016                                       __ptext22 003C  
                                     __ptext14 08E2                                       __ptext31 0895  
                                     __ptext23 0B08                                       __ptext15 0057  
                                     __ptext40 09F7                                       __ptext32 000D  
                                     __ptext24 0036                                       __ptext16 004F  
                                     __ptext41 02AB                                       __ptext33 0A3A  
                                     __ptext25 0030                                       __ptext17 0983  
                                     __ptext50 0003                                       __ptext42 0070  
                                     __ptext34 0A17                                       __ptext26 002A  
                                     __ptext18 0049                                       __ptext51 090A  
                                     __ptext43 0A80                                       __ptext35 0AD3  
                                     __ptext27 0024                                       __ptext19 0938  
                                     __ptext60 087A                                       __ptext52 08C0  
                                     __ptext44 099E                                       __ptext36 0921  
                                     __ptext28 001E                                       __ptext61 0000  
                                     __ptext53 0002                                       __ptext45 0B81  
                                     __ptext37 0EC7                                       __ptext29 08A3  
                                     __ptext62 08F5                                       __ptext54 0008  
                                     __ptext46 0CA3                                       __ptext38 0E22  
                                     __ptext55 0888                                       __ptext47 0968  
                                     __ptext39 0C34                                       __ptext56 087B  
                                     __ptext57 09BA                                       __ptext49 08B1  
                                     __ptext58 0B44                                       __ptext59 0004  
                                ??_AbreValvula 0077                              ??_TMR1_StartTimer 0072  
                            ??_TMR4_Initialize 0074                      __end_of_ADC_GetConversion 0983  
                      ?_EUSART_SetErrorHandler 0072  EUSART_SetOverrunErrorHandler@interruptHandler 0072  
                               _ControleAjuste 0EC7                                  _ajustaValvula 0A17  
                             ??_TMR1_ReadTimer 0074                                       int$flags 007E  
           __end_of_INTERRUPT_InterruptManager 0056                     _INTERRUPT_InterruptManager 0004  
                                  ??_ajustaPwm 0078          __end_of_EUSART_SetFramingErrorHandler 002A  
                _EUSART_SetFramingErrorHandler 0024                                       _rxbuffer 00AF  
                            ??_TMR1_WriteTimer 0074                         ?_processaRecepcaoUSART 0070  
                      ?_atualizaDadosRecebidos 0070                                    _passo_atual 00C4  
                           _ajustaValvula$1176 0075                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0070                           _INT_InterruptHandler 00E9  
                           _EXT_INT_Initialize 087C                                       intlevel1 0000  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0024  
                          ?_EXT_INT_Initialize 0070                            __end_of_AbreValvula 09BA  
                       __end_of_ControleAjuste 1000                               ??_ADC_Initialize 0072  
         __end_of_EUSART_SetRxInterruptHandler 0036                   _EUSART_SetRxInterruptHandler 0030  
                             ??_TMR1_StopTimer 0072                                 ?_ajustaValvula 0072  
                          ajustaValvula@ajuste 0072                        __end_of_calculateHeight 07AE  
                           _EUSART_Receive_ISR 0B44  EUSART_SetFramingErrorHandler@interruptHandler 0072  
                     ?_INT_SetInterruptHandler 0072                 __end_of_atualizaDadosRecebidos 006C  
                                __pstringtext1 07AE                         __Umul8_16@multiplicand 0072  
                         ??_EXT_INT_Initialize 0074                                    _temperature 00D7  
                          ?_EUSART_Receive_ISR 0070                           __end_of_FechaValvula 08A3  
                          _EPWM1_LoadDutyValue 0921                                  ___fladd@signs 005D  
               __end_of_PIN_MANAGER_Initialize 094F                                   ___fladd@aexp 005E  
                                 ___fladd@bexp 005F                           ??_EUSART_Receive_ISR 0070  
                         __Umul8_16@multiplier 0024                           __end_of_calculateToF 0C34  
                              _TMR1_Initialize 0983                                ?_ControleAjuste 00DB  
                     __end_of_EPWM1_Initialize 08B1                           ?_EPWM1_LoadDutyValue 0072  
                            __Umul8_16@product 0020  
